//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.OutputFormat25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityFilter", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum ActivityFilter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="OutputFormat25ServiceReference.OutputFormat")]
    public interface OutputFormat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetMetadat" +
            "a", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetMetadat" +
            "aResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetMetadat" +
            "aInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataResponse GetMetadata(Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetMetadat" +
            "a", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetMetadat" +
            "aResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/RetrieveMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/RetrieveMe" +
            "tadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/RetrieveMe" +
            "tadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] outputFormatIds, Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/RetrieveMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/RetrieveMe" +
            "tadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] outputFormatIds, Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/FindRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/FindInfoSh" +
            "areFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Find(Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/FindRespon" +
            "se")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatIdInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetOutputFormatId(string outputFormatName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatIdResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> GetOutputFormatIdAsync(string outputFormatName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatName", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatNameInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetOutputFormatName(string outputFormatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatName", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/GetOutputF" +
            "ormatNameResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> GetOutputFormatNameAsync(string outputFormatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/CreateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/CreateInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Create(string outputFormatName, string outputEDT, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/CreateResp" +
            "onse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> CreateAsync(string outputFormatName, string outputEDT, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/UpdateResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/UpdateInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Update(string outputFormatId, string outputEDT, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/UpdateResp" +
            "onse")]
        System.Threading.Tasks.Task UpdateAsync(string outputFormatId, string outputEDT, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/DeleteResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.OutputFormat25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/DeleteInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string outputFormatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/OutputFormat/DeleteResp" +
            "onse")]
        System.Threading.Tasks.Task DeleteAsync(string outputFormatId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string outputFormatId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlRequestedMetadata;
        
        public GetMetadataRequest() {
        }
        
        public GetMetadataRequest(string outputFormatId, string xmlRequestedMetadata) {
            this.outputFormatId = outputFormatId;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string xmlObjectList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string outputEDT;
        
        public GetMetadataResponse() {
        }
        
        public GetMetadataResponse(string xmlObjectList, string outputEDT) {
            this.xmlObjectList = xmlObjectList;
            this.outputEDT = outputEDT;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OutputFormatChannel : Trisoft.ISHRemote.OutputFormat25ServiceReference.OutputFormat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OutputFormatClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.OutputFormat25ServiceReference.OutputFormat>, Trisoft.ISHRemote.OutputFormat25ServiceReference.OutputFormat {
        
        public OutputFormatClient() {
        }
        
        public OutputFormatClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OutputFormatClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutputFormatClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OutputFormatClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataResponse Trisoft.ISHRemote.OutputFormat25ServiceReference.OutputFormat.GetMetadata(Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadata(request);
        }
        
        public string GetMetadata(string outputFormatId, string xmlRequestedMetadata, out string outputEDT) {
            Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest inValue = new Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest();
            inValue.outputFormatId = outputFormatId;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataResponse retVal = ((Trisoft.ISHRemote.OutputFormat25ServiceReference.OutputFormat)(this)).GetMetadata(inValue);
            outputEDT = retVal.outputEDT;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.OutputFormat25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadataAsync(request);
        }
        
        public string RetrieveMetadata(string[] outputFormatIds, Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(outputFormatIds, activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] outputFormatIds, Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataAsync(outputFormatIds, activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string Find(Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.OutputFormat25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.FindAsync(activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string GetOutputFormatId(string outputFormatName) {
            return base.Channel.GetOutputFormatId(outputFormatName);
        }
        
        public System.Threading.Tasks.Task<string> GetOutputFormatIdAsync(string outputFormatName) {
            return base.Channel.GetOutputFormatIdAsync(outputFormatName);
        }
        
        public string GetOutputFormatName(string outputFormatId) {
            return base.Channel.GetOutputFormatName(outputFormatId);
        }
        
        public System.Threading.Tasks.Task<string> GetOutputFormatNameAsync(string outputFormatId) {
            return base.Channel.GetOutputFormatNameAsync(outputFormatId);
        }
        
        public string Create(string outputFormatName, string outputEDT, string xmlMetadata) {
            return base.Channel.Create(outputFormatName, outputEDT, xmlMetadata);
        }
        
        public System.Threading.Tasks.Task<string> CreateAsync(string outputFormatName, string outputEDT, string xmlMetadata) {
            return base.Channel.CreateAsync(outputFormatName, outputEDT, xmlMetadata);
        }
        
        public void Update(string outputFormatId, string outputEDT, string xmlMetadata) {
            base.Channel.Update(outputFormatId, outputEDT, xmlMetadata);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(string outputFormatId, string outputEDT, string xmlMetadata) {
            return base.Channel.UpdateAsync(outputFormatId, outputEDT, xmlMetadata);
        }
        
        public void Delete(string outputFormatId) {
            base.Channel.Delete(outputFormatId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string outputFormatId) {
            return base.Channel.DeleteAsync(outputFormatId);
        }
    }
}
