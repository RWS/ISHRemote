//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.Settings25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TargetStatus", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum TargetStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContentObject = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Publication = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TranslationJob = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="Settings25ServiceReference.Settings")]
    public interface Settings {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTimeZone", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTimeZoneRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTimeZoneInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlSettings")]
        string GetTimeZone();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTimeZone", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTimeZoneRes" +
            "ponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlSettings")]
        System.Threading.Tasks.Task<string> GetTimeZoneAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetMetadataRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetMetadataInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadata(string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetMetadataRes" +
            "ponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetMetadataAsync(string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/SetMetadata3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/SetMetadata3Re" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/SetMetadata3In" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadata3(string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/SetMetadata3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/SetMetadata3Re" +
            "sponse")]
        System.Threading.Tasks.Task SetMetadata3Async(string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetPossibleTar" +
            "getStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetPossibleTar" +
            "getStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetPossibleTar" +
            "getStatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        string GetPossibleTargetStatuses(Trisoft.ISHRemote.Settings25ServiceReference.TargetStatus targetStatus, string ishObjectType, string[] userRoles, string fromStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetPossibleTar" +
            "getStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetPossibleTar" +
            "getStatusesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        System.Threading.Tasks.Task<string> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.Settings25ServiceReference.TargetStatus targetStatus, string ishObjectType, string[] userRoles, string fromStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTranslation" +
            "Statuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTranslation" +
            "StatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTranslation" +
            "StatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationStatuses")]
        string GetTranslationStatuses(string ishType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTranslation" +
            "Statuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/GetTranslation" +
            "StatusesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationStatuses")]
        System.Threading.Tasks.Task<string> GetTranslationStatusesAsync(string ishType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/RetrieveFieldS" +
            "etupByIshType", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/RetrieveFieldS" +
            "etupByIshTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Settings25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/RetrieveFieldS" +
            "etupByIshTypeInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFieldSetup")]
        string RetrieveFieldSetupByIshType(string[] ishTypes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/RetrieveFieldS" +
            "etupByIshType", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Settings/RetrieveFieldS" +
            "etupByIshTypeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlFieldSetup")]
        System.Threading.Tasks.Task<string> RetrieveFieldSetupByIshTypeAsync(string[] ishTypes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SettingsChannel : Trisoft.ISHRemote.Settings25ServiceReference.Settings, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettingsClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.Settings25ServiceReference.Settings>, Trisoft.ISHRemote.Settings25ServiceReference.Settings {
        
        public SettingsClient() {
        }
        
        public SettingsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SettingsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SettingsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTimeZone() {
            return base.Channel.GetTimeZone();
        }
        
        public System.Threading.Tasks.Task<string> GetTimeZoneAsync() {
            return base.Channel.GetTimeZoneAsync();
        }
        
        public string GetMetadata(string xmlRequestedMetadata) {
            return base.Channel.GetMetadata(xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetMetadataAsync(string xmlRequestedMetadata) {
            return base.Channel.GetMetadataAsync(xmlRequestedMetadata);
        }
        
        public void SetMetadata3(string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadata3(xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task SetMetadata3Async(string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadata3Async(xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public string GetPossibleTargetStatuses(Trisoft.ISHRemote.Settings25ServiceReference.TargetStatus targetStatus, string ishObjectType, string[] userRoles, string fromStatus) {
            return base.Channel.GetPossibleTargetStatuses(targetStatus, ishObjectType, userRoles, fromStatus);
        }
        
        public System.Threading.Tasks.Task<string> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.Settings25ServiceReference.TargetStatus targetStatus, string ishObjectType, string[] userRoles, string fromStatus) {
            return base.Channel.GetPossibleTargetStatusesAsync(targetStatus, ishObjectType, userRoles, fromStatus);
        }
        
        public string GetTranslationStatuses(string ishType) {
            return base.Channel.GetTranslationStatuses(ishType);
        }
        
        public System.Threading.Tasks.Task<string> GetTranslationStatusesAsync(string ishType) {
            return base.Channel.GetTranslationStatusesAsync(ishType);
        }
        
        public string RetrieveFieldSetupByIshType(string[] ishTypes) {
            return base.Channel.RetrieveFieldSetupByIshType(ishTypes);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveFieldSetupByIshTypeAsync(string[] ishTypes) {
            return base.Channel.RetrieveFieldSetupByIshTypeAsync(ishTypes);
        }
    }
}
