//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.DocumentObj25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusFilter", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum StatusFilter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedStates = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedOrDraftStates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHOutOfDateOrReleasedStates = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNoStatusFilter = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFolder", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaseFolder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favorites = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditorTemplate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinkType", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum LinkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContentLink = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HyperLink = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaselineAutoCompleteMode", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaselineAutoCompleteMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHFirstVersion = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLatestReleased = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLatestAvailable = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="DocumentObj25ServiceReference.DocumentObj")]
    public interface DocumentObj {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CreateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CreateInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateResponse Create(Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CreateRespo" +
            "nse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateResponse> CreateAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateByIsh" +
            "LngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateByIsh" +
            "LngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateByIsh" +
            "LngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UpdateByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateByIsh" +
            "LngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateByIsh" +
            "LngRefResponse")]
        System.Threading.Tasks.Task UpdateByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateResponse Update(Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UpdateRespo" +
            "nse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateResponse> UpdateAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteByIsh" +
            "LngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteByIsh" +
            "LngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteByIsh" +
            "LngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteByIsh" +
            "LngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteByIsh" +
            "LngRefResponse")]
        System.Threading.Tasks.Task DeleteByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/DeleteRespo" +
            "nse")]
        System.Threading.Tasks.Task DeleteAsync(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefResponse")]
        System.Threading.Tasks.Task SetMetadataByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataResponse SetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "Response")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataResponse> SetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/SetMetadata" +
            "ByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        System.Threading.Tasks.Task<string> SetMetadataByIshLngRefsAsync(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UndoCheckOutByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tByIshLngRefResponse")]
        System.Threading.Tasks.Task UndoCheckOutByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "t", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UndoCheckOut(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "t", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/UndoCheckOu" +
            "tResponse")]
        System.Threading.Tasks.Task UndoCheckOutAsync(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInByIs" +
            "hLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInByIs" +
            "hLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInByIs" +
            "hLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void CheckInByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInByIs" +
            "hLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInByIs" +
            "hLngRefResponse")]
        System.Threading.Tasks.Task CheckInByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckIn", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void CheckIn(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckIn", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckInResp" +
            "onse")]
        System.Threading.Tasks.Task CheckInAsync(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutByI" +
            "shLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutByI" +
            "shLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutByI" +
            "shLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string CheckOutByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutByI" +
            "shLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutByI" +
            "shLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> CheckOutByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOut", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutResponse CheckOut(Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOut", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/CheckOutRes" +
            "ponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutResponse> CheckOutAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "ByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "ByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "ByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "ByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "ByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetMetadataByIshLngRefAsync(long lngRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataResponse GetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetMetadata" +
            "Response")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/TryGetMetad" +
            "ata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/TryGetMetad" +
            "ataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/TryGetMetad" +
            "ataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataResponse TryGetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/TryGetMetad" +
            "ata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/TryGetMetad" +
            "ataResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataResponse> TryGetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshVersionRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshVersionRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshVersionRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshVersionRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataByIshVersionRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataByIshVersionRefsAsync(long[] versionRefs, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveVer" +
            "sionMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveVer" +
            "sionMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveVer" +
            "sionMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveVer" +
            "sionMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveVer" +
            "sionMetadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveVersionMetadataAsync(string[] logicalIds, string version, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetDataObje" +
            "ctInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetDataObje" +
            "ctInfoByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetDataObje" +
            "ctInfoByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        string GetDataObjectInfoByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetDataObje" +
            "ctInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetDataObje" +
            "ctInfoByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        System.Threading.Tasks.Task<string> GetDataObjectInfoByIshLngRefAsync(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveDat" +
            "aObjectInfoByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveDat" +
            "aObjectInfoByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveDat" +
            "aObjectInfoByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        string RetrieveDataObjectInfoByIshLngRefs(long[] lngRefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveDat" +
            "aObjectInfoByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveDat" +
            "aObjectInfoByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        System.Threading.Tasks.Task<string> RetrieveDataObjectInfoByIshLngRefsAsync(long[] lngRefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetObject", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetObjectRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetObjectIn" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectResponse GetObject(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetObject", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetObjectRe" +
            "sponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectResponse> GetObjectAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ects", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveObjects(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ects", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveObjectsAsync(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveObjectsByIshLngRefs(long[] lngRefs, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveObjectsByIshLngRefsAsync(long[] lngRefs, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByRevisionIds", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByRevisionIdsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByRevisionIdsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveObjectsByRevisionIds(string[] revisionIds, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByRevisionIds", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveObj" +
            "ectsByRevisionIdsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveObjectsByRevisionIdsAsync(string[] revisionIds, string xmlProductDefinition, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveRev" +
            "isionInfoByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveRev" +
            "isionInfoByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveRev" +
            "isionInfoByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveRevisionInfoByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveRev" +
            "isionInfoByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveRev" +
            "isionInfoByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveRevisionInfoByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ions", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjLocationList")]
        string FolderLocations(string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ions", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjLocationList")]
        System.Threading.Tasks.Task<string> FolderLocationsAsync(string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FindRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FindInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Find(string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FindRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> FindAsync(string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveMet" +
            "adataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveLan" +
            "guageMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveLan" +
            "guageMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveLan" +
            "guageMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveLanguageMetadata(string[] logicalIds, string version, string[] languages, string[] resolutions, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveLan" +
            "guageMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RetrieveLan" +
            "guageMetadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveLanguageMetadataAsync(string[] logicalIds, string version, string[] languages, string[] resolutions, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ion", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationResponse FolderLocation(Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ion", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/FolderLocat" +
            "ionResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationResponse> FolderLocationAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingL" +
            "ogicalId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingL" +
            "ogicalIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingL" +
            "ogicalIdInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string ContainingLogicalId(string logicalId, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingL" +
            "ogicalId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingL" +
            "ogicalIdResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> ContainingLogicalIdAsync(string logicalId, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingC" +
            "ondition", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingC" +
            "onditionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingC" +
            "onditionInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string ContainingCondition(string conditionName, string conditionValue, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingC" +
            "ondition", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingC" +
            "onditionResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> ContainingConditionAsync(string conditionName, string conditionValue, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingV" +
            "ariable", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingV" +
            "ariableResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingV" +
            "ariableInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string ContainingVariable(string variable, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingV" +
            "ariable", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/ContainingV" +
            "ariableResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> ContainingVariableAsync(string variable, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetChildren" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetChildren" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetChildren" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="logicalIds")]
        string[] GetChildren(long lngRef, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetChildren" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetChildren" +
            "Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="logicalIds")]
        System.Threading.Tasks.Task<string[]> GetChildrenAsync(long lngRef, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesResponse GetPossibleTargetStatuses(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesResponse> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        string GetPossibleTargetStatusesByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/GetPossible" +
            "TargetStatusesByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        System.Threading.Tasks.Task<string> GetPossibleTargetStatusesByIshLngRefAsync(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RaisePublis" +
            "hEvent", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RaisePublis" +
            "hEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.DocumentObj25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RaisePublis" +
            "hEventInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        long RaisePublishEvent(
                    string logicalId, 
                    string version, 
                    string outputFormat, 
                    string[] languages, 
                    string[] resources, 
                    string baselineId, 
                    Trisoft.ISHRemote.DocumentObj25ServiceReference.BaselineAutoCompleteMode baselineAutoCompleteMode, 
                    string workingLanguage, 
                    string workingResolution, 
                    string[] fallbackLanguages, 
                    string[] resourceFallbackLanguages, 
                    string[] illustrationFallbackLanguages, 
                    string xmlProductDefinition, 
                    string compareVersion, 
                    string compareVersionStartDocument, 
                    string[] compareVersionResources, 
                    string compareVersionBaselineId, 
                    string compareVersionXmlProductDefinition, 
                    string eventType, 
                    string xmlParameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RaisePublis" +
            "hEvent", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/DocumentObj/RaisePublis" +
            "hEventResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<long> RaisePublishEventAsync(
                    string logicalId, 
                    string version, 
                    string outputFormat, 
                    string[] languages, 
                    string[] resources, 
                    string baselineId, 
                    Trisoft.ISHRemote.DocumentObj25ServiceReference.BaselineAutoCompleteMode baselineAutoCompleteMode, 
                    string workingLanguage, 
                    string workingResolution, 
                    string[] fallbackLanguages, 
                    string[] resourceFallbackLanguages, 
                    string[] illustrationFallbackLanguages, 
                    string xmlProductDefinition, 
                    string compareVersion, 
                    string compareVersionStartDocument, 
                    string[] compareVersionResources, 
                    string compareVersionBaselineId, 
                    string compareVersionXmlProductDefinition, 
                    string eventType, 
                    string xmlParameters);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CreateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long folderRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string ishType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=6)]
        public string xmlMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=7)]
        public string edt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=8)]
        public byte[] data;
        
        public CreateRequest() {
        }
        
        public CreateRequest(long folderRef, string ishType, string logicalId, string version, string language, string resolution, string xmlMetadata, string edt, byte[] data) {
            this.folderRef = folderRef;
            this.ishType = ishType;
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlMetadata = xmlMetadata;
            this.edt = edt;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CreateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        public CreateResponse() {
        }
        
        public CreateResponse(string logicalId, string version) {
            this.logicalId = logicalId;
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Update", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class UpdateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlRequiredCurrentMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=6)]
        public string edt;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=7)]
        public byte[] data;
        
        public UpdateRequest() {
        }
        
        public UpdateRequest(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlMetadata = xmlMetadata;
            this.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            this.edt = edt;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class UpdateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        public UpdateResponse() {
        }
        
        public UpdateResponse(string version) {
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class SetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlRequiredCurrentMetadata;
        
        public SetMetadataRequest() {
        }
        
        public SetMetadataRequest(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlMetadata = xmlMetadata;
            this.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class SetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        public SetMetadataResponse() {
        }
        
        public SetMetadataResponse(string version) {
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOut", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CheckOutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlRequiredCurrentMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlRequestedMetadata;
        
        public CheckOutRequest() {
        }
        
        public CheckOutRequest(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckOutResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CheckOutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlObjectList;
        
        public CheckOutResponse() {
        }
        
        public CheckOutResponse(string version, string xmlObjectList) {
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlRequestedMetadata;
        
        public GetMetadataRequest() {
        }
        
        public GetMetadataRequest(string logicalId, string version, string language, string resolution, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlObjectList;
        
        public GetMetadataResponse() {
        }
        
        public GetMetadataResponse(string version, string xmlObjectList) {
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryGetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class TryGetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlRequestedMetadata;
        
        public TryGetMetadataRequest() {
        }
        
        public TryGetMetadataRequest(string logicalId, string version, string language, string resolution, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryGetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class TryGetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public bool TryGetMetadataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string xmlObjectList;
        
        public TryGetMetadataResponse() {
        }
        
        public TryGetMetadataResponse(bool TryGetMetadataResult, string version, string xmlObjectList) {
            this.TryGetMetadataResult = TryGetMetadataResult;
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetObject", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlProductDefinition;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlRequestedMetadata;
        
        public GetObjectRequest() {
        }
        
        public GetObjectRequest(string logicalId, string version, string language, string resolution, string xmlProductDefinition, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
            this.xmlProductDefinition = xmlProductDefinition;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetObjectResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlObjectList;
        
        public GetObjectResponse() {
        }
        
        public GetObjectResponse(string version, string xmlObjectList) {
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FolderLocation", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FolderLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        public FolderLocationRequest() {
        }
        
        public FolderLocationRequest(string logicalId) {
            this.logicalId = logicalId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FolderLocationResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FolderLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public Trisoft.ISHRemote.DocumentObj25ServiceReference.BaseFolder baseFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string[] folderPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public long[] folderRefs;
        
        public FolderLocationResponse() {
        }
        
        public FolderLocationResponse(Trisoft.ISHRemote.DocumentObj25ServiceReference.BaseFolder baseFolder, string[] folderPath, long[] folderRefs) {
            this.baseFolder = baseFolder;
            this.folderPath = folderPath;
            this.folderRefs = folderRefs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPossibleTargetStatuses", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetPossibleTargetStatusesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string language;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string resolution;
        
        public GetPossibleTargetStatusesRequest() {
        }
        
        public GetPossibleTargetStatusesRequest(string logicalId, string version, string language, string resolution) {
            this.logicalId = logicalId;
            this.version = version;
            this.language = language;
            this.resolution = resolution;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPossibleTargetStatusesResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetPossibleTargetStatusesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlLovValueList;
        
        public GetPossibleTargetStatusesResponse() {
        }
        
        public GetPossibleTargetStatusesResponse(string version, string xmlLovValueList) {
            this.version = version;
            this.xmlLovValueList = xmlLovValueList;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DocumentObjChannel : Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentObjClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj>, Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj {
        
        public DocumentObjClient() {
        }
        
        public DocumentObjClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentObjClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentObjClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentObjClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.Create(Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest request) {
            return base.Channel.Create(request);
        }
        
        public void Create(long folderRef, string ishType, ref string logicalId, ref string version, string language, string resolution, string xmlMetadata, string edt, byte[] data) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest();
            inValue.folderRef = folderRef;
            inValue.ishType = ishType;
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlMetadata = xmlMetadata;
            inValue.edt = edt;
            inValue.data = data;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).Create(inValue);
            logicalId = retVal.logicalId;
            version = retVal.version;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateResponse> CreateAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.CreateRequest request) {
            return base.Channel.CreateAsync(request);
        }
        
        public void UpdateByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            base.Channel.UpdateByIshLngRef(lngRef, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        public System.Threading.Tasks.Task UpdateByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            return base.Channel.UpdateByIshLngRefAsync(lngRef, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.Update(Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public void Update(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlMetadata = xmlMetadata;
            inValue.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            inValue.edt = edt;
            inValue.data = data;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).Update(inValue);
            version = retVal.version;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateResponse> UpdateAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        public void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata) {
            base.Channel.DeleteByIshLngRef(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteByIshLngRefAsync(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public void Delete(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata) {
            base.Channel.Delete(logicalId, version, language, resolution, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteAsync(logicalId, version, language, resolution, xmlRequiredCurrentMetadata);
        }
        
        public void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadataByIshLngRef(lngRef, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task SetMetadataByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefAsync(lngRef, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.SetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest request) {
            return base.Channel.SetMetadata(request);
        }
        
        public void SetMetadata(string logicalId, ref string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlMetadata = xmlMetadata;
            inValue.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).SetMetadata(inValue);
            version = retVal.version;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataResponse> SetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.SetMetadataRequest request) {
            return base.Channel.SetMetadataAsync(request);
        }
        
        public string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefs(lngRefs, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task<string> SetMetadataByIshLngRefsAsync(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefsAsync(lngRefs, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public void UndoCheckOutByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata) {
            base.Channel.UndoCheckOutByIshLngRef(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task UndoCheckOutByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata) {
            return base.Channel.UndoCheckOutByIshLngRefAsync(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public void UndoCheckOut(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata) {
            base.Channel.UndoCheckOut(logicalId, version, language, resolution, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task UndoCheckOutAsync(string logicalId, string version, string language, string resolution, string xmlRequiredCurrentMetadata) {
            return base.Channel.UndoCheckOutAsync(logicalId, version, language, resolution, xmlRequiredCurrentMetadata);
        }
        
        public void CheckInByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            base.Channel.CheckInByIshLngRef(lngRef, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        public System.Threading.Tasks.Task CheckInByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            return base.Channel.CheckInByIshLngRefAsync(lngRef, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        public void CheckIn(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            base.Channel.CheckIn(logicalId, version, language, resolution, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        public System.Threading.Tasks.Task CheckInAsync(string logicalId, string version, string language, string resolution, string xmlMetadata, string xmlRequiredCurrentMetadata, string edt, byte[] data) {
            return base.Channel.CheckInAsync(logicalId, version, language, resolution, xmlMetadata, xmlRequiredCurrentMetadata, edt, data);
        }
        
        public string CheckOutByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata) {
            return base.Channel.CheckOutByIshLngRef(lngRef, xmlRequiredCurrentMetadata, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> CheckOutByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata) {
            return base.Channel.CheckOutByIshLngRefAsync(lngRef, xmlRequiredCurrentMetadata, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.CheckOut(Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest request) {
            return base.Channel.CheckOut(request);
        }
        
        public string CheckOut(string logicalId, ref string version, string language, string resolution, string xmlRequiredCurrentMetadata, string xmlRequestedMetadata) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).CheckOut(inValue);
            version = retVal.version;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutResponse> CheckOutAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.CheckOutRequest request) {
            return base.Channel.CheckOutAsync(request);
        }
        
        public string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshLngRef(lngRef, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetMetadataByIshLngRefAsync(long lngRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshLngRefAsync(lngRef, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.GetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadata(request);
        }
        
        public string GetMetadata(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).GetMetadata(inValue);
            version = retVal.version;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.TryGetMetadata(Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest request) {
            return base.Channel.TryGetMetadata(request);
        }
        
        public bool TryGetMetadata(string logicalId, ref string version, string language, string resolution, string xmlRequestedMetadata, out string xmlObjectList) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).TryGetMetadata(inValue);
            version = retVal.version;
            xmlObjectList = retVal.xmlObjectList;
            return retVal.TryGetMetadataResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataResponse> TryGetMetadataAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.TryGetMetadataRequest request) {
            return base.Channel.TryGetMetadataAsync(request);
        }
        
        public string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshLngRefs(lngRefs, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshLngRefsAsync(lngRefs, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshVersionRefs(versionRefs, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataByIshVersionRefsAsync(long[] versionRefs, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshVersionRefsAsync(versionRefs, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata) {
            return base.Channel.RetrieveVersionMetadata(logicalIds, version, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveVersionMetadataAsync(string[] logicalIds, string version, string xmlRequestedMetadata) {
            return base.Channel.RetrieveVersionMetadataAsync(logicalIds, version, xmlRequestedMetadata);
        }
        
        public string GetDataObjectInfoByIshLngRef(long lngRef) {
            return base.Channel.GetDataObjectInfoByIshLngRef(lngRef);
        }
        
        public System.Threading.Tasks.Task<string> GetDataObjectInfoByIshLngRefAsync(long lngRef) {
            return base.Channel.GetDataObjectInfoByIshLngRefAsync(lngRef);
        }
        
        public string RetrieveDataObjectInfoByIshLngRefs(long[] lngRefs) {
            return base.Channel.RetrieveDataObjectInfoByIshLngRefs(lngRefs);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveDataObjectInfoByIshLngRefsAsync(long[] lngRefs) {
            return base.Channel.RetrieveDataObjectInfoByIshLngRefsAsync(lngRefs);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.GetObject(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest request) {
            return base.Channel.GetObject(request);
        }
        
        public string GetObject(string logicalId, ref string version, string language, string resolution, string xmlProductDefinition, string xmlRequestedMetadata) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            inValue.xmlProductDefinition = xmlProductDefinition;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).GetObject(inValue);
            version = retVal.version;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectResponse> GetObjectAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetObjectRequest request) {
            return base.Channel.GetObjectAsync(request);
        }
        
        public string RetrieveObjects(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjects(logicalIds, statusFilter, xmlMetadataFilter, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveObjectsAsync(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjectsAsync(logicalIds, statusFilter, xmlMetadataFilter, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public string RetrieveObjectsByIshLngRefs(long[] lngRefs, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjectsByIshLngRefs(lngRefs, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveObjectsByIshLngRefsAsync(long[] lngRefs, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjectsByIshLngRefsAsync(lngRefs, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public string RetrieveObjectsByRevisionIds(string[] revisionIds, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjectsByRevisionIds(revisionIds, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveObjectsByRevisionIdsAsync(string[] revisionIds, string xmlProductDefinition, string xmlRequestedMetadata) {
            return base.Channel.RetrieveObjectsByRevisionIdsAsync(revisionIds, xmlProductDefinition, xmlRequestedMetadata);
        }
        
        public string RetrieveRevisionInfoByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveRevisionInfoByIshLngRefs(lngRefs, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveRevisionInfoByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveRevisionInfoByIshLngRefsAsync(lngRefs, xmlRequestedMetadata);
        }
        
        public string FolderLocations(string[] logicalIds) {
            return base.Channel.FolderLocations(logicalIds);
        }
        
        public System.Threading.Tasks.Task<string> FolderLocationsAsync(string[] logicalIds) {
            return base.Channel.FolderLocationsAsync(logicalIds);
        }
        
        public string Find(string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> FindAsync(string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.FindAsync(ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadata(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(logicalIds, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] logicalIds, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataAsync(logicalIds, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveLanguageMetadata(string[] logicalIds, string version, string[] languages, string[] resolutions, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveLanguageMetadata(logicalIds, version, languages, resolutions, statusFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveLanguageMetadataAsync(string[] logicalIds, string version, string[] languages, string[] resolutions, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveLanguageMetadataAsync(logicalIds, version, languages, resolutions, statusFilter, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.FolderLocation(Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest request) {
            return base.Channel.FolderLocation(request);
        }
        
        public Trisoft.ISHRemote.DocumentObj25ServiceReference.BaseFolder FolderLocation(string logicalId, out string[] folderPath, out long[] folderRefs) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest();
            inValue.logicalId = logicalId;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).FolderLocation(inValue);
            folderPath = retVal.folderPath;
            folderRefs = retVal.folderRefs;
            return retVal.baseFolder;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationResponse> FolderLocationAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.FolderLocationRequest request) {
            return base.Channel.FolderLocationAsync(request);
        }
        
        public string ContainingLogicalId(string logicalId, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingLogicalId(logicalId, linkType, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> ContainingLogicalIdAsync(string logicalId, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingLogicalIdAsync(logicalId, linkType, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string ContainingCondition(string conditionName, string conditionValue, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingCondition(conditionName, conditionValue, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> ContainingConditionAsync(string conditionName, string conditionValue, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingConditionAsync(conditionName, conditionValue, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string ContainingVariable(string variable, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingVariable(variable, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> ContainingVariableAsync(string variable, string ishTypeFilter, Trisoft.ISHRemote.DocumentObj25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.ContainingVariableAsync(variable, ishTypeFilter, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string[] GetChildren(long lngRef, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType) {
            return base.Channel.GetChildren(lngRef, linkType);
        }
        
        public System.Threading.Tasks.Task<string[]> GetChildrenAsync(long lngRef, Trisoft.ISHRemote.DocumentObj25ServiceReference.LinkType linkType) {
            return base.Channel.GetChildrenAsync(lngRef, linkType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesResponse Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj.GetPossibleTargetStatuses(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest request) {
            return base.Channel.GetPossibleTargetStatuses(request);
        }
        
        public string GetPossibleTargetStatuses(string logicalId, ref string version, string language, string resolution) {
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest inValue = new Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.language = language;
            inValue.resolution = resolution;
            Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesResponse retVal = ((Trisoft.ISHRemote.DocumentObj25ServiceReference.DocumentObj)(this)).GetPossibleTargetStatuses(inValue);
            version = retVal.version;
            return retVal.xmlLovValueList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesResponse> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.DocumentObj25ServiceReference.GetPossibleTargetStatusesRequest request) {
            return base.Channel.GetPossibleTargetStatusesAsync(request);
        }
        
        public string GetPossibleTargetStatusesByIshLngRef(long lngRef) {
            return base.Channel.GetPossibleTargetStatusesByIshLngRef(lngRef);
        }
        
        public System.Threading.Tasks.Task<string> GetPossibleTargetStatusesByIshLngRefAsync(long lngRef) {
            return base.Channel.GetPossibleTargetStatusesByIshLngRefAsync(lngRef);
        }
        
        public long RaisePublishEvent(
                    string logicalId, 
                    string version, 
                    string outputFormat, 
                    string[] languages, 
                    string[] resources, 
                    string baselineId, 
                    Trisoft.ISHRemote.DocumentObj25ServiceReference.BaselineAutoCompleteMode baselineAutoCompleteMode, 
                    string workingLanguage, 
                    string workingResolution, 
                    string[] fallbackLanguages, 
                    string[] resourceFallbackLanguages, 
                    string[] illustrationFallbackLanguages, 
                    string xmlProductDefinition, 
                    string compareVersion, 
                    string compareVersionStartDocument, 
                    string[] compareVersionResources, 
                    string compareVersionBaselineId, 
                    string compareVersionXmlProductDefinition, 
                    string eventType, 
                    string xmlParameters) {
            return base.Channel.RaisePublishEvent(logicalId, version, outputFormat, languages, resources, baselineId, baselineAutoCompleteMode, workingLanguage, workingResolution, fallbackLanguages, resourceFallbackLanguages, illustrationFallbackLanguages, xmlProductDefinition, compareVersion, compareVersionStartDocument, compareVersionResources, compareVersionBaselineId, compareVersionXmlProductDefinition, eventType, xmlParameters);
        }
        
        public System.Threading.Tasks.Task<long> RaisePublishEventAsync(
                    string logicalId, 
                    string version, 
                    string outputFormat, 
                    string[] languages, 
                    string[] resources, 
                    string baselineId, 
                    Trisoft.ISHRemote.DocumentObj25ServiceReference.BaselineAutoCompleteMode baselineAutoCompleteMode, 
                    string workingLanguage, 
                    string workingResolution, 
                    string[] fallbackLanguages, 
                    string[] resourceFallbackLanguages, 
                    string[] illustrationFallbackLanguages, 
                    string xmlProductDefinition, 
                    string compareVersion, 
                    string compareVersionStartDocument, 
                    string[] compareVersionResources, 
                    string compareVersionBaselineId, 
                    string compareVersionXmlProductDefinition, 
                    string eventType, 
                    string xmlParameters) {
            return base.Channel.RaisePublishEventAsync(logicalId, version, outputFormat, languages, resources, baselineId, baselineAutoCompleteMode, workingLanguage, workingResolution, fallbackLanguages, resourceFallbackLanguages, illustrationFallbackLanguages, xmlProductDefinition, compareVersion, compareVersionStartDocument, compareVersionResources, compareVersionBaselineId, compareVersionXmlProductDefinition, eventType, xmlParameters);
        }
    }
}
