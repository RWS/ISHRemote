//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.PublicationOutput25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusFilter", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum StatusFilter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedStates = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHReleasedOrDraftStates = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHOutOfDateOrReleasedStates = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHNoStatusFilter = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseFolder", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaseFolder : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Data = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favorites = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EditorTemplate = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="PublicationOutput25ServiceReference.PublicationOutput")]
    public interface PublicationOutput {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "se", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseResponse Release(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "se", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseResponse> ReleaseAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefResponse ReleaseByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Relea" +
            "seByIshLngRefResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefResponse> ReleaseByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataResponse SetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataResponse> SetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefResponse")]
        System.Threading.Tasks.Task SetMetadataByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/SetMe" +
            "tadataByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlErrorReport")]
        System.Threading.Tasks.Task<string> SetMetadataByIshLngRefsAsync(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "eInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateResponse Create(Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Creat" +
            "eResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateResponse> CreateAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eResponse")]
        System.Threading.Tasks.Task DeleteAsync(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Delet" +
            "eByIshLngRefResponse")]
        System.Threading.Tasks.Task DeleteByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] logicalIds, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] logicalIds, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshLngRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveMetadataByIshVersionRefsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataByIshVersionRefsAsync(long[] versionRefs, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Retri" +
            "eveVersionMetadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveVersionMetadataAsync(string[] logicalIds, string version, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/FindR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/FindI" +
            "nfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Find(Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/FindR" +
            "esponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataResponse TryGetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/TryGe" +
            "tMetadataResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataResponse> TryGetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataResponse GetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetMe" +
            "tadataByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetMetadataByIshLngRefAsync(long lngRef, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "ining", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "iningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "iningInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "ining", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Conta" +
            "iningResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> ContainingAsync(string logicalId, string versionNumber, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "Baseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "BaselineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "BaselineInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string UsingBaseline(string baselineId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "Baseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Using" +
            "BaselineResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> UsingBaselineAsync(string baselineId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocation", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationResponse FolderLocation(Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocation", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationResponse> FolderLocationAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocations", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjLocationList")]
        string FolderLocations(string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocations", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/Folde" +
            "rLocationsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjLocationList")]
        System.Threading.Tasks.Task<string> FolderLocationsAsync(string[] logicalIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        string GetDataObjectInfoByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetDa" +
            "taObjectInfoByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshDataObjects")]
        System.Threading.Tasks.Task<string> GetDataObjectInfoByIshLngRefAsync(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefResponse GetNextDataObjectChunkByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtDataObjectChunkByIshLngRefResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefResponse> GetNextDataObjectChunkByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesResponse GetPossibleTargetStatuses(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesResponse> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        string GetPossibleTargetStatusesByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPo" +
            "ssibleTargetStatusesByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        System.Threading.Tasks.Task<string> GetPossibleTargetStatusesByIshLngRefAsync(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPu" +
            "blishReportInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPu" +
            "blishReportInfoByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPu" +
            "blishReportInfoByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshPublishReportInfoObjects")]
        string GetPublishReportInfoByIshLngRef(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPu" +
            "blishReportInfoByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetPu" +
            "blishReportInfoByIshLngRefResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlIshPublishReportInfoObjects")]
        System.Threading.Tasks.Task<string> GetPublishReportInfoByIshLngRefAsync(long lngRef);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtPublishReportChunkByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtPublishReportChunkByIshLngRefResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.PublicationOutput25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtPublishReportChunkByIshLngRefInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefResponse GetNextPublishReportChunkByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtPublishReportChunkByIshLngRef", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/PublicationOutput/GetNe" +
            "xtPublishReportChunkByIshLngRefResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefResponse> GetNextPublishReportChunkByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Release", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class ReleaseRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string languageCombination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlBaselineFreezeReport;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public bool isFrozen;
        
        public ReleaseRequest() {
        }
        
        public ReleaseRequest(string logicalId, string version, string outputFormat, string languageCombination, string xmlBaselineFreezeReport, bool isFrozen) {
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            this.isFrozen = isFrozen;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReleaseResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class ReleaseResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaselineFreezeReport;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public bool isFrozen;
        
        public ReleaseResponse() {
        }
        
        public ReleaseResponse(string returnValue, string xmlBaselineFreezeReport, bool isFrozen) {
            this.returnValue = returnValue;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            this.isFrozen = isFrozen;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReleaseByIshLngRef", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class ReleaseByIshLngRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long lngRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaselineFreezeReport;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public bool isFrozen;
        
        public ReleaseByIshLngRefRequest() {
        }
        
        public ReleaseByIshLngRefRequest(long lngRef, string xmlBaselineFreezeReport, bool isFrozen) {
            this.lngRef = lngRef;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            this.isFrozen = isFrozen;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReleaseByIshLngRefResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class ReleaseByIshLngRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaselineFreezeReport;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public bool isFrozen;
        
        public ReleaseByIshLngRefResponse() {
        }
        
        public ReleaseByIshLngRefResponse(string returnValue, string xmlBaselineFreezeReport, bool isFrozen) {
            this.returnValue = returnValue;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            this.isFrozen = isFrozen;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class SetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string languageCombination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlRequiredCurrentMetadata;
        
        public SetMetadataRequest() {
        }
        
        public SetMetadataRequest(string logicalId, string version, string outputFormat, string languageCombination, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
            this.xmlMetadata = xmlMetadata;
            this.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class SetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        public SetMetadataResponse() {
        }
        
        public SetMetadataResponse(string version) {
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CreateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long folderRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string languageCombination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=5)]
        public string xmlMetadata;
        
        public CreateRequest() {
        }
        
        public CreateRequest(long folderRef, string logicalId, string version, string outputFormat, string languageCombination, string xmlMetadata) {
            this.folderRef = folderRef;
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
            this.xmlMetadata = xmlMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CreateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        public CreateResponse() {
        }
        
        public CreateResponse(string logicalId, string version) {
            this.logicalId = logicalId;
            this.version = version;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryGetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class TryGetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string languageCombination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlRequestedMetadata;
        
        public TryGetMetadataRequest() {
        }
        
        public TryGetMetadataRequest(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryGetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class TryGetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public bool TryGetMetadataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string xmlObjectList;
        
        public TryGetMetadataResponse() {
        }
        
        public TryGetMetadataResponse(bool TryGetMetadataResult, string version, string xmlObjectList) {
            this.TryGetMetadataResult = TryGetMetadataResult;
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadata", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string languageCombination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=4)]
        public string xmlRequestedMetadata;
        
        public GetMetadataRequest() {
        }
        
        public GetMetadataRequest(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequestedMetadata) {
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMetadataResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetMetadataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlObjectList;
        
        public GetMetadataResponse() {
        }
        
        public GetMetadataResponse(string version, string xmlObjectList) {
            this.version = version;
            this.xmlObjectList = xmlObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FolderLocation", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FolderLocationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        public FolderLocationRequest() {
        }
        
        public FolderLocationRequest(string logicalId) {
            this.logicalId = logicalId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FolderLocationResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FolderLocationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public Trisoft.ISHRemote.PublicationOutput25ServiceReference.BaseFolder baseFolder;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string[] folderPath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public long[] folderRefs;
        
        public FolderLocationResponse() {
        }
        
        public FolderLocationResponse(Trisoft.ISHRemote.PublicationOutput25ServiceReference.BaseFolder baseFolder, string[] folderPath, long[] folderRefs) {
            this.baseFolder = baseFolder;
            this.folderPath = folderPath;
            this.folderRefs = folderRefs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextDataObjectChunkByIshLngRef", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetNextDataObjectChunkByIshLngRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long lngRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string dataRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public long offSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public int size;
        
        public GetNextDataObjectChunkByIshLngRefRequest() {
        }
        
        public GetNextDataObjectChunkByIshLngRefRequest(long lngRef, string dataRef, long offSet, int size) {
            this.lngRef = lngRef;
            this.dataRef = dataRef;
            this.offSet = offSet;
            this.size = size;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextDataObjectChunkByIshLngRefResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetNextDataObjectChunkByIshLngRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long offSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public int size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public byte[] bytes;
        
        public GetNextDataObjectChunkByIshLngRefResponse() {
        }
        
        public GetNextDataObjectChunkByIshLngRefResponse(long offSet, int size, byte[] bytes) {
            this.offSet = offSet;
            this.size = size;
            this.bytes = bytes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPossibleTargetStatuses", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetPossibleTargetStatusesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string logicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string outputFormat;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public string languageCombination;
        
        public GetPossibleTargetStatusesRequest() {
        }
        
        public GetPossibleTargetStatusesRequest(string logicalId, string version, string outputFormat, string languageCombination) {
            this.logicalId = logicalId;
            this.version = version;
            this.outputFormat = outputFormat;
            this.languageCombination = languageCombination;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPossibleTargetStatusesResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetPossibleTargetStatusesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string version;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlLovValueList;
        
        public GetPossibleTargetStatusesResponse() {
        }
        
        public GetPossibleTargetStatusesResponse(string version, string xmlLovValueList) {
            this.version = version;
            this.xmlLovValueList = xmlLovValueList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextPublishReportChunkByIshLngRef", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetNextPublishReportChunkByIshLngRefRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long lngRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string publishReportRef;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public long offSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=3)]
        public int size;
        
        public GetNextPublishReportChunkByIshLngRefRequest() {
        }
        
        public GetNextPublishReportChunkByIshLngRefRequest(long lngRef, string publishReportRef, long offSet, int size) {
            this.lngRef = lngRef;
            this.publishReportRef = publishReportRef;
            this.offSet = offSet;
            this.size = size;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextPublishReportChunkByIshLngRefResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetNextPublishReportChunkByIshLngRefResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public long offSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public int size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public byte[] bytes;
        
        public GetNextPublishReportChunkByIshLngRefResponse() {
        }
        
        public GetNextPublishReportChunkByIshLngRefResponse(long offSet, int size, byte[] bytes) {
            this.offSet = offSet;
            this.size = size;
            this.bytes = bytes;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PublicationOutputChannel : Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicationOutputClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput>, Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput {
        
        public PublicationOutputClient() {
        }
        
        public PublicationOutputClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicationOutputClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationOutputClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicationOutputClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.Release(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest request) {
            return base.Channel.Release(request);
        }
        
        public string Release(string logicalId, string version, string outputFormat, string languageCombination, ref string xmlBaselineFreezeReport, ref bool isFrozen) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            inValue.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            inValue.isFrozen = isFrozen;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).Release(inValue);
            xmlBaselineFreezeReport = retVal.xmlBaselineFreezeReport;
            isFrozen = retVal.isFrozen;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseResponse> ReleaseAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseRequest request) {
            return base.Channel.ReleaseAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.ReleaseByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest request) {
            return base.Channel.ReleaseByIshLngRef(request);
        }
        
        public string ReleaseByIshLngRef(long lngRef, ref string xmlBaselineFreezeReport, ref bool isFrozen) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest();
            inValue.lngRef = lngRef;
            inValue.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
            inValue.isFrozen = isFrozen;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).ReleaseByIshLngRef(inValue);
            xmlBaselineFreezeReport = retVal.xmlBaselineFreezeReport;
            isFrozen = retVal.isFrozen;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefResponse> ReleaseByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.ReleaseByIshLngRefRequest request) {
            return base.Channel.ReleaseByIshLngRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.SetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest request) {
            return base.Channel.SetMetadata(request);
        }
        
        public void SetMetadata(string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            inValue.xmlMetadata = xmlMetadata;
            inValue.xmlRequiredCurrentMetadata = xmlRequiredCurrentMetadata;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).SetMetadata(inValue);
            version = retVal.version;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataResponse> SetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.SetMetadataRequest request) {
            return base.Channel.SetMetadataAsync(request);
        }
        
        public void SetMetadataByIshLngRef(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadataByIshLngRef(lngRef, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task SetMetadataByIshLngRefAsync(long lngRef, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefAsync(lngRef, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public string SetMetadataByIshLngRefs(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefs(lngRefs, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task<string> SetMetadataByIshLngRefsAsync(long[] lngRefs, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadataByIshLngRefsAsync(lngRefs, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.Create(Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest request) {
            return base.Channel.Create(request);
        }
        
        public void Create(long folderRef, ref string logicalId, ref string version, string outputFormat, string languageCombination, string xmlMetadata) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest();
            inValue.folderRef = folderRef;
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            inValue.xmlMetadata = xmlMetadata;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).Create(inValue);
            logicalId = retVal.logicalId;
            version = retVal.version;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateResponse> CreateAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.CreateRequest request) {
            return base.Channel.CreateAsync(request);
        }
        
        public void Delete(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata) {
            base.Channel.Delete(logicalId, version, outputFormat, languageCombination, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string logicalId, string version, string outputFormat, string languageCombination, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteAsync(logicalId, version, outputFormat, languageCombination, xmlRequiredCurrentMetadata);
        }
        
        public void DeleteByIshLngRef(long lngRef, string xmlRequiredCurrentMetadata) {
            base.Channel.DeleteByIshLngRef(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteByIshLngRefAsync(long lngRef, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteByIshLngRefAsync(lngRef, xmlRequiredCurrentMetadata);
        }
        
        public string RetrieveMetadata(string[] logicalIds, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(logicalIds, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] logicalIds, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataAsync(logicalIds, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadataByIshLngRefs(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshLngRefs(lngRefs, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataByIshLngRefsAsync(long[] lngRefs, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshLngRefsAsync(lngRefs, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadataByIshVersionRefs(long[] versionRefs, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshVersionRefs(versionRefs, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataByIshVersionRefsAsync(long[] versionRefs, Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataByIshVersionRefsAsync(versionRefs, statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveVersionMetadata(string[] logicalIds, string version, string xmlRequestedMetadata) {
            return base.Channel.RetrieveVersionMetadata(logicalIds, version, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveVersionMetadataAsync(string[] logicalIds, string version, string xmlRequestedMetadata) {
            return base.Channel.RetrieveVersionMetadataAsync(logicalIds, version, xmlRequestedMetadata);
        }
        
        public string Find(Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.StatusFilter statusFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.FindAsync(statusFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.TryGetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest request) {
            return base.Channel.TryGetMetadata(request);
        }
        
        public bool TryGetMetadata(string logicalId, ref string version, string outputFormat, string languageCombination, string xmlRequestedMetadata, out string xmlObjectList) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).TryGetMetadata(inValue);
            version = retVal.version;
            xmlObjectList = retVal.xmlObjectList;
            return retVal.TryGetMetadataResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataResponse> TryGetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.TryGetMetadataRequest request) {
            return base.Channel.TryGetMetadataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.GetMetadata(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadata(request);
        }
        
        public string GetMetadata(string logicalId, ref string version, string outputFormat, string languageCombination, string xmlRequestedMetadata) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).GetMetadata(inValue);
            version = retVal.version;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataResponse> GetMetadataAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetMetadataRequest request) {
            return base.Channel.GetMetadataAsync(request);
        }
        
        public string GetMetadataByIshLngRef(long lngRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshLngRef(lngRef, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetMetadataByIshLngRefAsync(long lngRef, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataByIshLngRefAsync(lngRef, xmlRequestedMetadata);
        }
        
        public string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata) {
            return base.Channel.Containing(logicalId, versionNumber, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> ContainingAsync(string logicalId, string versionNumber, string xmlRequestedMetadata) {
            return base.Channel.ContainingAsync(logicalId, versionNumber, xmlRequestedMetadata);
        }
        
        public string UsingBaseline(string baselineId, string xmlRequestedMetadata) {
            return base.Channel.UsingBaseline(baselineId, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> UsingBaselineAsync(string baselineId, string xmlRequestedMetadata) {
            return base.Channel.UsingBaselineAsync(baselineId, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.FolderLocation(Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest request) {
            return base.Channel.FolderLocation(request);
        }
        
        public Trisoft.ISHRemote.PublicationOutput25ServiceReference.BaseFolder FolderLocation(string logicalId, out string[] folderPath, out long[] folderRefs) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest();
            inValue.logicalId = logicalId;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).FolderLocation(inValue);
            folderPath = retVal.folderPath;
            folderRefs = retVal.folderRefs;
            return retVal.baseFolder;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationResponse> FolderLocationAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.FolderLocationRequest request) {
            return base.Channel.FolderLocationAsync(request);
        }
        
        public string FolderLocations(string[] logicalIds) {
            return base.Channel.FolderLocations(logicalIds);
        }
        
        public System.Threading.Tasks.Task<string> FolderLocationsAsync(string[] logicalIds) {
            return base.Channel.FolderLocationsAsync(logicalIds);
        }
        
        public string GetDataObjectInfoByIshLngRef(long lngRef) {
            return base.Channel.GetDataObjectInfoByIshLngRef(lngRef);
        }
        
        public System.Threading.Tasks.Task<string> GetDataObjectInfoByIshLngRefAsync(long lngRef) {
            return base.Channel.GetDataObjectInfoByIshLngRefAsync(lngRef);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.GetNextDataObjectChunkByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest request) {
            return base.Channel.GetNextDataObjectChunkByIshLngRef(request);
        }
        
        public byte[] GetNextDataObjectChunkByIshLngRef(long lngRef, string dataRef, ref long offSet, ref int size) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest();
            inValue.lngRef = lngRef;
            inValue.dataRef = dataRef;
            inValue.offSet = offSet;
            inValue.size = size;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).GetNextDataObjectChunkByIshLngRef(inValue);
            offSet = retVal.offSet;
            size = retVal.size;
            return retVal.bytes;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefResponse> GetNextDataObjectChunkByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextDataObjectChunkByIshLngRefRequest request) {
            return base.Channel.GetNextDataObjectChunkByIshLngRefAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.GetPossibleTargetStatuses(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest request) {
            return base.Channel.GetPossibleTargetStatuses(request);
        }
        
        public string GetPossibleTargetStatuses(string logicalId, ref string version, string outputFormat, string languageCombination) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest();
            inValue.logicalId = logicalId;
            inValue.version = version;
            inValue.outputFormat = outputFormat;
            inValue.languageCombination = languageCombination;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).GetPossibleTargetStatuses(inValue);
            version = retVal.version;
            return retVal.xmlLovValueList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesResponse> GetPossibleTargetStatusesAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetPossibleTargetStatusesRequest request) {
            return base.Channel.GetPossibleTargetStatusesAsync(request);
        }
        
        public string GetPossibleTargetStatusesByIshLngRef(long lngRef) {
            return base.Channel.GetPossibleTargetStatusesByIshLngRef(lngRef);
        }
        
        public System.Threading.Tasks.Task<string> GetPossibleTargetStatusesByIshLngRefAsync(long lngRef) {
            return base.Channel.GetPossibleTargetStatusesByIshLngRefAsync(lngRef);
        }
        
        public string GetPublishReportInfoByIshLngRef(long lngRef) {
            return base.Channel.GetPublishReportInfoByIshLngRef(lngRef);
        }
        
        public System.Threading.Tasks.Task<string> GetPublishReportInfoByIshLngRefAsync(long lngRef) {
            return base.Channel.GetPublishReportInfoByIshLngRefAsync(lngRef);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefResponse Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput.GetNextPublishReportChunkByIshLngRef(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest request) {
            return base.Channel.GetNextPublishReportChunkByIshLngRef(request);
        }
        
        public byte[] GetNextPublishReportChunkByIshLngRef(long lngRef, string publishReportRef, ref long offSet, ref int size) {
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest inValue = new Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest();
            inValue.lngRef = lngRef;
            inValue.publishReportRef = publishReportRef;
            inValue.offSet = offSet;
            inValue.size = size;
            Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefResponse retVal = ((Trisoft.ISHRemote.PublicationOutput25ServiceReference.PublicationOutput)(this)).GetNextPublishReportChunkByIshLngRef(inValue);
            offSet = retVal.offSet;
            size = retVal.size;
            return retVal.bytes;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefResponse> GetNextPublishReportChunkByIshLngRefAsync(Trisoft.ISHRemote.PublicationOutput25ServiceReference.GetNextPublishReportChunkByIshLngRefRequest request) {
            return base.Channel.GetNextPublishReportChunkByIshLngRefAsync(request);
        }
    }
}
