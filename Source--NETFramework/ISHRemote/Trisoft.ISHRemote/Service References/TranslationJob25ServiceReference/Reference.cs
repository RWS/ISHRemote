//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.TranslationJob25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="TranslationJob25ServiceReference.TranslationJob")]
    public interface TranslationJob {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetMetad" +
            "ata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetMetad" +
            "ataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetMetad" +
            "ataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadata(string translationJobId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetMetad" +
            "ata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetMetad" +
            "ataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetMetadataAsync(string translationJobId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetPossi" +
            "bleTargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetPossi" +
            "bleTargetStatusesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetPossi" +
            "bleTargetStatusesInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        string GetPossibleTargetStatuses(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetPossi" +
            "bleTargetStatuses", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetPossi" +
            "bleTargetStatusesResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlLovValueList")]
        System.Threading.Tasks.Task<string> GetPossibleTargetStatusesAsync(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetTrans" +
            "lationJob", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetTrans" +
            "lationJobResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetTrans" +
            "lationJobInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobResponse GetTranslationJob(Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetTrans" +
            "lationJob", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/GetTrans" +
            "lationJobResponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobResponse> GetTranslationJobAsync(Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "Metadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "MetadataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "MetadataInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] translationJobIds, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "Metadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "MetadataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] translationJobIds, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/FindResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/FindInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Find(string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/FindResp" +
            "onse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> FindAsync(string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "TranslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "TranslationJobItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "TranslationJobItemsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationJobItemList")]
        string RetrieveTranslationJobItems(string translationJobId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "TranslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "TranslationJobItemsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationJobItemList")]
        System.Threading.Tasks.Task<string> RetrieveTranslationJobItemsAsync(string translationJobId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "ExternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "ExternalTranslationJobsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "ExternalTranslationJobsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationJobExternalJobList")]
        string RetrieveExternalTranslationJobs(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "ExternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Retrieve" +
            "ExternalTranslationJobsResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlTranslationJobExternalJobList")]
        System.Threading.Tasks.Task<string> RetrieveExternalTranslationJobsAsync(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJob", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string CreateTranslationJob(string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJob", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> CreateTranslationJobAsync(string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJob3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJob3Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJob3InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UpdateTranslationJob3(string translationJobId, string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlRequiredCurrentMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJob3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJob3Response")]
        System.Threading.Tasks.Task UpdateTranslationJob3Async(string translationJobId, string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlRequiredCurrentMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteIn" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteRe" +
            "sponse")]
        System.Threading.Tasks.Task DeleteAsync(string translationJobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/SetMetad" +
            "ata3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/SetMetad" +
            "ata3Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/SetMetad" +
            "ata3InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadata3(string translationJobId, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/SetMetad" +
            "ata3", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/SetMetad" +
            "ata3Response")]
        System.Threading.Tasks.Task SetMetadata3Async(string translationJobId, string xmlMetadata, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobItemsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void CreateTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateTr" +
            "anslationJobItemsResponse")]
        System.Threading.Tasks.Task CreateTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJobItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJobItemsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void UpdateTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/UpdateTr" +
            "anslationJobItemsResponse")]
        System.Threading.Tasks.Task UpdateTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteTr" +
            "anslationJobItemsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteTr" +
            "anslationJobItemsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void DeleteTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteTr" +
            "anslationJobItems", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteTr" +
            "anslationJobItemsResponse")]
        System.Threading.Tasks.Task DeleteTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateEx" +
            "ternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateEx" +
            "ternalTranslationJobsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateEx" +
            "ternalTranslationJobsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void CreateExternalTranslationJobs(string translationJobId, string xmlRequiredCurrentMetadata, string xmlExternalTranslationJobList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateEx" +
            "ternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/CreateEx" +
            "ternalTranslationJobsResponse")]
        System.Threading.Tasks.Task CreateExternalTranslationJobsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlExternalTranslationJobList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteEx" +
            "ternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteEx" +
            "ternalTranslationJobsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.TranslationJob25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteEx" +
            "ternalTranslationJobsInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void DeleteExternalTranslationJobs(string translationJobId, string xmlRequiredCurrentMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteEx" +
            "ternalTranslationJobs", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/TranslationJob/DeleteEx" +
            "ternalTranslationJobsResponse")]
        System.Threading.Tasks.Task DeleteExternalTranslationJobsAsync(string translationJobId, string xmlRequiredCurrentMetadata);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationJob", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetTranslationJobRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string translationJobId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlRequestedMetadata;
        
        public GetTranslationJobRequest() {
        }
        
        public GetTranslationJobRequest(string translationJobId, string xmlRequestedMetadata) {
            this.translationJobId = translationJobId;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTranslationJobResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetTranslationJobResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string xmlObjectList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlTranslationJobContainerList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=2)]
        public string xmlTranslationJobWorkflowList;
        
        public GetTranslationJobResponse() {
        }
        
        public GetTranslationJobResponse(string xmlObjectList, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList) {
            this.xmlObjectList = xmlObjectList;
            this.xmlTranslationJobContainerList = xmlTranslationJobContainerList;
            this.xmlTranslationJobWorkflowList = xmlTranslationJobWorkflowList;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TranslationJobChannel : Trisoft.ISHRemote.TranslationJob25ServiceReference.TranslationJob, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TranslationJobClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.TranslationJob25ServiceReference.TranslationJob>, Trisoft.ISHRemote.TranslationJob25ServiceReference.TranslationJob {
        
        public TranslationJobClient() {
        }
        
        public TranslationJobClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TranslationJobClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationJobClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TranslationJobClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMetadata(string translationJobId, string xmlRequestedMetadata) {
            return base.Channel.GetMetadata(translationJobId, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetMetadataAsync(string translationJobId, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataAsync(translationJobId, xmlRequestedMetadata);
        }
        
        public string GetPossibleTargetStatuses(string translationJobId) {
            return base.Channel.GetPossibleTargetStatuses(translationJobId);
        }
        
        public System.Threading.Tasks.Task<string> GetPossibleTargetStatusesAsync(string translationJobId) {
            return base.Channel.GetPossibleTargetStatusesAsync(translationJobId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobResponse Trisoft.ISHRemote.TranslationJob25ServiceReference.TranslationJob.GetTranslationJob(Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest request) {
            return base.Channel.GetTranslationJob(request);
        }
        
        public string GetTranslationJob(string translationJobId, string xmlRequestedMetadata, out string xmlTranslationJobContainerList, out string xmlTranslationJobWorkflowList) {
            Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest inValue = new Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest();
            inValue.translationJobId = translationJobId;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobResponse retVal = ((Trisoft.ISHRemote.TranslationJob25ServiceReference.TranslationJob)(this)).GetTranslationJob(inValue);
            xmlTranslationJobContainerList = retVal.xmlTranslationJobContainerList;
            xmlTranslationJobWorkflowList = retVal.xmlTranslationJobWorkflowList;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobResponse> GetTranslationJobAsync(Trisoft.ISHRemote.TranslationJob25ServiceReference.GetTranslationJobRequest request) {
            return base.Channel.GetTranslationJobAsync(request);
        }
        
        public string RetrieveMetadata(string[] translationJobIds, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(translationJobIds, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] translationJobIds, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataAsync(translationJobIds, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string Find(string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> FindAsync(string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.FindAsync(xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveTranslationJobItems(string translationJobId, string xmlRequestedMetadata) {
            return base.Channel.RetrieveTranslationJobItems(translationJobId, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveTranslationJobItemsAsync(string translationJobId, string xmlRequestedMetadata) {
            return base.Channel.RetrieveTranslationJobItemsAsync(translationJobId, xmlRequestedMetadata);
        }
        
        public string RetrieveExternalTranslationJobs(string translationJobId) {
            return base.Channel.RetrieveExternalTranslationJobs(translationJobId);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveExternalTranslationJobsAsync(string translationJobId) {
            return base.Channel.RetrieveExternalTranslationJobsAsync(translationJobId);
        }
        
        public string CreateTranslationJob(string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList) {
            return base.Channel.CreateTranslationJob(writeAccess, readAccess, xmlMetadata, xmlTranslationJobContainerList, xmlTranslationJobWorkflowList);
        }
        
        public System.Threading.Tasks.Task<string> CreateTranslationJobAsync(string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList) {
            return base.Channel.CreateTranslationJobAsync(writeAccess, readAccess, xmlMetadata, xmlTranslationJobContainerList, xmlTranslationJobWorkflowList);
        }
        
        public void UpdateTranslationJob3(string translationJobId, string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlRequiredCurrentMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList) {
            base.Channel.UpdateTranslationJob3(translationJobId, writeAccess, readAccess, xmlMetadata, xmlRequiredCurrentMetadata, xmlTranslationJobContainerList, xmlTranslationJobWorkflowList);
        }
        
        public System.Threading.Tasks.Task UpdateTranslationJob3Async(string translationJobId, string[] writeAccess, string[] readAccess, string xmlMetadata, string xmlRequiredCurrentMetadata, string xmlTranslationJobContainerList, string xmlTranslationJobWorkflowList) {
            return base.Channel.UpdateTranslationJob3Async(translationJobId, writeAccess, readAccess, xmlMetadata, xmlRequiredCurrentMetadata, xmlTranslationJobContainerList, xmlTranslationJobWorkflowList);
        }
        
        public void Delete(string translationJobId) {
            base.Channel.Delete(translationJobId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string translationJobId) {
            return base.Channel.DeleteAsync(translationJobId);
        }
        
        public void SetMetadata3(string translationJobId, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            base.Channel.SetMetadata3(translationJobId, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task SetMetadata3Async(string translationJobId, string xmlMetadata, string xmlRequiredCurrentMetadata) {
            return base.Channel.SetMetadata3Async(translationJobId, xmlMetadata, xmlRequiredCurrentMetadata);
        }
        
        public void CreateTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList) {
            base.Channel.CreateTranslationJobItems(translationJobId, xmlRequiredCurrentMetadata, xmlTranslationJobItemList);
        }
        
        public System.Threading.Tasks.Task CreateTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList) {
            return base.Channel.CreateTranslationJobItemsAsync(translationJobId, xmlRequiredCurrentMetadata, xmlTranslationJobItemList);
        }
        
        public void UpdateTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList) {
            base.Channel.UpdateTranslationJobItems(translationJobId, xmlRequiredCurrentMetadata, xmlTranslationJobItemList);
        }
        
        public System.Threading.Tasks.Task UpdateTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlTranslationJobItemList) {
            return base.Channel.UpdateTranslationJobItemsAsync(translationJobId, xmlRequiredCurrentMetadata, xmlTranslationJobItemList);
        }
        
        public void DeleteTranslationJobItems(string translationJobId, string xmlRequiredCurrentMetadata) {
            base.Channel.DeleteTranslationJobItems(translationJobId, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteTranslationJobItemsAsync(string translationJobId, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteTranslationJobItemsAsync(translationJobId, xmlRequiredCurrentMetadata);
        }
        
        public void CreateExternalTranslationJobs(string translationJobId, string xmlRequiredCurrentMetadata, string xmlExternalTranslationJobList) {
            base.Channel.CreateExternalTranslationJobs(translationJobId, xmlRequiredCurrentMetadata, xmlExternalTranslationJobList);
        }
        
        public System.Threading.Tasks.Task CreateExternalTranslationJobsAsync(string translationJobId, string xmlRequiredCurrentMetadata, string xmlExternalTranslationJobList) {
            return base.Channel.CreateExternalTranslationJobsAsync(translationJobId, xmlRequiredCurrentMetadata, xmlExternalTranslationJobList);
        }
        
        public void DeleteExternalTranslationJobs(string translationJobId, string xmlRequiredCurrentMetadata) {
            base.Channel.DeleteExternalTranslationJobs(translationJobId, xmlRequiredCurrentMetadata);
        }
        
        public System.Threading.Tasks.Task DeleteExternalTranslationJobsAsync(string translationJobId, string xmlRequiredCurrentMetadata) {
            return base.Channel.DeleteExternalTranslationJobsAsync(translationJobId, xmlRequiredCurrentMetadata);
        }
    }
}
