//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.Baseline25ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
    [System.SerializableAttribute()]
    public partial class InfoShareFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long InfoShareErrorNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XMLDetailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long InfoShareErrorNumber {
            get {
                return this.InfoShareErrorNumberField;
            }
            set {
                if ((this.InfoShareErrorNumberField.Equals(value) != true)) {
                    this.InfoShareErrorNumberField = value;
                    this.RaisePropertyChanged("InfoShareErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XMLDetail {
            get {
                return this.XMLDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.XMLDetailField, value) != true)) {
                    this.XMLDetailField = value;
                    this.RaisePropertyChanged("XMLDetail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityFilter", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum ActivityFilter : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inactive = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaselineAutoCompleteMode", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Enumerations/API25/")]
    public enum BaselineAutoCompleteMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHFirstVersion = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLatestReleased = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ISHLatestAvailable = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", ConfigurationName="Baseline25ServiceReference.Baseline")]
    public interface Baseline {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "taResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "taInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string RetrieveMetadata(string[] baselineIds, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "taResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] baselineIds, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta2", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta2InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        string RetrieveMetadata2(string[] baselineIds, Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta2", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/RetrieveMetada" +
            "ta2Response")]
        System.Threading.Tasks.Task<string> RetrieveMetadata2Async(string[] baselineIds, Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FindResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FindInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        string Find(Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Find", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FindResponse")]
        System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetMetadataRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetMetadataInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetMetadata(string baselineId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetMetadataRes" +
            "ponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetMetadataAsync(string baselineId, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetList", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetListRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetListInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string GetList(string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetList", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetListRespons" +
            "e")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> GetListAsync(string xmlMetadataFilter, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineNam" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineNam" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineNam" +
            "eInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetBaselineName(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineNam" +
            "e", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineNam" +
            "eResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> GetBaselineNameAsync(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineIdR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineIdI" +
            "nfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string GetBaselineId(string baselineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineId", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineIdR" +
            "esponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> GetBaselineIdAsync(string baselineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Containing", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ContainingResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ContainingInfo" +
            "ShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Containing", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ContainingResp" +
            "onse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlObjectList")]
        System.Threading.Tasks.Task<string> ContainingAsync(string logicalId, string versionNumber, string xmlRequestedMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineResponse GetBaseline(Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetBaselineRes" +
            "ponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineResponse> GetBaselineAsync(Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetReport", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetReportRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetReportInfoS" +
            "hareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        string GetReport(string baselineId, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetReport", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/GetReportRespo" +
            "nse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        System.Threading.Tasks.Task<string> GetReportAsync(string baselineId, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandBaseline" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandBaseline" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandBaseline" +
            "InfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        string ExpandBaseline(string baselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandBaseline" +
            "", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandBaseline" +
            "Response")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        System.Threading.Tasks.Task<string> ExpandBaselineAsync(string baselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandReport", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandReportRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandReportIn" +
            "foShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string ExpandReport(string xmlBaselineReport, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandReport", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExpandReportRe" +
            "sponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> ExpandReportAsync(string xmlBaselineReport, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByModeInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        string CompleteBaselineByMode(string baselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByModeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="xmlBaselineReport")]
        System.Threading.Tasks.Task<string> CompleteBaselineByModeAsync(string baselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByModeInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string CompleteReportByMode(string xmlBaselineReport, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByModeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> CompleteReportByModeAsync(string xmlBaselineReport, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByCandidateAndMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByCandidateAndModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByCandidateAndModeInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string CompleteBaselineByCandidateAndMode(string baselineId, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByCandidateAndMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteBaseli" +
            "neByCandidateAndModeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> CompleteBaselineByCandidateAndModeAsync(string baselineId, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByCandidateAndMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByCandidateAndModeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByCandidateAndModeInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string CompleteReportByCandidateAndMode(string xmlBaselineReport, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByCandidateAndMode", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CompleteReport" +
            "ByCandidateAndModeResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> CompleteReportByCandidateAndModeAsync(string xmlBaselineReport, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "Baseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "BaselineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "BaselineInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string ExtendReportByBaseline(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "Baseline", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "BaselineResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> ExtendReportByBaselineAsync(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "Candidate", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "CandidateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "CandidateInfoShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        string ExtendReportByCandidate(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "Candidate", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/ExtendReportBy" +
            "CandidateResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outXmlBaselineReport")]
        System.Threading.Tasks.Task<string> ExtendReportByCandidateAsync(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CreateResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CreateInfoShar" +
            "eFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Create(string baselineName, string userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Create", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CreateResponse" +
            "")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> CreateAsync(string baselineName, string userGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/DeleteResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/DeleteInfoShar" +
            "eFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Delete(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Delete", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/DeleteResponse" +
            "")]
        System.Threading.Tasks.Task DeleteAsync(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/UpdateResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/UpdateInfoShar" +
            "eFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void Update(string baselineId, string xmlChanges);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Update", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/UpdateResponse" +
            "")]
        System.Threading.Tasks.Task UpdateAsync(string baselineId, string xmlChanges);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/SetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/SetMetadataRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/SetMetadataInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void SetMetadata(string baselineId, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/SetMetadata", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/SetMetadataRes" +
            "ponse")]
        System.Threading.Tasks.Task SetMetadataAsync(string baselineId, string xmlMetadata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Freeze", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FreezeResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FreezeInfoShar" +
            "eFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.Baseline25ServiceReference.FreezeResponse Freeze(Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Freeze", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/FreezeResponse" +
            "")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.FreezeResponse> FreezeAsync(Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CanBeFrozen", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CanBeFrozenRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CanBeFrozenInf" +
            "oShareFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenResponse CanBeFrozen(Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CanBeFrozen", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CanBeFrozenRes" +
            "ponse")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenResponse> CanBeFrozenAsync(Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CleanUp", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CleanUpRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CleanUpInfoSha" +
            "reFault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        void CleanUp(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CleanUp", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CleanUpRespons" +
            "e")]
        System.Threading.Tasks.Task CleanUpAsync(string baselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Copy", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CopyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trisoft.ISHRemote.Baseline25ServiceReference.InfoShareFault), Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CopyInfoShareF" +
            "ault", Name="InfoShareFault", Namespace="http://sdl.com/trisoft/2012/06/WebServices/Contracts/Faults/API25/")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        string Copy(string baselineName, string userGroup, string sourceBaselineId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/Copy", ReplyAction="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/Baseline/CopyResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="returnValue")]
        System.Threading.Tasks.Task<string> CopyAsync(string baselineName, string userGroup, string sourceBaselineId);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBaseline", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetBaselineRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string baselineId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlRequestedMetadata;
        
        public GetBaselineRequest() {
        }
        
        public GetBaselineRequest(string baselineId, string xmlRequestedMetadata) {
            this.baselineId = baselineId;
            this.xmlRequestedMetadata = xmlRequestedMetadata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBaselineResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class GetBaselineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string xmlObjectList;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaseline;
        
        public GetBaselineResponse() {
        }
        
        public GetBaselineResponse(string xmlObjectList, string xmlBaseline) {
            this.xmlObjectList = xmlObjectList;
            this.xmlBaseline = xmlBaseline;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Freeze", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FreezeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string baselineId;
        
        public FreezeRequest() {
        }
        
        public FreezeRequest(string baselineId) {
            this.baselineId = baselineId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FreezeResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class FreezeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public bool returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaselineFreezeReport;
        
        public FreezeResponse() {
        }
        
        public FreezeResponse(bool returnValue, string xmlBaselineFreezeReport) {
            this.returnValue = returnValue;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanBeFrozen", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CanBeFrozenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public string baselineId;
        
        public CanBeFrozenRequest() {
        }
        
        public CanBeFrozenRequest(string baselineId) {
            this.baselineId = baselineId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CanBeFrozenResponse", WrapperNamespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", IsWrapped=true)]
    public partial class CanBeFrozenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=0)]
        public bool returnValue;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://sdl.com/trisoft/2012/06/WebServices/Services/API25/", Order=1)]
        public string xmlBaselineFreezeReport;
        
        public CanBeFrozenResponse() {
        }
        
        public CanBeFrozenResponse(bool returnValue, string xmlBaselineFreezeReport) {
            this.returnValue = returnValue;
            this.xmlBaselineFreezeReport = xmlBaselineFreezeReport;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BaselineChannel : Trisoft.ISHRemote.Baseline25ServiceReference.Baseline, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BaselineClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.Baseline25ServiceReference.Baseline>, Trisoft.ISHRemote.Baseline25ServiceReference.Baseline {
        
        public BaselineClient() {
        }
        
        public BaselineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BaselineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BaselineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BaselineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RetrieveMetadata(string[] baselineIds, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata(baselineIds, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadataAsync(string[] baselineIds, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadataAsync(baselineIds, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string RetrieveMetadata2(string[] baselineIds, Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata2(baselineIds, activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveMetadata2Async(string[] baselineIds, Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.RetrieveMetadata2Async(baselineIds, activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string Find(Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.Find(activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> FindAsync(Trisoft.ISHRemote.Baseline25ServiceReference.ActivityFilter activityFilter, string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.FindAsync(activityFilter, xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string GetMetadata(string baselineId, string xmlRequestedMetadata) {
            return base.Channel.GetMetadata(baselineId, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetMetadataAsync(string baselineId, string xmlRequestedMetadata) {
            return base.Channel.GetMetadataAsync(baselineId, xmlRequestedMetadata);
        }
        
        public string GetList(string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.GetList(xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> GetListAsync(string xmlMetadataFilter, string xmlRequestedMetadata) {
            return base.Channel.GetListAsync(xmlMetadataFilter, xmlRequestedMetadata);
        }
        
        public string GetBaselineName(string baselineId) {
            return base.Channel.GetBaselineName(baselineId);
        }
        
        public System.Threading.Tasks.Task<string> GetBaselineNameAsync(string baselineId) {
            return base.Channel.GetBaselineNameAsync(baselineId);
        }
        
        public string GetBaselineId(string baselineName) {
            return base.Channel.GetBaselineId(baselineName);
        }
        
        public System.Threading.Tasks.Task<string> GetBaselineIdAsync(string baselineName) {
            return base.Channel.GetBaselineIdAsync(baselineName);
        }
        
        public string Containing(string logicalId, string versionNumber, string xmlRequestedMetadata) {
            return base.Channel.Containing(logicalId, versionNumber, xmlRequestedMetadata);
        }
        
        public System.Threading.Tasks.Task<string> ContainingAsync(string logicalId, string versionNumber, string xmlRequestedMetadata) {
            return base.Channel.ContainingAsync(logicalId, versionNumber, xmlRequestedMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineResponse Trisoft.ISHRemote.Baseline25ServiceReference.Baseline.GetBaseline(Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest request) {
            return base.Channel.GetBaseline(request);
        }
        
        public string GetBaseline(string baselineId, string xmlRequestedMetadata, out string xmlBaseline) {
            Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest inValue = new Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest();
            inValue.baselineId = baselineId;
            inValue.xmlRequestedMetadata = xmlRequestedMetadata;
            Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineResponse retVal = ((Trisoft.ISHRemote.Baseline25ServiceReference.Baseline)(this)).GetBaseline(inValue);
            xmlBaseline = retVal.xmlBaseline;
            return retVal.xmlObjectList;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineResponse> GetBaselineAsync(Trisoft.ISHRemote.Baseline25ServiceReference.GetBaselineRequest request) {
            return base.Channel.GetBaselineAsync(request);
        }
        
        public string GetReport(string baselineId, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.GetReport(baselineId, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> GetReportAsync(string baselineId, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.GetReportAsync(baselineId, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string ExpandBaseline(string baselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExpandBaseline(baselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> ExpandBaselineAsync(string baselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExpandBaselineAsync(baselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string ExpandReport(string xmlBaselineReport, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExpandReport(xmlBaselineReport, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> ExpandReportAsync(string xmlBaselineReport, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExpandReportAsync(xmlBaselineReport, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string CompleteBaselineByMode(string baselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteBaselineByMode(baselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> CompleteBaselineByModeAsync(string baselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteBaselineByModeAsync(baselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string CompleteReportByMode(string xmlBaselineReport, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteReportByMode(xmlBaselineReport, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> CompleteReportByModeAsync(string xmlBaselineReport, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteReportByModeAsync(xmlBaselineReport, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string CompleteBaselineByCandidateAndMode(string baselineId, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteBaselineByCandidateAndMode(baselineId, extendBaselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> CompleteBaselineByCandidateAndModeAsync(string baselineId, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteBaselineByCandidateAndModeAsync(baselineId, extendBaselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string CompleteReportByCandidateAndMode(string xmlBaselineReport, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteReportByCandidateAndMode(xmlBaselineReport, extendBaselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> CompleteReportByCandidateAndModeAsync(string xmlBaselineReport, string extendBaselineId, Trisoft.ISHRemote.Baseline25ServiceReference.BaselineAutoCompleteMode autoCompleteMode, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.CompleteReportByCandidateAndModeAsync(xmlBaselineReport, extendBaselineId, autoCompleteMode, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string ExtendReportByBaseline(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExtendReportByBaseline(xmlBaselineReport, extendBaselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> ExtendReportByBaselineAsync(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExtendReportByBaselineAsync(xmlBaselineReport, extendBaselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string ExtendReportByCandidate(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExtendReportByCandidate(xmlBaselineReport, extendBaselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public System.Threading.Tasks.Task<string> ExtendReportByCandidateAsync(string xmlBaselineReport, string extendBaselineId, string[] startLogicalIds, string[] startResourceLogicalIds, string[] languages, string[] illustrationLanguages, string[] resourceLanguages, string[] resolutions) {
            return base.Channel.ExtendReportByCandidateAsync(xmlBaselineReport, extendBaselineId, startLogicalIds, startResourceLogicalIds, languages, illustrationLanguages, resourceLanguages, resolutions);
        }
        
        public string Create(string baselineName, string userGroup) {
            return base.Channel.Create(baselineName, userGroup);
        }
        
        public System.Threading.Tasks.Task<string> CreateAsync(string baselineName, string userGroup) {
            return base.Channel.CreateAsync(baselineName, userGroup);
        }
        
        public void Delete(string baselineId) {
            base.Channel.Delete(baselineId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string baselineId) {
            return base.Channel.DeleteAsync(baselineId);
        }
        
        public void Update(string baselineId, string xmlChanges) {
            base.Channel.Update(baselineId, xmlChanges);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(string baselineId, string xmlChanges) {
            return base.Channel.UpdateAsync(baselineId, xmlChanges);
        }
        
        public void SetMetadata(string baselineId, string xmlMetadata) {
            base.Channel.SetMetadata(baselineId, xmlMetadata);
        }
        
        public System.Threading.Tasks.Task SetMetadataAsync(string baselineId, string xmlMetadata) {
            return base.Channel.SetMetadataAsync(baselineId, xmlMetadata);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Baseline25ServiceReference.FreezeResponse Trisoft.ISHRemote.Baseline25ServiceReference.Baseline.Freeze(Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest request) {
            return base.Channel.Freeze(request);
        }
        
        public bool Freeze(string baselineId, out string xmlBaselineFreezeReport) {
            Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest inValue = new Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest();
            inValue.baselineId = baselineId;
            Trisoft.ISHRemote.Baseline25ServiceReference.FreezeResponse retVal = ((Trisoft.ISHRemote.Baseline25ServiceReference.Baseline)(this)).Freeze(inValue);
            xmlBaselineFreezeReport = retVal.xmlBaselineFreezeReport;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.FreezeResponse> FreezeAsync(Trisoft.ISHRemote.Baseline25ServiceReference.FreezeRequest request) {
            return base.Channel.FreezeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenResponse Trisoft.ISHRemote.Baseline25ServiceReference.Baseline.CanBeFrozen(Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest request) {
            return base.Channel.CanBeFrozen(request);
        }
        
        public bool CanBeFrozen(string baselineId, out string xmlBaselineFreezeReport) {
            Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest inValue = new Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest();
            inValue.baselineId = baselineId;
            Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenResponse retVal = ((Trisoft.ISHRemote.Baseline25ServiceReference.Baseline)(this)).CanBeFrozen(inValue);
            xmlBaselineFreezeReport = retVal.xmlBaselineFreezeReport;
            return retVal.returnValue;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenResponse> CanBeFrozenAsync(Trisoft.ISHRemote.Baseline25ServiceReference.CanBeFrozenRequest request) {
            return base.Channel.CanBeFrozenAsync(request);
        }
        
        public void CleanUp(string baselineId) {
            base.Channel.CleanUp(baselineId);
        }
        
        public System.Threading.Tasks.Task CleanUpAsync(string baselineId) {
            return base.Channel.CleanUpAsync(baselineId);
        }
        
        public string Copy(string baselineName, string userGroup, string sourceBaselineId) {
            return base.Channel.Copy(baselineName, userGroup, sourceBaselineId);
        }
        
        public System.Threading.Tasks.Task<string> CopyAsync(string baselineName, string userGroup, string sourceBaselineId) {
            return base.Channel.CopyAsync(baselineName, userGroup, sourceBaselineId);
        }
    }
}
