<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <!-- Cmdlet: Add-IshAnnotation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshAnnotation</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshAnnotation</command:noun>
      <maml:description>
        <maml:para>The Add-IshAnnotation cmdlet adds a new annotation to the specified content object</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshAnnotation cmdlet adds a new annotation to the specified content object</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParametersGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubLogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubLogicalId</maml:name>
          <maml:description>
            <maml:para>Publication LogicalId</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubVersion -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubVersion</maml:name>
          <maml:description>
            <maml:para>Publication version</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubLng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubLng</maml:name>
          <maml:description>
            <maml:para>Publication language</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>LogicalId of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>Version of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Lng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lng</maml:name>
          <maml:description>
            <maml:para>Language of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Type of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Text -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Text of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Status of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Address -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Address</maml:name>
          <maml:description>
            <maml:para>Address of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Category -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Category</maml:name>
          <maml:description>
            <maml:para>Category of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubLogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubLogicalId</maml:name>
          <maml:description>
            <maml:para>Publication LogicalId</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubVersion -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubVersion</maml:name>
          <maml:description>
            <maml:para>Publication version</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PubLng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PubLng</maml:name>
          <maml:description>
            <maml:para>Publication language</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Type -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Type</maml:name>
          <maml:description>
            <maml:para>Type of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Text -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>Text of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Status -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Status</maml:name>
          <maml:description>
            <maml:para>Status of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Address -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Address</maml:name>
          <maml:description>
            <maml:para>Address of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Category -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Category</maml:name>
          <maml:description>
            <maml:para>Category of the annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IShObject - content object containing full LogicalId/Version/Language combination</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshDocumentObj</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshAnnotationGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshAnnotation -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshAnnotation</maml:name>
          <maml:description>
            <maml:para>The IshAnnotation array that needs to be created. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: MetadataGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: PubLogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>PubLogicalId</maml:name>
        <maml:description>
          <maml:para>Publication LogicalId</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PubVersion -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>PubVersion</maml:name>
        <maml:description>
          <maml:para>Publication version</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PubLng -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>PubLng</maml:name>
        <maml:description>
          <maml:para>Publication language</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>LogicalId of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>Version of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Lng -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Lng</maml:name>
        <maml:description>
          <maml:para>Language of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Type -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Type</maml:name>
        <maml:description>
          <maml:para>Type of the annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Text -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>Text of the annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Status -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Status</maml:name>
        <maml:description>
          <maml:para>Status of the annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Address -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Address</maml:name>
        <maml:description>
          <maml:para>Address of the annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Category -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Category</maml:name>
        <maml:description>
          <maml:para>Category of the annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata of the Annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IShObject - content object containing full LogicalId/Version/Language combination</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshDocumentObj</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshAnnotation -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshAnnotation</maml:name>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be created. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IShObject - content object containing full LogicalId/Version/Language combination</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be created. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshAnnotation -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -Name "FISHREVISIONID" -Level Annotation -Value "GUID-MYREVISIONID" |
          Set-IshMetadataField -Name "FISHPUBLOGICALID" -Level Annotation -Value "GUID-MYPUBLICATIONLOGICALID" |
          Set-IshMetadataField -Name "FISHPUBVERSION" -Level Annotation -Value "1" |
          Set-IshMetadataField -Name "FISHPUBLANGUAGE" -Level Annotation -Value "en" |
          Set-IshMetadataField -Name "FISHANNOTATIONSTATUS" -Level Annotation -Value "VANNOTATIONSTATUSUNSHARED" -ValueType Element |
          Set-IshMetadataField -Name "FISHANNOTATIONADDRESS" -Level Annotation -Value "My annotation address" |
          Set-IshMetadataField -Name "FISHANNOTATIONTEXT" -Level Annotation -Value "My annotation text" |
          Set-IshMetadataField -Name "FISHANNOTATIONCATEGORY" -Level Annotation -Value "Comment" |
          Set-IshMetadataField -Name "FISHANNOTATIONTYPE" -Level Annotation -Value "General"
          $ishAnnotation = Add-IshAnnotation -IshSession $ishsession -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>Add annotation providing Metadata object. Full manual mode - validation of the incoming metadata is on the API side</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation -Value "My proposed change text"
          $ishAnnotation = Add-IshAnnotation -IshSession $ishsession `
          -PubLogicalId "GUID-MYPUBLICATIONLOGICALID" `
          -PubVersion "1" `
          -PubLng "en" `
          -LogicalId "MYCONTENTOBJECTLOGICALID" `
          -Version "1" `
          -Lng "en" `
          -Type "General" `
          -Text "My annotation text" `
          -Status "Unshared" `
          -Category "Comment" `
          -Address "My annotation address" `
          -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>Add annotation providing required parameters and Metadata object. Cmdlet will use the latest RevisionId for the provided content object and parameter values take precedence over metadata field values</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadataFilter = Set-IshMetadataFilterField -Name "VERSION" -Level Version -ValueType Value -Value "1" |
          Set-IshMetadataFilterField -Name "DOC-LANGUAGE" -Level Lng -ValueType Value -Value "en"
          $ishObject = Get-IshDocumentObj -IshSession $ishsession -LogicalId "MYCONTENTOBJECTLOGICALID" -MetadataFilter $metadataFilter
          $metadata =	Set-IshMetadataField -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation -Value "My proposed change text"
          $ishAnnotation = Add-IshAnnotation -IshSession $ishsession `
          -PubLogicalId "GUID-MYPUBLICATIONLOGICALID" `
          -PubVersion "1" `
          -PubLng "en" `
          -IshObject $ishObject `
          -Type $annotationType `
          -Text "My annotation text" `
          -Status "Unshared" `
          -Category "Comment" `
          -Address "My annotation address" `
          -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>Add annotation providing IshObject of type IshDocumentObj. Cmdlet will use the latest RevisionId for the provided content object and parameter values take precedence over metadata field values</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishAnnotation = Add-IshAnnotation -IshSession $ishsession `
          -PubLogicalId "GUID-MYPUBLICATIONLOGICALID" `
          -PubVersion "1" `
          -PubLng "en" `
          -LogicalId "MYCONTENTOBJECTLOGICALID" `
          -Version "1" `
          -Lng "en" `
          -Type "General" `
          -Text "My annotation text" `
          -Status "Unshared" `
          -Category "Comment" `
          -Address "My annotation address" `
          $ishAnnotation = $ishAnnotation | Set-IshMetadataField -Name "FISHANNOTATIONTEXT" -Level Annotation -Value "My annotation text updated"
          $ishAnnotationAdded = $ishAnnotation | Add-IshAnnotation -IshSession $ishsession
        </dev:code>
        <dev:remarks>
          <maml:para>Add annotation providing IshAnnotation object.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshAnnotation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshAnnotation</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshAnnotation</command:noun>
      <maml:description>
        <maml:para>The Find-IshAnnotation cmdlet finds annotations using MetadataFilter</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshAnnotation cmdlet finds annotations using MetadataFilter</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of annotations returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The requested metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of annotations returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The requested metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshAnnotation -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential username
          $ishAnnotations = Find-IshAnnotation
        </dev:code>
        <dev:remarks>
          <maml:para>Find all annotations, beware that large results could be requested here</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHANNOTATIONREPLIES" -Level Annotation
          $metadataFilter = Set-IshMetadataFilterField -IshSession $ishSession -Name FISHANNOTATIONTEXT -Level Annotation -FilterOperator Like -Value "Test%"
          $ishAnnotations = Find-IshAnnotation -IshSession $ishsession `
          -RequestedMetadata $requestedMetadata `
          -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>Find annotations providing RequestedMetadata and MetadataFilter</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshAnnotation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshAnnotation</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshAnnotation</command:noun>
      <maml:description>
        <maml:para>The Get-IshAnnotation cmdlet gets annotations for the specified AnnotationIds for IshAnnotation object or for the specified IshObject</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshAnnotation cmdlet gets annotations for the specified AnnotationIds for IshAnnotation object or for the specified IshObject</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParametersGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: AnnotationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>AnnotationId</maml:name>
          <maml:description>
            <maml:para>Annotation Ids</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of annotations returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>IshPublication or IshDocumentObj objects containing full LogicalId/Version/Language combination</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshAnnotationGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshAnnotation -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshAnnotation</maml:name>
          <maml:description>
            <maml:para>The IshAnnotation array that needs to be retrieved. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: AnnotationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>AnnotationId</maml:name>
        <maml:description>
          <maml:para>Annotation Ids</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of annotations returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>IshPublication or IshDocumentObj objects containing full LogicalId/Version/Language combination</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshAnnotation -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshAnnotation</maml:name>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be retrieved. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>IshPublication or IshDocumentObj objects containing full LogicalId/Version/Language combination</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be retrieved. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshAnnotation -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHANNOTATIONREPLIES" -Level Annotation
          $metadataFilter = Set-IshMetadataFilterField -IshSession $ishSession -Name FISHANNOTATIONTEXT -Level Annotation -FilterOperator Like -Value "Test%"
          $ishAnnotations = Get-IshAnnotation -IshSession $ishsession `
          -AnnotationId @("GUID-ANNOTATION-ID1", "GUID-ANNOTATION-ID2") `
          -RequestedMetadata $requestedMetadata `
          -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>Get annotations providing AnnotationId array, RequestedMetadata and MetadataFilter</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation
          $ishAnnotations = @($ishObjectPublication1, $ishObjectPublication2) | Get-IshAnnotation -IshSession $ishsession -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Get annotations by providing IshPublication objects through the pipeline</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation
          $ishAnnotations = @($ishDocumentObj1, $ishDocumentObj2) | Get-IshAnnotation -IshSession $ishsession -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Get annotations by providing DocumentObj (like ISHModule, ISHMasterDoc,...) objects through the pipeline</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential username
          $requestedMetadata = Set-IshRequestedMetadataField -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation
          $ishAnnotations = Get-Ishfolder -FolderPath "General\Myfolder" -Recurse |
          Get-IshFolderContent |
          Get-IshAnnotation -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Get annotations by piping Get-IshFolderContent output</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshAnnotation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshAnnotation</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshAnnotation</command:noun>
      <maml:description>
        <maml:para>The Remove-IshAnnotation cmdlet removes annotation and all of its replies</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshAnnotation cmdlet removes annotation and all of its replies</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParametersGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: AnnotationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>AnnotationId</maml:name>
          <maml:description>
            <maml:para>AnnotationId</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshAnnotationGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshAnnotation -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshAnnotation</maml:name>
          <maml:description>
            <maml:para>The IshAnnotation array that needs to be deleted. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: AnnotationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>AnnotationId</maml:name>
        <maml:description>
          <maml:para>AnnotationId</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshAnnotation -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshAnnotation</maml:name>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be deleted. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be deleted. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Remove-IshAnnotation -IshSession $ishsession -AnnotationId "MYANNOTATIONREF"
        </dev:code>
        <dev:remarks>
          <maml:para>Remove annotation providing AnnotationId. For the $ishAnnotation variable holding IshAnnotation object, AnnotationId is stored as property $ishAnnotation.IshRef</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential username
          $ishAnnotations | Remove-IshAnnotation
        </dev:code>
        <dev:remarks>
          <maml:para>Remove annotations passing IshAnnotation array(or a single object) through the pipeline</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshAnnotation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshAnnotation</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshAnnotation</command:noun>
      <maml:description>
        <maml:para>The Set-IshAnnotation cmdlet updates annotations that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshAnnotation cmdlet updates annotations that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParametersGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: AnnotationId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>AnnotationId</maml:name>
          <maml:description>
            <maml:para>Id of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshAnnotationGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshAnnotation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the Annotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshAnnotation -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshAnnotation</maml:name>
          <maml:description>
            <maml:para>The IshAnnotation array that needs to be set. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: AnnotationId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>AnnotationId</maml:name>
        <maml:description>
          <maml:para>Id of the Annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata of the Annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the Annotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshAnnotation -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshAnnotation</maml:name>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be set. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshAnnotation[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshAnnotation array that needs to be set. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshAnnotation -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshAnnotation</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword "userpassword"
          $metadataUpdate = Set-IshMetadataField -Name "FISHANNOTATIONSTATUS" -Level Annotation -Value "Shared" -ValueType Value
          $requiredCurrentMetadata = Set-IshRequiredCurrentMetadataField -Name "FISHANNOTATIONSTATUS" -Level Annotation -Value "Unshared" -ValueType Value
          $ishAnnotation = Set-IshAnnotation -AnnotationId "MYANNOTATIONID" -Metadata $metadataUpdate -RequiredCurrentMetadata $requiredCurrentMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Update annotation providing AnnotationId, Metadata and RequiredCurrentMetadata</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -Name "FISHANNOTPROPOSEDCHNGTXT" -Level Annotation -Value "My proposed change text"
          $ishAnnotation = Add-IshAnnotation -PubLogicalId "GUID-MYPUBLICATIONLOGICALID" `
          -PubVersion "1" `
          -PubLng "en" `
          -LogicalId "MYCONTENTOBJECTLOGICALID" `
          -Version "1" `
          -Lng "en" `
          -Type "General" `
          -Text "My annotation text" `
          -Status "Unshared" `
          -Category "Comment" `
          -Address "My annotation address"
          $metadataUpdate = Set-IshMetadataField -Name "FISHANNOTATIONSTATUS" -Level Annotation -Value "Shared" -ValueType Value
          $requiredCurrentMetadata = Set-IshRequiredCurrentMetadataField -Name "FISHANNOTATIONSTATUS" -Level Annotation -Value "Unshared" -ValueType Value
          $ishAnnotationUpdated = $ishAnnotation | Set-IshAnnotation -Metadata $metadataUpdate -RequiredCurrentMetadata $requiredCurrentMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Update annotation providing ISHAnnotation object via pipeline, Metadata and RequiredCurrentMetadata</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshBackgroundTask -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshBackgroundTask</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshBackgroundTask</command:noun>
      <maml:description>
        <maml:para>The Add-IshBackgroundTask cmdlet add fire-and-forget asynchronous processing events to the CMS generic queuing system.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Add-IshBackgroundTask ParameterGroup variation uses BackgroundTask25.CreateBackgroundTask(WithStartAfter) that allows you to submit generic messages. Note that this requires a generic BackgroundTask service message handler.</maml:para>
      <maml:para>Add-IshBackgroundTask IshObjectsGroup requires content object(s) which are transformed as message inputdata and passed to DocumentObj25.RaiseEventByIshLngRefs. This function will server-side validate the incoming objects and trigger an internal BackgroundTask25.CreateBackgroundTask.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshBackgroundTask</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventType</maml:name>
          <maml:description>
            <maml:para>Type of the event (e.g. SMARTTAG). Needs a match CMS BackgroundTask service handler entry.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RawInputData -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>RawInputData</maml:name>
          <maml:description>
            <maml:para>The input data for the background task.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventDescription -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventDescription</maml:name>
          <maml:description>
            <maml:para>Description of the event</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StartAfter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StartAfter</maml:name>
          <maml:description>
            <maml:para>Date time indicating that the background task should not be picked up and executed before it.</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshBackgroundTask</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventType -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventType</maml:name>
          <maml:description>
            <maml:para>Type of the event (e.g. SMARTTAG). Needs a match CMS BackgroundTask service handler entry.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IshObjectss that will be used for background task creation.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EventType -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventType</maml:name>
        <maml:description>
          <maml:para>Type of the event (e.g. SMARTTAG). Needs a match CMS BackgroundTask service handler entry.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RawInputData -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>RawInputData</maml:name>
        <maml:description>
          <maml:para>The input data for the background task.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: EventDescription -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventDescription</maml:name>
        <maml:description>
          <maml:para>Description of the event</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StartAfter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StartAfter</maml:name>
        <maml:description>
          <maml:para>Date time indicating that the background task should not be picked up and executed before it.</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IshObjectss that will be used for background task creation.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshObjectss that will be used for background task creation.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBackgroundTask -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshBackgroundTask is one entry on the BackgroundTask history are, also holding task top-level information.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishBackgroundTask = Get-IshFolderContent -FolderPath "General\MyFolder\Topics" -VersionFilter Latest -LanguagesFilter en |
          Add-IshBackgroundTask -EventType "SMARTTAG"
        </dev:code>
        <dev:remarks>
          <maml:para>Add BackgroundTask with event type "SMARTTAG" for the objects located under the "General\MyFolder\Topics" path</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishBackgroundTask = Get-IshFolder -FolderPath "General\Myfolder" -FolderTypeFilter @("ISHModule", "ISHMasterDoc", "ISHLibrary") -Recurse |
          Get-IshFolderContent -VersionFilter Latest -LanguagesFilter en |
          Add-IshBackgroundTask -EventType "SMARTTAG"
        </dev:code>
        <dev:remarks>
          <maml:para>Add BackgroundTask with event type "SMARTTAG" for the latest-version en(glish) content objects of type topic, map and topic library; located under the "General\MyFolder" path. Trigger a legacy correction event of SMARTTAG across many folders. Note that Get-IshFolder gives you a progress bar for follow-up. Note that it is possible to configure the BackgroundTask-handler with a variation of the SMARTTAG event to do more-or-less fields for automatic concept suggestions.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $rawData = "&lt;data&gt;&lt;export-document-type&gt;ISHPublication&lt;/export-document-type&gt;&lt;export-document-level&gt;lng&lt;/export-document-level&gt;&lt;export-ishlngref&gt;549482&lt;/export-ishlngref&gt;&lt;creationdate&gt;20210303070257182&lt;/creationdate&gt;&lt;/data&gt;"
          $ishBackgroundTask = Add-IshBackgroundTask -EventType "PUBLISH" -EventDescription "Custom publish event description" -RawInputData $rawData
        </dev:code>
        <dev:remarks>
          <maml:para>Add background task with the event type "PUBLISH" and provided event description and publish input raw data. Note: example code only, for publish operations usage of Publish-IshPublicationOutput cmdlet is preferred.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $rawData = "&lt;data&gt;&lt;export-document-type&gt;ISHPublication&lt;/export-document-type&gt;&lt;export-document-level&gt;lng&lt;/export-document-level&gt;&lt;export-ishlngref&gt;549482&lt;/export-ishlngref&gt;&lt;creationdate&gt;20210303070257182&lt;/creationdate&gt;&lt;/data&gt;"
          $date = (Get-Date).AddDays(1)
          $ishBackgroundTask = Add-IshBackgroundTask -EventType "PUBLISH" -EventDescription "Custom publish event description" -RawInputData $rawData -StartAfter $date
        </dev:code>
        <dev:remarks>
          <maml:para>Add background task with the event type "PUBLISH" and provided event description and publish input raw data. Provided StartAfter parameter with tomorrow's date indicates that background task should not be executed before this date. Note: example code only, for publish operations usage of Publish-IshPublicationOutput cmdlet is preferred.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshBackgroundTask -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshBackgroundTask</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshBackgroundTask</command:noun>
      <maml:description>
        <maml:para>Gets BackgroundTask entries with filtering options.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Uses BackgroundTask25 API to retrieve backgroundtasks showing their status, lease, etc from the virtual queue.</maml:para>
      <maml:para>This table oriented API maps straight through to database column names regarding ishfield usage.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBackgroundTask</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: UserFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserFilter</maml:name>
          <maml:description>
            <maml:para>Enumeration indicating if only events of the current user or all events must be retrieved</maml:para>
            <maml:para>Possible values: Current, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">UserFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+UserFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>EventMonitor Events User Filter</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Current</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ModifiedSince -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ModifiedSince</maml:name>
          <maml:description>
            <maml:para>A date limiting the events that will be retrieved based on the last modification date of the events</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>26/07/2021 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshBackgroundTasksGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBackgroundTask</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshBackgroundTask -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshBackgroundTask</maml:name>
          <maml:description>
            <maml:para>The IshBackgroundTasks that need to be handled.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshBackgroundTask[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: UserFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserFilter</maml:name>
        <maml:description>
          <maml:para>Enumeration indicating if only events of the current user or all events must be retrieved</maml:para>
          <maml:para>Possible values: Current, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">UserFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+UserFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>EventMonitor Events User Filter</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>All</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Current</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: ModifiedSince -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ModifiedSince</maml:name>
        <maml:description>
          <maml:para>A date limiting the events that will be retrieved based on the last modification date of the events</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>26/07/2021 12:00:00 AM</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshBackgroundTask -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshBackgroundTask</maml:name>
        <maml:description>
          <maml:para>The IshBackgroundTasks that need to be handled.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshBackgroundTask[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshBackgroundTasks that need to be handled.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBackgroundTask -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshBackgroundTask is one entry on the BackgroundTask history are, also holding task top-level information.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          Get-IshBackgroundTask
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Returns the full denormalized task/history entries limited to only Basic fields, for All users and the last 24 hours.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $allMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name CREATIONDATE  |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name CURRENTATTEMPT |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name EVENTTYPE |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name EXECUTEAFTERDATE |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name HASHID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name INPUTDATAID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name LEASEDBY |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name LEASEDON |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name MODIFICATIONDATE |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name OUTPUTDATAID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name PROGRESSID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name STATUS -ValueType Value |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name STATUS -ValueType Element |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name TASKID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name TRACKINGID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name USERID -ValueType All |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name ENDDATE |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name ERROR |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name ERRORNUMBER |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name EXITCODE |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name HISTORYID |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name HOSTNAME |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name OUTPUT |
          Set-IshRequestedMetadataField -IshSession $ishSession -Level History -Name STARTDATE
          Get-IshBackgroundTask -IshSession $ishSession -RequestedMetadata $allMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Returns the full denormalized task/history entries limited to All users and the last 24 hours.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>Get-IshBackgroundTask -IshSession $ishSession -ModifiedSince ((Get-Date).AddSeconds(-10)) -UserFilter Current</dev:code>
        <dev:remarks>
          <maml:para>Returns the full denormalized task/history entries limited to only Basic fields, the current user and limited to 10 seconds ago of activity.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $filterMetadata = Set-IshMetadataFilterField -IshSession $ishSession -Level Task -Name EVENTTYPE -FilterOperator In -Value "CREATETRANSLATIONS, CREATETRANSLATIONFROMLIST" |
          Set-IshMetadataFilterField -IshSession $ishSession -Level Task -Name TASKID -Value $taskId
          Get-IshBackgroundTask -IshSession $ishSession -MetadataFilter $filterMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>Returns the full denormalized task/history entries limited to only Basic fields, for All users and the last 24 hours.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>
          $metadata = Set-IshRequestedMetadataField -IshSession $ishSession -Level Task -Name STATUS
          Get-IshBackgroundTask -IshSession $ishSession -RequestedMetadata $metadata | Group-Object -Property status
        </dev:code>
        <dev:remarks>
          <maml:para>Returns the group-by count by status, for All users and the last 24 hours.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshBaseline -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshBaseline</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshBaseline</command:noun>
      <maml:description>
        <maml:para>The Add-IshBaseline cmdlet adds the new baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshBaseline cmdlet adds the new baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the new baseline.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the new baseline.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the baselines to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          Add-IshBaseline -IshSession $ishSession -Name "My first baseline"
        </dev:code>
        <dev:remarks>
          <maml:para>Create a baseline ishobject, that holds no baseline entries</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshBaseline -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshBaseline</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshBaseline</command:noun>
      <maml:description>
        <maml:para>The Find-IshBaseline cmdlet finds baselines using MetadataFilter that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshBaseline cmdlet finds baselines using MetadataFilter that are provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          Find-IshBaseline -IshSession $ishSession -RequestedMetadata (Set-IshRequestedMetadataField -IshSession $ishSession -Name "NAME")
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve all baselines</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          Find-IshBaseline -MetadataFilter (Set-IshMetadataFilterField -IshSession $ishSession -Name "FISHBASELINEACTIVE" -ValueType Element -Value "FALSE")
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve all active baselines with Basic metadata.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshBaseline -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshBaseline</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshBaseline</command:noun>
      <maml:description>
        <maml:para>The Get-IshBaseline cmdlet retrieves the metadat of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshBaseline cmdlet retrieves the metadat of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The baseline identifiers for which to retrieve the metadata</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The baseline identifiers for which to retrieve the metadata</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the baselines for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineIds = @("GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534","GUID-F1361489-66F3-4E27-A5D1-71C97025815A")
          Get-IshBaseline -Id $baselineIds -RequestedMetadata (Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHDOCUMENTRELEASE")
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve metadata from the identified baselines</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineIds = @("GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534","GUID-F1361489-66F3-4E27-A5D1-71C97025815A")
          Get-IshBaseline -IshSesssion $ishSession -Id $baselineIds -RequestedMetadata (Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHDOCUMENTRELEASE")
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve metadata from the identified baselines</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshBaseline -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshBaseline</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshBaseline</command:noun>
      <maml:description>
        <maml:para>The Remove-IshBaseline cmdlet removes the baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshBaseline cmdlet removes the baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the baseline to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the baseline to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the baselines to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineId = "GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534"
          Remove-IshBaseline -IshSession $ishSession -Id $baselineId
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve metadata from the identified baseline</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshBaseline -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshBaseline</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshBaseline</command:noun>
      <maml:description>
        <maml:para>The Set-IshBaseline cmdlet updates the baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshBaseline cmdlet updates the baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user group to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the user group</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshBaseline</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user group to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the user group</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineId = "GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534"
          Set-IshBaseline -IshSession $ishSession -Id $baselineId -Metadata (Set-IshMetadataField -IshSession $ishSession -Name "FISHBASELINEACTIVE" -ValueType Element -Value "FALSE")
        </dev:code>
        <dev:remarks>
          <maml:para>Make the identified baseline inactive</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshBaselineItem -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshBaselineItem</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshBaselineItem</command:noun>
      <maml:description>
        <maml:para>The Get-IshBaselineItem cmdlet retrieves the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshBaselineItem cmdlet retrieves the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The baseline identifiers for which to retrieve the baseline entries</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to retrieve the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The baseline identifiers for which to retrieve the baseline entries</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines for which to retrieve the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the baselines for which to retrieve the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBaselineItem -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaselineItem</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the API holding various references</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineIds = @("GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534","GUID-F1361489-66F3-4E27-A5D1-71C97025815A")
          Get-IshBaselineItem -IshSession $ishSession -Id $baselineIds
        </dev:code>
        <dev:remarks>
          <maml:para>Returns the baseline entries for the identified baselines including the baseline identifier</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshBaselineItem -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshBaselineItem</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshBaselineItem</command:noun>
      <maml:description>
        <maml:para>The Remove-IshBaselineItem cmdlet removes the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshBaselineItem cmdlet removes the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to remove the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshBaselineItemsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to remove the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines for which to remove the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineIds = @("GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534","GUID-F1361489-66F3-4E27-A5D1-71C97025815A")
          $ishObjects = Get-IshBaseline -IshSession $ishSession -Id $baselineIds
          Remove-IshBaselineItem -IshSession $ishSession -IshObject $ishObjects -LogicalId "GUID-12345678-ABCD-EFGH-IJKL-1234567890AB"
        </dev:code>
        <dev:remarks>
          <maml:para>Removes the LogicalId as baseline entry for the identified baselines</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshBaselineItem -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshBaselineItem</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshBaselineItem</command:noun>
      <maml:description>
        <maml:para>The Set-IshBaselineItem cmdlet creates or updates the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshBaselineItem cmdlet creates or updates the baseline entries of baselines that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to create or update the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the content object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshBaselineItemsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshBaselineItem</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the baselines for which to create or update the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshBaselineItem -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshBaselineItem</maml:name>
          <maml:description>
            <maml:para>Array with the baseline entries which will be applied to the IshObject in a minimal number of API calls. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshBaselineItem[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaselineItem[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the baselines for which to create or update the baseline entries. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the content object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshBaselineItem -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshBaselineItem</maml:name>
        <maml:description>
          <maml:para>Array with the baseline entries which will be applied to the IshObject in a minimal number of API calls. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshBaselineItem[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaselineItem[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaselineItem[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the baseline entries which will be applied to the IshObject in a minimal number of API calls. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshBaseline -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBaseline</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $baselineIds = @("GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534","GUID-F1361489-66F3-4E27-A5D1-71C97025815A")
          $ishObjects = Get-IshBaseline -IshSession $ishSession -Id $baselineIds
          Set-IshBaselineItem -IshSession $ishSession -IshObject $ishObjects -LogicalId "GUID-12345678-ABCD-EFGH-IJKL-1234567890AB" -Version "999"
        </dev:code>
        <dev:remarks>
          <maml:para>Add or update the version of the baseline entry identified by the given LogicalId for the identified baselines</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishObjectSource = Get-IshBaseline -Id "GUID-17443161-9CAD-4A9A-A3D3-F2942EDB0534"
          $baselineItems = Get-IshBaselineItem -IshObject $ishObjectSource
          $ishObjectTarget = Add-IshBaseline -Name "New Baseline"
          $ishObjectTarget = Set-IshBaselineItem -IshObject ishObjectTarget -IshBaselineItem $baselineItems
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Reading the information from the source baseline and creating a new target baseline which we fill with the selected versions.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: New-IshDitaGeneralizedXml -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-IshDitaGeneralizedXml</command:name>
      <command:verb>New</command:verb>
      <command:noun>IshDitaGeneralizedXml</command:noun>
      <maml:description>
        <maml:para>The New-IshDitaGeneralizedXml cmdlet generalizes all incoming files. Both the specialized input xml file and resulting generalized xml output file are validated.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-IshDitaGeneralizedXml cmdlet generalizes all incoming files. Both the specialized input xml file and resulting generalized xml output file are validated. Note that a DOCTYPE needs to be present in the input xml file and resulting generalized xml output file are validated.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>New-IshDitaGeneralizedXml</maml:name>
        <!-- Parameter: SpecializedCatalogFilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SpecializedCatalogFilePath</maml:name>
          <maml:description>
            <maml:para>The filepath of the catalog with the specialized DTDs. Best is to make a separate folders with all the specialized DTD files together + a catalog with relative locations to the specialized DTD files.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: GeneralizedCatalogFilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>GeneralizedCatalogFilePath</maml:name>
          <maml:description>
            <maml:para>The filepath of the catalog with the generalized/standard DTDs. Best is to make a separate folders with all the generalized DTD files together + a catalog with relative locations to the generalized DTD files.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: GeneralizationCatalogMappingFilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>GeneralizationCatalogMappingFilePath</maml:name>
          <maml:description>
            <maml:para>The location of a generalization mapping file. This mapping file defines the relation between the specialized dtd rootelements/public ids and the corresponding generalized dtd rootelements/public ids. It is of the following form: &lt;generalizationcataloglookup&gt; &lt;match rootelement="learningSummary" dtdpublicid="-//OASIS//DTD DITA Learning Summary//EN" generalizedrootelement="topic" generalizeddtdpublicid="-//OASIS//DTD DITA Topic//EN" generalizeddtdsystemid="dita-oasis/1.1/topic.dtd" /&gt; &lt;match rootelement="learningContent" generalizedrootelement="topic" generalizeddtdpublicid="-//OASIS//DTD DITA Topic//EN" generalizeddtdsystemid="dita-oasis/1.1/topic.dtd" /&gt; ... &lt;/generalizationcataloglookup&gt; The rootelement, dtdpublicid or dtdsystemid attributes are used to match the specialized xml rootelement or dtd, while the generalizedrootelement, generalizeddtdpublicid or generalizeddtdsystemid are used to specify the corresponding generalized rootelement/dtd. Note that: 1) At least one of the specialized attributes is required 2) The generalizedrootelement is required 3) Either the generalizeddtdpublicid or generalizeddtdsystemid is required</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AttributesToGeneralizeToProps -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttributesToGeneralizeToProps</maml:name>
          <maml:description>
            <maml:para>Array of attributes that are specialized from the DITA "props" attribute (and need to be generalized to it).</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: AttributesToGeneralizeToBase -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttributesToGeneralizeToBase</maml:name>
          <maml:description>
            <maml:para>Array of attributes that are specialized from the DITA "base" attribute (and need to be generalized to it).</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>FilePath can be used to specify one or more specialized input xml file locations.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Folder on the Windows filesystem where to store the new data files</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: SpecializedCatalogFilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>SpecializedCatalogFilePath</maml:name>
        <maml:description>
          <maml:para>The filepath of the catalog with the specialized DTDs. Best is to make a separate folders with all the specialized DTD files together + a catalog with relative locations to the specialized DTD files.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: GeneralizedCatalogFilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>GeneralizedCatalogFilePath</maml:name>
        <maml:description>
          <maml:para>The filepath of the catalog with the generalized/standard DTDs. Best is to make a separate folders with all the generalized DTD files together + a catalog with relative locations to the generalized DTD files.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: GeneralizationCatalogMappingFilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>GeneralizationCatalogMappingFilePath</maml:name>
        <maml:description>
          <maml:para>The location of a generalization mapping file. This mapping file defines the relation between the specialized dtd rootelements/public ids and the corresponding generalized dtd rootelements/public ids. It is of the following form: &lt;generalizationcataloglookup&gt; &lt;match rootelement="learningSummary" dtdpublicid="-//OASIS//DTD DITA Learning Summary//EN" generalizedrootelement="topic" generalizeddtdpublicid="-//OASIS//DTD DITA Topic//EN" generalizeddtdsystemid="dita-oasis/1.1/topic.dtd" /&gt; &lt;match rootelement="learningContent" generalizedrootelement="topic" generalizeddtdpublicid="-//OASIS//DTD DITA Topic//EN" generalizeddtdsystemid="dita-oasis/1.1/topic.dtd" /&gt; ... &lt;/generalizationcataloglookup&gt; The rootelement, dtdpublicid or dtdsystemid attributes are used to match the specialized xml rootelement or dtd, while the generalizedrootelement, generalizeddtdpublicid or generalizeddtdsystemid are used to specify the corresponding generalized rootelement/dtd. Note that: 1) At least one of the specialized attributes is required 2) The generalizedrootelement is required 3) Either the generalizeddtdpublicid or generalizeddtdsystemid is required</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AttributesToGeneralizeToProps -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AttributesToGeneralizeToProps</maml:name>
        <maml:description>
          <maml:para>Array of attributes that are specialized from the DITA "props" attribute (and need to be generalized to it).</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: AttributesToGeneralizeToBase -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AttributesToGeneralizeToBase</maml:name>
        <maml:description>
          <maml:para>Array of attributes that are specialized from the DITA "base" attribute (and need to be generalized to it).</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more specialized input xml file locations.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Folder on the Windows filesystem where to store the new data files</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more specialized input xml file locations.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          # This sample script will process all DITA xml files in the input folder and will generalize all DITA files either to Topic or Map.
          # Note that ditabase and ditaval are not supported.
          # Note that the xmls in the input folder needs to have a DOCTYPE.

          # Input folder with the specialized xmls to generalize.
          $inputfolder = "Data-GeneralizeDitaXml\InputFiles"
          # Output folder with the generalize xmls.
          $outputfolder = "Data-GeneralizeDitaXml\OutputFiles"

          # Location of the catalog xml that contains the specialized dtds
          $specializedCatalogLocation = "Samples\Data-GeneralizeDitaXml\SpecializedDTDs\catalog-alldita12dtds.xml"
          # Location of the catalog xml that contains the "base" dtds
          $generalizedCatalogLocation = "Samples\Data-GeneralizeDitaXml\GeneralizedDTDs\catalog-dita12topic&amp;maponly.xml";
          # File that contains a mapping between the specialized dtd and the according generalized dtd.
          $generalizationCatalogMappingLocation = "Samples\Data-GeneralizeDitaXml\generalization-catalog-mapping.xml"
          # If you would have specialized attributes from the DITA 1.2 "props" attribute, specify those attributes here to generalize them to the "props" attribute again.  Here just using modelyear, market, vehicle as an example
          $attributesToGeneralizeToProps = @("modelA", "modelB", "modelC")
          # If you would have specialized attributes from the DITA 1.2 "base" attribute, specify those attributes here to generalize them to the "base" attribute again. Here just using basea, baseb, basec as an example
          $attributesToGeneralizeToBase = @("basea", "baseb", "basec")

          # Read all the xml files to process and generalize all the files in the outputfolder
          Get-ChildItem $inputfolder -Include *.xml -Recurse |
          New-IshDitaGeneralizedXml -SpecializedCatalogFilePath $SpecializedCatalogFilePath `
          -GeneralizedCatalogFilePath $GeneralizedCatalogFilePath `
          -GeneralizationCatalogMappingFilePath $GeneralizationCatalogMappingFilePath `
          -AttributesToGeneralizeToProps $attributesToGeneralizeToProps `
          -AttributesToGeneralizeToBase $attributesToGeneralizeToBase `
          -FolderPath $outputfolder
        </dev:code>
        <dev:remarks>
          <maml:para>Generalize all DITA xml files in a certain directory</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $someLearningAssessmentFilePath = "Samples\InputFiles\Learning\LearningAssessment.xml"
          $outputfolder = "C:\temp\"
          $specializedCatalogLocation = "Samples\SpecializedDTDs\catalog-dita-1.2.xml"
          $generalizedCatalogLocation = "Samples\GeneralizedDTDs\catalog-dita-1.1.xml"
          $generalizationCatalogMappingLocation = "Samples\generalization-catalog-mapping.xml";
          $attributesToGeneralizeToProps = @("complexity", "visibility")          # array containing 2 elements
          $attributesToGeneralizeToBase = @();          # @() = empty array

          New-IshDitaGeneralizedXml -SpecializedCatalogFilePath $SpecializedCatalogFilePath `
          -GeneralizedCatalogFilePath $GeneralizedCatalogFilePath `
          -GeneralizationCatalogMappingFilePath $GeneralizationCatalogMappingFilePath `
          -AttributesToGeneralizeToProps $attributesToGeneralizeToProps `
          -AttributesToGeneralizeToBase $attributesToGeneralizeToBase
          -FilePath $someLearningAssessmentFilePath `
          -FolderPath $outputfolder
        </dev:code>
        <dev:remarks>
          <maml:para>Generalize one DITA xml file</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshDocumentObj</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>The Add-IshDocumentObj cmdlet adds the new document object(s) (which include illustrations) that are passed through the pipeline or determined via provided parameters This commandlet allows to create all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Add-IshPublicationOutput.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshDocumentObj cmdlet adds the new document object(s) (which include illustrations) that are passed through the pipeline or determined via provided parameters This commandlet allows to create all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Add-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroupFilePath -->
      <command:syntaxItem>
        <maml:name>Add-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj by IshFolder object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshType</maml:name>
          <maml:description>
            <maml:para>The IshType.</maml:para>
            <maml:para>Possible values: ISHNone, ISHNotFound, ISHModule, ISHMasterDoc, ISHLibrary, ISHTemplate, ISHIllustration, ISHPublication, ISHUser, ISHUserGroup, ISHUserRole, ISHBaseline, ISHOutputFormat, ISHEDT, ISHFolder, ISHTranslationJob, ISHConfiguration, ISHRevision, ISHFeatures, ISHBackgroundTask, ISHEvent, ISHAnnotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">ISHType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ISHType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration of all possible object types.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNone</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHNone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNotFound</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHModule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHMasterDoc</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHLibrary</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHIllustration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHPublication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUserGroup</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUserRole</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHBaseline</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutputFormat</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHEDT</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHFolder</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHTranslationJob</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHConfiguration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHRevision</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHFeatures</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHBackgroundTask</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHEvent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHAnnotation</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>GUID-29915B9F-DA1D-41E8-B1B9-E834546538C4</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The Version of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>NEW</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Lng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lng</maml:name>
          <maml:description>
            <maml:para>The Language of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolution -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolution</maml:name>
          <maml:description>
            <maml:para>The Resolution of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Edt -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Edt</maml:name>
          <maml:description>
            <maml:para>The unique identifier of the Electronic Document Type for the content (e.g. EDTPDF, EDTXML, EDTHTML,...) of the new object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>EDTXML</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>The path to the file containing data for the DocumentObj</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ParameterGroupFileContent -->
      <command:syntaxItem>
        <maml:name>Add-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj by IshFolder object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshType</maml:name>
          <maml:description>
            <maml:para>The IshType.</maml:para>
            <maml:para>Possible values: ISHNone, ISHNotFound, ISHModule, ISHMasterDoc, ISHLibrary, ISHTemplate, ISHIllustration, ISHPublication, ISHUser, ISHUserGroup, ISHUserRole, ISHBaseline, ISHOutputFormat, ISHEDT, ISHFolder, ISHTranslationJob, ISHConfiguration, ISHRevision, ISHFeatures, ISHBackgroundTask, ISHEvent, ISHAnnotation</maml:para>
          </maml:description>
          <command:parameterValue required="true">ISHType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ISHType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration of all possible object types.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNone</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHNone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNotFound</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHModule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHMasterDoc</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHLibrary</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHIllustration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHPublication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUser</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUserGroup</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHUserRole</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHBaseline</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutputFormat</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHEDT</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHFolder</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHTranslationJob</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHConfiguration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHRevision</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHFeatures</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHBackgroundTask</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHEvent</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHAnnotation</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>GUID-D2756B3B-1CBF-4B46-8815-11165D81A1DA</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The Version of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>NEW</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Lng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lng</maml:name>
          <maml:description>
            <maml:para>The Language of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolution -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolution</maml:name>
          <maml:description>
            <maml:para>The Resolution of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Edt -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Edt</maml:name>
          <maml:description>
            <maml:para>The unique identifier of the Electronic Document Type for the content (e.g. EDTPDF, EDTXML, EDTHTML,...) of the new object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>EDTXML</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FileContent -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FileContent</maml:name>
          <maml:description>
            <maml:para>String with XML content of the DocumentObj</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj.</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The FolderId of the DocumentObj by IshFolder object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IshObjectss that need to be added.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>The FolderId of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>-1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>The FolderId of the DocumentObj by IshFolder object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshType</maml:name>
        <maml:description>
          <maml:para>The IshType.</maml:para>
          <maml:para>Possible values: ISHNone, ISHNotFound, ISHModule, ISHMasterDoc, ISHLibrary, ISHTemplate, ISHIllustration, ISHPublication, ISHUser, ISHUserGroup, ISHUserRole, ISHBaseline, ISHOutputFormat, ISHEDT, ISHFolder, ISHTranslationJob, ISHConfiguration, ISHRevision, ISHFeatures, ISHBackgroundTask, ISHEvent, ISHAnnotation</maml:para>
        </maml:description>
        <command:parameterValue required="true">ISHType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ISHType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration of all possible object types.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNone</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHNone</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHNotFound</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHModule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHMasterDoc</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHLibrary</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHTemplate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHIllustration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHPublication</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHUser</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHUserGroup</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHUserRole</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHBaseline</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHOutputFormat</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHEDT</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHFolder</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHTranslationJob</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHConfiguration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHRevision</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHFeatures</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHBackgroundTask</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHEvent</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHAnnotation</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>GUID-B54C2103-774E-46D8-BD28-32793E0CF3EB</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The Version of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>NEW</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Lng -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Lng</maml:name>
        <maml:description>
          <maml:para>The Language of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolution -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolution</maml:name>
        <maml:description>
          <maml:para>The Resolution of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata of the DocumentObj.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Edt -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Edt</maml:name>
        <maml:description>
          <maml:para>The unique identifier of the Electronic Document Type for the content (e.g. EDTPDF, EDTXML, EDTHTML,...) of the new object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>EDTXML</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>The path to the file containing data for the DocumentObj</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FileContent -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FileContent</maml:name>
        <maml:description>
          <maml:para>String with XML content of the DocumentObj</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IshObjectss that need to be added.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshObjectss that need to be added.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Write-Host "`r`nCreate a logical, version, language level"
          $ditaFileContent = @"
          &lt;? xml version="1.0" ?&gt;
          &lt;!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd"&gt;
          &lt;topic&gt;&lt;title&gt;Enter the title of your topic here.&lt;? ish-replace-title?&gt;&lt;/title&gt;&lt;shortdesc&gt;Enter a short description of your topic here(optional).&lt;/shortdesc&gt;&lt;body&gt;&lt;p&gt;This is the start of your topic.&lt;/p&gt;&lt;/body&gt;&lt;/topic&gt;
          "@
          $ishMetadataFields = Set-IshMetadataField -Name "FTITLE" -Level "Logical" -Value "Example ISHModule" |
          Set-IshMetadataField -Name "FCHANGES" -Level "Version" -Value "Changes text field" |
          Set-IshMetadataField -Name "FSTATUS" -Level "Lng" -Value "Draft" |
          Set-IshMetadataField -Name "FAUTHOR" -Level "Lng" -Value "admin"
          # add object
          $ishObject = Add-IshDocumentObj `
          -FolderId "0" `
          -IshType "ISHModule" `
          -Lng "en" `
          -Metadata $ishMetadataFields `
          -Edt "EDTXML" `
          -FileContent $ditaFileContent
          $ishObject.ObjectRef| Format-Table
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Add Module without providing LogicalId, Version and using FileContent parameter</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "" -IshUserPassword  ""
          Write-Host "`r`nCreate a logical, version, language level"
          $timestamp = get-date -Format "yyyyMMddHHmmss"
          $logicalId = "MYGUID-$timestamp"
          $ditaFilePath = "c:\temp\Task.dita" # Template which is used to create a language level
          $ishMetadataFields = Set-IshMetadataField -IshSession $ishSession -Name "FTITLE" -Level "Logical" -Value "Example ISHModule" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FCHANGES" -Level "Version" -Value "Changes text field" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FSTATUS" -Level "Lng" -Value "Draft" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FAUTHOR" -Level "Lng" -Value "admin"
          # add object
          $ishObject = Add-IshDocumentObj -IshSession $ishSession `
          -FolderId "0" ` #use valid FolderId
          -LogicalId $logicalId `
          -IshType "ISHModule" `
          -Version "1" `
          -Lng "en" `
          -Metadata $ishMetadataFields `
          -Edt "EDTXML" `
          -FilePath $ditaFilePath
          $ishObject.ObjectRef| Format-Table
        </dev:code>
        <dev:remarks>
          <maml:para>Add Module with providing LogicalId and Version</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "" -IshUserPassword  ""
          Write-Host "`r`nCreate a logical, version, language level"
          $ditaFilePath = "c:\temp\Task.dita" # Template which is used to create a language level
          $ishMetadataFields = Set-IshMetadataField -IshSession $ishSession -Name "FTITLE" -Level "Logical" -Value "Example ISHModule" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FCHANGES" -Level "Version" -Value "Changes text field" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FSTATUS" -Level "Lng" -Value "Draft" `
          | Set-IshMetadataField -IshSession $ishSession -Name "FAUTHOR" -Level "Lng" -Value "admin"
          # add object
          $ishObject = Add-IshDocumentObj -IshSession $ishSession `
          -FolderId "0" ` #use valid FolderId
          -IshType "ISHModule" `
          -Lng "en" `
          -Metadata $ishMetadataFields `
          -Edt "EDTXML" `
          -FilePath $ditaFilePath
          $ishObject.ObjectRef| Format-Table
        </dev:code>
        <dev:remarks>
          <maml:para>Add Module without providing LogicalId and Version</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshDocumentObj</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>The Find-IshDocumentObj cmdlet finds document objects (which include illustrations) using MetadataFilter, TypeFilter and StatusFilter that are provided This commandlet allows to find all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Find-IshPublicationOutput.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshDocumentObj cmdlet finds document objects (which include illustrations) using MetadataFilter, TypeFilter and StatusFilter that are provided This commandlet allows to find all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Find-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshTypeFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshTypeFilter</maml:name>
          <maml:description>
            <maml:para>The folder type filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">ISHType[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ISHType[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StatusFilter</maml:name>
          <maml:description>
            <maml:para>The status type filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
          </maml:description>
          <command:parameterValue required="true">StatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshTypeFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshTypeFilter</maml:name>
        <maml:description>
          <maml:para>The folder type filter to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">ISHType[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ISHType[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StatusFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StatusFilter</maml:name>
        <maml:description>
          <maml:para>The status type filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
        </maml:description>
        <command:parameterValue required="true">StatusFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $yesterday = (Get-Date).AddDays(-1).ToString("dd/MM/yyyy HH:mm:ss")
          Find-IshDocumentObj -MetadataFilter(Set-IshMetadataFilterField -Level Lng -Name MODIFIED-ON -FilterOperator GreaterThan -Value $yesterday)
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Returns the documents that are touched since yesterday.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $dateInThePast = (Get-Date).AddDays(-2000).ToString("dd/MM/yyyy HH:mm:ss")
          $ishObjects = Find-IshDocumentObj -MetadataFilter(Set-IshMetadataFilterField -Level Lng -Name MODIFIED-ON -FilterOperator GreaterThan -Value $dateInThePast) `
          -RequestedMetadata(Set-IshRequestedMetadataField -Level Lng -Name FISHLASTMODIFIEDON)
          $ishObjects | Select-Object -Property IshType, IshRef, version_version_value, doc-language, fresolution, fishlastmodifiedon, fishlastmodifiedby, fstatus, checked-out-by, ftitle_logical_value | Format-Table
        </dev:code>
        <dev:remarks>
          <maml:para>Timesliced retrieval based on the metadata MODIFIED-ON date. Note that adding a second MODIFIED-ON filter using LessThan is possible.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Find-IshDocumentObj -MetadataFilter (Set-IshMetadataFilterField -Name ED -Level Lng -FilterOperator Equal -Value GUID-92073CF5-ADFD-4FE4-9671-8196FCE5AE1D)
        </dev:code>
        <dev:remarks>
          <maml:para>Suppose you get a 'revisionId' back through some error message, then the above cmdlet is a way to return you the LogicalId (typically GUID), version and language back of the content object. The ED field holds the currently latest 'revisionId' while FISHREVISIONS holds the previously ones.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshDocumentObj</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>Retrieves the metadata and optionally blob of document objects</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Gets IshObject entries through logical id filtering or language card ids, optionally providing the blob.</maml:para>
      <maml:para>Uses DocumentObj25 API to retrieve ishobjects.</maml:para>
      <maml:para>The Get-IshDocumentObj cmdlet retrieves metadata of the document objects that are passed through the pipeline or determined via provided parameters. This commandlet allows to retrieve all types of objects(Illustrations, Maps, etc. ), except for publication(outputs). For publication(outputs) you need to use Get-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifiers of the document objects for which to retrieve the metadata</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StatusFilter</maml:name>
          <maml:description>
            <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
          </maml:description>
          <command:parameterValue required="true">StatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IncludeData -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeData</maml:name>
          <maml:description>
            <maml:para>Switch patameter that specifies if the return objects should hold the blob (ishdata) sections, potentially conditionally published if IshFeature was passed</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFeature -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFeature</maml:name>
          <maml:description>
            <maml:para>The condition context to use for conditional filtering. If no context is provided, the elements containing ishcondition attributes will always remain in the data content. You can use the Set-IshFeature cmdlet to create a condition context.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFeature[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StatusFilter</maml:name>
          <maml:description>
            <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
          </maml:description>
          <command:parameterValue required="true">StatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IncludeData -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeData</maml:name>
          <maml:description>
            <maml:para>Switch patameter that specifies if the return objects should hold the blob (ishdata) sections, potentially conditionally published if IshFeature was passed</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFeature -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFeature</maml:name>
          <maml:description>
            <maml:para>The condition context to use for conditional filtering. If no context is provided, the elements containing ishcondition attributes will always remain in the data content. You can use the Set-IshFeature cmdlet to create a condition context.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFeature[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifiers of the document objects for which to retrieve the metadata</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StatusFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StatusFilter</maml:name>
        <maml:description>
          <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
        </maml:description>
        <command:parameterValue required="true">StatusFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IncludeData -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IncludeData</maml:name>
        <maml:description>
          <maml:para>Switch patameter that specifies if the return objects should hold the blob (ishdata) sections, potentially conditionally published if IshFeature was passed</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshFeature -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshFeature</maml:name>
        <maml:description>
          <maml:para>The condition context to use for conditional filtering. If no context is provided, the elements containing ishcondition attributes will always remain in the data content. You can use the Set-IshFeature cmdlet to create a condition context.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFeature[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshDocumentObj -LogicalId ISHPUBLILLUSTRATIONMISSING
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Returns all versions/language of object identified through LogicalId Get-IshDocumentObj -LogicalId ISHPUBLILLUSTRATIONMISSING (typically also GUIDs).</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Move-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Move-IshDocumentObj</command:name>
      <command:verb>Move</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>The Move-IshDocumentObj cmdlet moves document objects that are passed through the pipeline or determined via provided parameters from one repository folder to another folder. This commandlet allows to move all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Move-IshPublicationOutput.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Move-IshDocumentObj cmdlet moves document objects that are passed through the pipeline or determined via provided parameters from one repository folder to another folder. This commandlet allows to move all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Move-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Move-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifiers of the document objects to move</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FromFolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FromFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where the objects are currently located</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FromIshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FromIshFolder</maml:name>
          <maml:description>
            <maml:para>The IshFolder object where the objects are currently located</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ToFolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where to move the document objects to</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-2</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ToIshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToIshFolder</maml:name>
          <maml:description>
            <maml:para>The IshFolder object where to move the document objects to</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Move-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FromFolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FromFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where the objects are currently located</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FromIshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FromIshFolder</maml:name>
          <maml:description>
            <maml:para>The IshFolder object where the objects are currently located</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ToFolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where to move the document objects to</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-2</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ToIshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToIshFolder</maml:name>
          <maml:description>
            <maml:para>The IshFolder object where to move the document objects to</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the object to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifiers of the document objects to move</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FromFolderId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FromFolderId</maml:name>
        <maml:description>
          <maml:para>The folder identifier where the objects are currently located</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>-1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: FromIshFolder -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FromIshFolder</maml:name>
        <maml:description>
          <maml:para>The IshFolder object where the objects are currently located</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ToFolderId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ToFolderId</maml:name>
        <maml:description>
          <maml:para>The folder identifier where to move the document objects to</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>-2</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ToIshFolder -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ToIshFolder</maml:name>
        <maml:description>
          <maml:para>The IshFolder object where to move the document objects to</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the object to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the object to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Move-IshDocumentObj -LogicalId ISHPUBLILLUSTRATIONMISSING -FromIshFolder (Get-IshFolder -BaseFolder System) -ToIshFolder (Get-IshDocumentObjFolderLocation -LogicalId ISHPUBLILLUSTRATIONMISSING)
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Moves DocumentObj (and PublicationOutput) to another folder.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshDocumentObj</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>The Remove-IshDocumentObj cmdlet removes the document objects that are passed through the pipeline or determined via provided parameters This commandlet allows to remove all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Remove-IshPublicationOutput.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshDocumentObj cmdlet removes the document objects that are passed through the pipeline or determined via provided parameters This commandlet allows to remove all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Remove-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Lng -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lng</maml:name>
          <maml:description>
            <maml:para>The language of the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolution -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolution</maml:name>
          <maml:description>
            <maml:para>The resolution of the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the document object is removed.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the document object is not removed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>When the Force switch is set, after deleting the language object, the version object and logical object will be deleted if they don't have any language objects anymore</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the document object is removed.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the document object is not removed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>When the Force switch is set, after deleting the language object, the version object and logical object will be deleted if they don't have any language objects anymore</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the document object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the document object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Lng -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Lng</maml:name>
        <maml:description>
          <maml:para>The language of the document object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolution -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolution</maml:name>
        <maml:description>
          <maml:para>The resolution of the document object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the document object is removed.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the document object is not removed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>When the Force switch is set, after deleting the language object, the version object and logical object will be deleted if they don't have any language objects anymore</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshFolder -FolderPath $folderCmdletRootPath -Recurse |
          Get-IshFolderContent |
          Remove-IshDocumentObj -Force
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Removes all content objects from the listed folder and its subfolders.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Search-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Search-IshDocumentObj</command:name>
      <command:verb>Search</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>Search - so Full-Text-Index as data source, while Find is Relational Database as data source - matching the search criteria. Metadata is retrieved like Get-IshDocumentObj would, from the Relational Database.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Search - so Full-Text-Index as data source, while Find is Relational Database as data source - matching the search criteria. Metadata is retrieved like Get-IshDocumentObj would, from the Relational Database.</maml:para>
      <maml:para>Passes the search criteria to the Search25 API where the result set is capped by -MaxHitsToReturn. See online documentation for advanced query support on this 'ishquery' domain specific language.</maml:para>
      <maml:para>Then the search results is enriched using the DocumentObj25 API to retrieve ishobjects. As the output are IshObjects on the pipeline any further handling by other ISHRemote cmdlets or more is enabled.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: XmlQueryGroup -->
      <command:syntaxItem>
        <maml:name>Search-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: XmlQuery -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>XmlQuery</maml:name>
          <maml:description>
            <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MaxHitsToReturn -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MaxHitsToReturn</maml:name>
          <maml:description>
            <maml:para>The maximum amount of hits to return on the pipeline as IshObject[].</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: SimpleQueryGroup -->
      <command:syntaxItem>
        <maml:name>Search-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: SimpleQuery -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SimpleQuery</maml:name>
          <maml:description>
            <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MaxHitsToReturn -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MaxHitsToReturn</maml:name>
          <maml:description>
            <maml:para>The maximum amount of hits to return on the pipeline as IshObject[].</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: XmlQueryCountGroup -->
      <command:syntaxItem>
        <maml:name>Search-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: XmlQuery -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>XmlQuery</maml:name>
          <maml:description>
            <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Switch parameter that specifies to only return the count of the query and not IshObject[]</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: SimpleQueryCountGroup -->
      <command:syntaxItem>
        <maml:name>Search-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: SimpleQuery -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>SimpleQuery</maml:name>
          <maml:description>
            <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>Switch parameter that specifies to only return the count of the query and not IshObject[]</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: SimpleQuery -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>SimpleQuery</maml:name>
        <maml:description>
          <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <!-- Parameter: XmlQuery -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>XmlQuery</maml:name>
        <maml:description>
          <maml:para>The RAW xml ishquery used by Search25 API</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <!-- Parameter: MaxHitsToReturn -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MaxHitsToReturn</maml:name>
        <maml:description>
          <maml:para>The maximum amount of hits to return on the pipeline as IshObject[].</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>20</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>Switch parameter that specifies to only return the count of the query and not IshObject[]</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: Int64 -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Search-IshDocumentObj -SimpleQuery "bluetooth" -MaxHitsToReturn 200
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for 'bluetooth' in the ANY field of the LatestVersion collection (compared to AllVersion), with no filter on object types and only in the user's language. The MaxHitsToReturn limits the Full-Text-Index result set.</maml:para>
          <maml:para>Results are returned sorted by the Full-Text-Index engine, first by score then by title.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Search-IshDocumentObj -SimpleQuery "bluetooth" -Count
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for 'bluetooth' in the ANY field of the LatestVersion collection (compared to AllVersion), with no filter on object types and only in the user's language.</maml:para>
          <maml:para>Results a count of hits, there are no IshObjects on the pipeline (MaxHitsToReturn is 0).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Search-IshDocumentObj -SimpleQuery "*" -MaxHitsToReturn 2000 |
          Out-GridView -PassThru
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for '*' in the ANY field of the LatestVersion collection (so all latest version content objects are returned), with no filter on object types and only in the user's language. The MaxHitsToReturn limits the Full-Text-Index result set.</maml:para>
          <maml:para>Results are passed to Out-GridView where manual filtering can happen and the selection is passed to the pipeline for further processing.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Search-IshDocumentObj -SimpleQuery "red AND green AND blue" |
          Get-IshDocumentObjData -FolderPath c:\temp\
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for 'red AND green AND blue' in the ANY field of the LatestVersion collection (compared to AllVersion), with no filter on object types and only in the user's language. Note that the AND keyword is recognized as boolean operator for the ISHANYWHERE field, see API documentation.</maml:para>
          <maml:para>Results are returned sorted by the Full-Text-Index engine, first by score then by title. And this IshObjects are passed to Get-IshDocumentObjData for (xml) file downloading.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $xmlQuery = @"
          &lt;ishquery&gt;
          &lt;and&gt;&lt;ishfield name='ISHANYWHERE' level='none' ishoperator='contains'&gt;change oil filter&lt;/ishfield&gt;&lt;/and&gt;
          &lt;ishsort&gt;
          &lt;ishsortfield name='ISHSCORE' level='none' ishorder='d'/&gt;
          &lt;ishsortfield name='FTITLE' level='logical' ishorder='d'/&gt;
          &lt;/ishsort&gt;
          &lt;ishobjectfilters&gt;
          &lt;ishversionfilter&gt;LatestVersion&lt;/ishversionfilter&gt;
          &lt;ishtypefilter&gt;ISHModule&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHMasterDoc&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHLibrary&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHTemplate&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHIllustration&lt;/ishtypefilter&gt;
          &lt;ishlanguagefilter&gt;en&lt;/ishlanguagefilter&gt;
          &lt;/ishobjectfilters&gt;
          &lt;/ishquery&gt;
          "@
          $requestedMetadata = Set-IshRequestedMetadataField -Level Lng -Name FISHSTATUSTYPE
          Search-IshDocumentObj -XmlQuery $xmlQuery -MaxHitsToReturn 100 -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for 'change oil filter' in the ANY field of the LatestVersion collection (compared to AllVersion), filtered on these object types and language; results are returned sorted by the Full-Text-Index engine, and enriched with FISHSTATUSTYPE field on top of the $ishSession.DefaultRequestedMetadata</maml:para>
          <maml:para>The provided $xmlQuery is the default query of parameter set lead by -SimpleQuery; where the ISHANYWHERE is overwritten with the given -SimpleQuery value, and the ishlanguagefilter is overwritten with the user's language.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $xmlQuery = @"
          &lt;ishquery&gt;
          &lt;and&gt;&lt;ishfield name='ISHANYWHERE' level='none' ishoperator='contains'&gt;change oil filter&lt;/ishfield&gt;&lt;/and&gt;
          &lt;ishsort&gt;
          &lt;ishsortfield name='ISHSCORE' level='none' ishorder='d'/&gt;
          &lt;ishsortfield name='FTITLE' level='logical' ishorder='d'/&gt;
          &lt;/ishsort&gt;
          &lt;ishobjectfilters&gt;
          &lt;ishversionfilter&gt;LatestVersion&lt;/ishversionfilter&gt;
          &lt;ishtypefilter&gt;ISHModule&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHMasterDoc&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHLibrary&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHTemplate&lt;/ishtypefilter&gt;
          &lt;ishtypefilter&gt;ISHIllustration&lt;/ishtypefilter&gt;
          &lt;ishlanguagefilter&gt;en&lt;/ishlanguagefilter&gt;
          &lt;/ishobjectfilters&gt;
          &lt;/ishquery&gt;
          "@
          $requestedMetadata = Set-IshRequestedMetadataField -Level Lng -Name FISHSTATUSTYPE
          Search-IshDocumentObj -XmlQuery $xmlQuery -Count
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>Executes a Full-Text-Index search for 'change oil filter' in the ANY field of the LatestVersion collection (compared to AllVersion), filtered on these object types and language.</maml:para>
          <maml:para>Results a count of hits, there are no IshObjects on the pipeline (MaxHitsToReturn is 0).</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshDocumentObj -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshDocumentObj</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshDocumentObj</command:noun>
      <maml:description>
        <maml:para>The Set-IshDocumentObj cmdlet updates the document objects that are passed through the pipeline or determined via provided parameters This commandlet allows to update all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Set-IshPublicationOutput.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshDocumentObj cmdlet updates the document objects that are passed through the pipeline or determined via provided parameters This commandlet allows to update all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Set-IshPublicationOutput.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the object to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the object to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Lng -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Lng</maml:name>
          <maml:description>
            <maml:para>The language of the object to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Resolution -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolution</maml:name>
          <maml:description>
            <maml:para>The resolution of the object to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Edt -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Edt</maml:name>
          <maml:description>
            <maml:para>The unique identifier of the Electronic Document Type of the output (e.g. EDTPDF, EDTXML, EDTHTML,...)</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>The location of the file on the filesystem containing new content (xml, jpg, etc.) for the object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshDocumentObj</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the document object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the object to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the object to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Lng -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Lng</maml:name>
        <maml:description>
          <maml:para>The language of the object to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Resolution -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolution</maml:name>
        <maml:description>
          <maml:para>The resolution of the object to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the document object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the document object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Edt -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Edt</maml:name>
        <maml:description>
          <maml:para>The unique identifier of the Electronic Document Type of the output (e.g. EDTPDF, EDTXML, EDTHTML,...)</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>The location of the file on the filesystem containing new content (xml, jpg, etc.) for the object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshDocumentObj -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshDocumentObj</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl $wsBaseUrl -PSCredential Admin
          Get-IshDocumentObj -IshSession $ishSession -LogicalId ISHPUBLMODULECOMBINELANGUAGES |
          Set-IshMetadataField -IshSession $ishSession  -Name "FSTATUS" -Level "Lng" -ValueType "Element"  -Value "VSTATUSTOBEREVIEWED" |
          Set-IshDocumentObj -IshSession $ishSession |
          Set-IshMetadataField -IshSession $ishSession  -Name "FSTATUS" -Level "Lng" -ValueType "Element"  -Value "VSTATUSRELEASED" |
          Set-IshDocumentObj -IshSession $ishSession
        </dev:code>
        <dev:remarks>
          <maml:para>For all versions and languages retrieved, push them to status 'To Be Reviewed' and immediately to 'Release'. Note that also Find-IshDocumentObj or Get-IshFolderContent are ways to get to content objects.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishTopicMetadata = Set-IshMetadataField -Name "FTITLE" -Level Logical -Value "Topic $timestamp" |
          Set-IshMetadataField -Name "FAUTHOR" -Level Lng -ValueType Element -Value $ishUserAuthor |
          Set-IshMetadataField -Name "FSTATUS" -Level Lng -ValueType Element -Value $ishStatusDraft
          $ishObject = Add-IshDocumentObj -FolderId $ishFolderTopic.IshFolderRef -IshType ISHModule -Lng $ishLng -Metadata $ishTopicMetadata -FileContent $ditaTopicFileContent
          $ishObject = Set-IshDocumentObj -IshObject $ishObject -Metadata (Set-IshMetadataField -IshSession $ishSession -Name "FSTATUS" -Level Lng -ValueType Element -Value $ishStatusReleased)
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Typical mandatory metadata to create a content object. Then overwrite metadata in group on the specified one or more IshObjects.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshDocumentObjData -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshDocumentObjData</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshDocumentObjData</command:noun>
      <maml:description>
        <maml:para>The Get-IshDocumentObjData cmdlet retrieves the data/blob of the document objects that are passed through the pipeline or determined via provided parameters and saves them to the given Windows folder. This commandlet allows to retrieve all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Get-IshPublicationOutputData.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshDocumentObjData cmdlet retrieves the data/blob of the document objects that are passed through the pipeline or determined via provided parameters and saves them to the given Windows folder. This commandlet allows to retrieve all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Get-IshPublicationOutputData.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshDocumentObjData</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Folder on the Windows filesystem where to store the retrieved data files</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFeature -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFeature</maml:name>
          <maml:description>
            <maml:para>The condition context to use for conditional filtering. If no context is provided, the elements containing ishcondition attributes will always remain in the data content. You can use the Set-IshFeature cmdlet to create a condition context.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFeature[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Folder on the Windows filesystem where to store the retrieved data files</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFeature -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshFeature</maml:name>
        <maml:description>
          <maml:para>The condition context to use for conditional filtering. If no context is provided, the elements containing ishcondition attributes will always remain in the data content. You can use the Set-IshFeature cmdlet to create a condition context.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFeature[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
      <!-- OutputType: IshObject -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishMetadataFilterFields = Set-IshMetadataFilterField -IshSession $ishSession -Name "FTITLE" -Level "Logical" -FilterOperator "Like" -Value "%topic%" |
          Set-IshMetadataFilterField -IshSession $ishSession -Name "FAUTHOR" -Level "Lng" -FilterOperator "Equal" -Value "admin" |
          Set-IshMetadataFilterField -IshSession $ishSession -Name "FSTATUS" -Level "Lng" -FilterOperator "Equal" -Value "To be translated"
          $ishRequestedFields = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FTITLE" -Level "logical" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "VERSION" -Level "version" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "DOC-LANGUAGE" -Level "lng"
          $fileList = Find-IshDocumentObj -IshSession $ishSession -MetadataFilter $ishMetadataFilterFields `
          -IshTypeFilter "ISHModule" `
          -RequestedMetadata $ishRequestedFields |
          Get-IshDocumentObjData $ishSession `
          -FolderPath "c:\temp\export"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Download modules to a temp location</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshDocumentObjFolderLocation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshDocumentObjFolderLocation</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshDocumentObjFolderLocation</command:noun>
      <maml:description>
        <maml:para>The Get-IshDocumentObjFolderLocation cmdlet returns the repository location of a document object in a form of a separated string e.g. "General\Folder1\Folder2" This commandlet allows to retrieve the location of all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Get-IshPublicationOutputFolderLocation.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshDocumentObjFolderLocation cmdlet returns the repository location of a document object in a form of a separated string e.g. "General\Folder1\Folder2" This commandlet allows to retrieve the location of all types of objects (Illustrations, Maps, etc. ), except for publication (outputs). For publication (outputs) you need to use Get-IshPublicationOutputFolderLocation.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshDocumentObjFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the DocumentObj object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshDocumentObjFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Object for which to retrieve the folder location. This object can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the DocumentObj object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Object for which to retrieve the folder location. This object can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Object for which to retrieve the folder location. This object can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $folderPath = Get-IshDocumentObjFolderLocation -LogicalId "GUID-8C8F01ED-9785-47DE-9A00-1F8AAFD94E7D"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve location of the DocumentObj</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshEDT -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshEDT</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshEDT</command:noun>
      <maml:description>
        <maml:para>The Add-IshEDT cmdlet adds the new EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshEDT cmdlet adds the new EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Name for the new EDT</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>MetaData - xml structure that will be used for the new EDT</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>IshObject - contains EDT data that needs to be created. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Name for the new EDT</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>MetaData - xml structure that will be used for the new EDT</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>IshObject - contains EDT data that needs to be created. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>IshObject - contains EDT data that needs to be created. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshEDT -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEDT</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "EDT-CANDIDATE" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-MIME-TYPE" -Level "none" -Value "text/xml"
          $edt = Add-IshEDT -Name "MYEDT" -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Add a new EDT</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshEDT -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshEDT</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshEDT</command:noun>
      <maml:description>
        <maml:para>The Find-IshEDT cmdlet finds EDT objects using ActivityFilter and MetadataFilter that are provided</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshEDT cmdlet finds EDT objects using ActivityFilter and MetadataFilter that are provided</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshEDT -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEDT</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishMetadataFilterFields = Set-IshMetadataFilterField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "None" -FilterOperator "Like" -Value "%xml%"
          $ishRequestedFields = Set-IshRequestedMetadataField -IshSession $ishSession -Name "NAME" -Level "None"
          $edtList = Find-IshEDT `
          -ActivityFilter "None" `
          -MetadataFilter $ishMetadataFilterFields `
          -RequestedMetadata $ishRequestedFields
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Find EDTs with names containing "edt" text</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshEDT -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshEDT</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshEDT</command:noun>
      <maml:description>
        <maml:para>The Get-IshEDT cmdlet retrieves the metadata of the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshEDT cmdlet retrieves the metadata of the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Id - string array with IDs of the EDTs</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Id - string array with IDs of the EDTs</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshEDT -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEDT</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "EDT-CANDIDATE" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-MIME-TYPE" -Level "none" -Value "text/xml"
          $edt = Add-IshEDT -IshSession $ishSession `
          -Name "MYEDT" `
          -Metadata $metadata
          $edtId = $edt[0].IshRef
          $ishRequestedFields = Set-IshRequestedMetadataField -IshSession $ishSession -Name "NAME" -Level "None"
          $edtRetrieve = Get-IshEDT `
          -Id @($edtId) `
          -ActivityFilter "None" `
          -RequestedMetadata $ishRequestedFields
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve Name of added EDT</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshEDT -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshEDT</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshEDT</command:noun>
      <maml:description>
        <maml:para>The Remove-IshEDT cmdlet removes the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshEDT cmdlet removes the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The Id - element name of the EDT to be removed</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IshObject array containing EDTs that needs to be deleted. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The Id - element name of the EDT to be removed</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IshObject array containing EDTs that needs to be deleted. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshObject array containing EDTs that needs to be deleted. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "EDT-CANDIDATE" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-MIME-TYPE" -Level "none" -Value "text/xml"
          $edt = Add-IshEDT -IshSession $ishSession `
          -Name "MYEDT" `
          -Metadata $metadata
          #Remove EDT using pipeline
          $edt | Remove-IshEDT
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Remove added EDT</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshEDT -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshEDT</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshEDT</command:noun>
      <maml:description>
        <maml:para>The Set-IshEDT cmdlet updates the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshEDT cmdlet updates the EDTs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>EDT Element Name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshEDT</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>EDT Element Name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the object. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the objects for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshEDT -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEDT</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $edtName = "MYEDT"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "EDT-CANDIDATE" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "none" -Value "XML" |
          Set-IshMetadataField -IshSession $ishSession -Name "EDT-MIME-TYPE" -Level "none" -Value "text/xml"
          $edtAdd = Add-IshEDT -IshSession $ishSession -Name $edtName -Metadata $metadata
          $metadataUpdate = Set-IshMetadataField -IshSession $ishSession -Name "NAME" -Level "none" -Value ($edtName + " updated")
          $requiredCurrentMetadata = Set-IshRequiredCurrentMetadataField -IshSession $ishSession -Name "EDT-FILE-EXTENSION" -Level "none" -Value "XML"
          Set-IshEDT -RequiredCurrentMetadata $requiredCurrentMetadata -Metadata $metadataUpdate
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Add EDT and update name</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Set-IshEDT -IshSession $ishSession -Id EDTXML -Metadata (Set-IshMetadataField -IshSession $ishSession -Name "EDT-CANDIDATE" -Level None -ValueType Value -Value "xml, dita, ditamap")
        </dev:code>
        <dev:remarks>
          <maml:para>Adding .map and .ditamap to the EDTXML object. By adding these, tools like Content-Importer/DITA2Trisoft can import .xml, .dita and .ditamap files and they will all be assigned EDTXML as Electronic Document Type.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshEvent -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshEvent</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshEvent</command:noun>
      <maml:description>
        <maml:para>Gets EventMonitor entries with filtering options.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Uses EventMonitor25 API to retrieve ishevents showing progress of background task events from the centralized log system.</maml:para>
      <maml:para>This table oriented API maps straight through to database column names regarding ishfield usage.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshEvent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventTypes -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventTypes</maml:name>
          <maml:description>
            <maml:para>String array containing the event types to retrieve (e.g. EXPORTFORPUBLICATION, PUSHTRANSLATIONS,...)</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ProgressStatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ProgressStatusFilter</maml:name>
          <maml:description>
            <maml:para>The enumeration indicating which overall status the event must have (e.g. All, Success, Failed,...)</maml:para>
            <maml:para>Possible values: Busy, Success, Warning, Failed, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ProgressStatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ProgressStatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>EventMonitor Events Status Filter</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Busy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Success</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Failed</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ModifiedSince -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ModifiedSince</maml:name>
          <maml:description>
            <maml:para>A date limiting the events that will be retrieved based on the last modification date of the events</maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
          <dev:type>
            <maml:name>System.DateTime</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>26/07/2021 12:00:00 AM</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: UserFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserFilter</maml:name>
          <maml:description>
            <maml:para>Enumeration indicating if only events of the current user or all events must be retrieved</maml:para>
            <maml:para>Possible values: Current, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">UserFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+UserFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>EventMonitor Events User Filter</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>All</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Current</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventLevel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventLevel</maml:name>
          <maml:description>
            <maml:para>Possible values for the level of an event detail.</maml:para>
            <maml:para>Possible values: Exception, Warning, Configuration, Information, Verbose, Debug</maml:para>
          </maml:description>
          <command:parameterValue required="true">EventLevel</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+EventLevel</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Possible values for the level of an event detail</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Exception</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Exception</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Configuration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Information</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Verbose</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Debug</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshEventsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshEvent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: EventLevel -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EventLevel</maml:name>
          <maml:description>
            <maml:para>Possible values for the level of an event detail.</maml:para>
            <maml:para>Possible values: Exception, Warning, Configuration, Information, Verbose, Debug</maml:para>
          </maml:description>
          <command:parameterValue required="true">EventLevel</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+EventLevel</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Possible values for the level of an event detail</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Exception</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Exception</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Configuration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Information</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Verbose</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Debug</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshEvent -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshEvent</maml:name>
          <maml:description>
            <maml:para>The IshEvents that need to be handled.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshEvent[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: EventTypes -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventTypes</maml:name>
        <maml:description>
          <maml:para>String array containing the event types to retrieve (e.g. EXPORTFORPUBLICATION, PUSHTRANSLATIONS,...)</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ProgressStatusFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ProgressStatusFilter</maml:name>
        <maml:description>
          <maml:para>The enumeration indicating which overall status the event must have (e.g. All, Success, Failed,...)</maml:para>
          <maml:para>Possible values: Busy, Success, Warning, Failed, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ProgressStatusFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ProgressStatusFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>EventMonitor Events Status Filter</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>All</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Busy</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Success</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Failed</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: ModifiedSince -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ModifiedSince</maml:name>
        <maml:description>
          <maml:para>A date limiting the events that will be retrieved based on the last modification date of the events</maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>System.DateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>26/07/2021 12:00:00 AM</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: UserFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserFilter</maml:name>
        <maml:description>
          <maml:para>Enumeration indicating if only events of the current user or all events must be retrieved</maml:para>
          <maml:para>Possible values: Current, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">UserFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+UserFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>EventMonitor Events User Filter</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>All</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Current</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>Filter on metadata to limit the objects on which metadata has to be returned</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>XML structure indicating which metadata has to be retrieved.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: EventLevel -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EventLevel</maml:name>
        <maml:description>
          <maml:para>Possible values for the level of an event detail.</maml:para>
          <maml:para>Possible values: Exception, Warning, Configuration, Information, Verbose, Debug</maml:para>
        </maml:description>
        <command:parameterValue required="true">EventLevel</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+EventLevel</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Possible values for the level of an event detail</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Exception</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Exception</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Warning</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Configuration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Information</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Verbose</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Debug</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshEvent -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshEvent</maml:name>
        <maml:description>
          <maml:para>The IshEvents that need to be handled.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshEvent[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshEvents that need to be handled.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshEvent -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshEvent is one entry on the EventMonitor detail are, also holding progress top-level information.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $requestedMetadata = Set-IshRequestedMetadataField -Name "EVENTID" -Level "Progress" |
          Set-IshRequestedMetadataField -Name "EVENTTYPE" -Level "Progress"
          Get-IshEvent -EventTypes @("EXPORTFORPUBLICATION","SYNCHRONIZETOLIVECONTENT") -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets all top-level (progress) ishevents filtered to publish and synchronize events.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTID" -Level "Progress" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTTYPE" -Level "Progress" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTDATATYPE" -Level "Detail"
          $metadataFilter = Set-IshMetadataFilterField -IshSession $ishSession -Name "EVENTDATATYPE" -Level "Detail" -FilterOperator "NotEqual" -Value "10"
          Get-IshEvent -IshSession $ishSession -EventTypes @("EXPORTFORPUBLICATION","SYNCHRONIZETOLIVECONTENT") -RequestedMetadata $requestedMetadata -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>Gets up to detail ishevents filtered to publish and synchronize events and the eventdatatype should differ from 10.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTID" -Level "Progress" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTTYPE" -Level "Progress" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "EVENTDATATYPE" -Level "Detail"
          $metadataFilter = Set-IshMetadataFilterField -IshSession $ishSession -Name "ACTION" -Level "Detail" -FilterOperator In -Value "Request started, Start execution, Execution completed"
          Get-IshEvent -IshSession $ishSession -EventTypes @("EXPORTFORPUBLICATION") -RequestedMetadata $requestedMetadata -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>Gets up to detail ishevents filtered to publish events and filters to only have the queue event, processing started and processing ended. This allows calculation of lead times and through put.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshFeature -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshFeature</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshFeature</command:noun>
      <maml:description>
        <maml:para>The Set-IshFeature cmdlet creates a new IshFeature based on the parameters provided. When IshFeature[] object is passed through the pipeline then the new feature is added based on the parameters provided</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshFeature cmdlet creates a new IshFeature based on the parameters provided. When IshFeature[] object is passed through the pipeline then the new feature is added based on the parameters provided</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-IshFeature</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The condition name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The condition value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFeature -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFeature</maml:name>
          <maml:description>
            <maml:para>The set of condition names and values</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFeature[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The condition name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The condition value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFeature -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFeature</maml:name>
        <maml:description>
          <maml:para>The set of condition names and values</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFeature[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The set of condition names and values</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshFeature -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFeature</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Stores a single feature part of the context that will be used as input by ConditionFilter to make an @ishcondition true. For example BLUETOOTH=Y</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishFeatures = Set-IshFeature -Name "ISHRemoteStringCond" -Value "StringOne" |
          Set-IshFeature -Name "ISHRemoteVersionCond" -Value "12.0.1"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Build a Condition Context for passing to Get-DocumentObjData.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshField -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshField</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshField</command:noun>
      <maml:description>
        <maml:para>The Set-IshField cmdlet sets/merges the IshFields * If an IshObject[] array parameter is provided (either explicit or via the pipeline), the MergeFields are merged according to the ValueAction parameter to all the IshFields of all the objects, and the objects are returned * If an IshFields object is provided (either explicit or via the pipeline), the MergeFields are merged according to the ValueAction parameter to the IshFields object and the resulting fields are returned * If none of the above applies, the fields in the MergeFields are returned</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshField cmdlet sets/merges the IshFields * If an IshObject[] array parameter is provided (either explicit or via the pipeline), the MergeFields are merged according to the ValueAction parameter to all the IshFields of all the objects, and the objects are returned * If an IshFields object is provided (either explicit or via the pipeline), the MergeFields are merged according to the ValueAction parameter to the IshFields object and the resulting fields are returned * If none of the above applies, the fields in the MergeFields are returned Best practice is to supply IshSession for future functionality.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MergeField -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>MergeField</maml:name>
          <maml:description>
            <maml:para>The IshField[] to merge</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueAction</maml:name>
          <maml:description>
            <maml:para>Whether the fields in the mergefields parameter will be prepended, appended or overwrite the values in the provided IshFields or IshObject objects</maml:para>
            <maml:para>Possible values: Overwrite, Prepend, Append</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueAction</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueAction</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>If two fields should be first, should the second value overwrite the first or prepend/append it</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Append</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Overwrite</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Prepend</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Append</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Objects to merge the fields in</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFieldGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: MergeField -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>MergeField</maml:name>
          <maml:description>
            <maml:para>The IshField[] to merge</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueAction -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueAction</maml:name>
          <maml:description>
            <maml:para>Whether the fields in the mergefields parameter will be prepended, appended or overwrite the values in the provided IshFields or IshObject objects</maml:para>
            <maml:para>Possible values: Overwrite, Prepend, Append</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueAction</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueAction</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>If two fields should be first, should the second value overwrite the first or prepend/append it</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Append</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Overwrite</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Prepend</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Append</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshField -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshField</maml:name>
          <maml:description>
            <maml:para>Fields to merge the mergefields in</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: MergeField -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>MergeField</maml:name>
        <maml:description>
          <maml:para>The IshField[] to merge</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueAction -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueAction</maml:name>
        <maml:description>
          <maml:para>Whether the fields in the mergefields parameter will be prepended, appended or overwrite the values in the provided IshFields or IshObject objects</maml:para>
          <maml:para>Possible values: Overwrite, Prepend, Append</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueAction</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueAction</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>If two fields should be first, should the second value overwrite the first or prepend/append it</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Append</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Overwrite</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Prepend</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Append</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Objects to merge the fields in</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshField -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshField</maml:name>
        <maml:description>
          <maml:para>Fields to merge the mergefields in</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Objects to merge the fields in</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Fields to merge the mergefields in</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
      <!-- OutputType: IshObject -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishMetadataFieldsAction = Set-IshMetadataField -Name "FISHUSERDISABLED" -Level "none" -ValueType "Element" -Value "TRUE" |
          Set-IshMetadataField -Name "FISHOBJECTACTIVE" -Level "none" -ValueType "Element" -Value "FALSE"
          $ishobject = $ishobject |
          Set-IshField -MergeFields $ishMetadataFieldsAction -ValueAction "Overwrite" |
          Set-IshUser -IshSession $ishSession
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Preferably use the specialized IshField cmdlets, more for testing purposes this one.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshFolder -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshFolder</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshFolder</command:noun>
      <maml:description>
        <maml:para>The Add-IshFolder cmdlet adds the new folders that are passed through the pipeline or determined via provided parameters. Query and Reference folders are not supported.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshFolder cmdlet adds the new folders that are passed through the pipeline or determined via provided parameters. Query and Reference folders are not supported.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentFolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentFolderId</maml:name>
          <maml:description>
            <maml:para>The identifier of the parent folder where the new folder will be created</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FolderType -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderType</maml:name>
          <maml:description>
            <maml:para>The Type of the new Folder</maml:para>
            <maml:para>Possible values: ISHNone, ISHModule, ISHMasterDoc, ISHLibrary, ISHTemplate, ISHIllustration, ISHPublication, ISHReference, ISHQuery</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolderType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration of folder types.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNone</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHNone</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHModule</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHMasterDoc</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHLibrary</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHTemplate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHIllustration</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHPublication</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReference</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHQuery</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FolderName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderName</maml:name>
          <maml:description>
            <maml:para>The Name of the new Folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OwnedBy -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OwnedBy</maml:name>
          <maml:description>
            <maml:para>The name of the UserGroup that will be the owner of the new folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ReadAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadAccess</maml:name>
          <maml:description>
            <maml:para>Array with the UserGroups that have ReadAccess to the new folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFoldersGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ParentFolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ParentFolderId</maml:name>
          <maml:description>
            <maml:para>The identifier of the parent folder where the new folder will be created</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The IshFolder array that needs to be created. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ParentFolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ParentFolderId</maml:name>
        <maml:description>
          <maml:para>The identifier of the parent folder where the new folder will be created</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: FolderType -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderType</maml:name>
        <maml:description>
          <maml:para>The Type of the new Folder</maml:para>
          <maml:para>Possible values: ISHNone, ISHModule, ISHMasterDoc, ISHLibrary, ISHTemplate, ISHIllustration, ISHPublication, ISHReference, ISHQuery</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolderType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration of folder types.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNone</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHNone</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHModule</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHMasterDoc</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHLibrary</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHTemplate</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHIllustration</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHPublication</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHReference</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHQuery</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FolderName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderName</maml:name>
        <maml:description>
          <maml:para>The Name of the new Folder</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OwnedBy -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OwnedBy</maml:name>
        <maml:description>
          <maml:para>The name of the UserGroup that will be the owner of the new folder</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ReadAccess -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ReadAccess</maml:name>
        <maml:description>
          <maml:para>Array with the UserGroups that have ReadAccess to the new folder</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>The IshFolder array that needs to be created. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshFolder array that needs to be created. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshFolder -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $folderName = "New folder created by powershell"
          $parentFolderId = "7775" # provide a valid parent folder Id
          $ishFolders = Add-IshFolder `
          -ParentFolderId $parentFolderId `
          -FolderType "ISHModule" `
          -FolderName $folderName `
          -ReadAccess @("") `
          -OwnedBy ""
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Add a folder using input parameters</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshFolder -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshFolder</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshFolder</command:noun>
      <maml:description>
        <maml:para>The Get-IshFolder cmdlet retrieves metadata for the folders by providing one of the following input data: - FolderPath string with the separated full folder path - FolderIds array containing identifiers of the folders - BaseFolder enum value referencing the specified root folder - IshFolder[] array passed through the pipeline Query and Reference folders are not supported.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshFolder cmdlet retrieves metadata for the folders by providing one of the following input data: - FolderPath string with the separated full folder path - FolderIds array containing identifiers of the folders - BaseFolder enum value referencing the specified root folder - IshFolder[] array passed through the pipeline Query and Reference folders are not supported.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: FolderIdGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>Unique folder identifier</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Depth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Depth</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of up to Depth of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>2147483647</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FolderTypeFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderTypeFilter</maml:name>
          <maml:description>
            <maml:para>Recursive retrieval will loop all folder, this filter will only return folder matching the filter to the pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolderType[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FolderPathGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Separated string with the full folder path, e.g. "General\Project\Topics"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Depth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Depth</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of up to Depth of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>2147483647</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FolderTypeFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderTypeFilter</maml:name>
          <maml:description>
            <maml:para>Recursive retrieval will loop all folder, this filter will only return folder matching the filter to the pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolderType[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>Folders for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Depth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Depth</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of up to Depth of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>2147483647</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FolderTypeFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderTypeFilter</maml:name>
          <maml:description>
            <maml:para>Recursive retrieval will loop all folder, this filter will only return folder matching the filter to the pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolderType[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BaseFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseFolder</maml:name>
          <maml:description>
            <maml:para>The BaseFolder enumeration to get subfolders for the specified root folder</maml:para>
            <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumerations of basefolders</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Data</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Depth -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Depth</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of up to Depth of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>2147483647</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: FolderTypeFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderTypeFilter</maml:name>
          <maml:description>
            <maml:para>Recursive retrieval will loop all folder, this filter will only return folder matching the filter to the pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolderType[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Separated string with the full folder path, e.g. "General\Project\Topics"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>Unique folder identifier</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: BaseFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseFolder</maml:name>
        <maml:description>
          <maml:para>The BaseFolder enumeration to get subfolders for the specified root folder</maml:para>
          <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumerations of basefolders</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Data</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>Folders for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Recurse -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Depth -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Depth</maml:name>
        <maml:description>
          <maml:para>Perform recursive retrieval of up to Depth of the provided incoming folder(s)</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>2147483647</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: FolderTypeFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderTypeFilter</maml:name>
        <maml:description>
          <maml:para>Recursive retrieval will loop all folder, this filter will only return folder matching the filter to the pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolderType[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+IshFolderType[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Unique folder identifier</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Folders for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshFolder -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential Admin
          Get-IshFolder -FolderPath "\General\__ISHRemote\Add-IshPublicationOutput\Pub"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Returns the IshFolder object.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential Admin
          (Get-IshFolder -BaseFolder Data).name
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Returns the name of the root data folder, typically called 'General'.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $requestedMetadata = Set-IshMetadataFilterField -Name "FNAME" -Level "None"
          $folderId = 7598 # provide a real folder identifier
          $ishFolder = Get-IshFolder -FolderId $folderId -RequestedMetaData $requestedMetadata
          $retrievedFolderName = $ishFolder.name
        </dev:code>
        <dev:remarks>
          <maml:para>Get folder name using Id with explicit requested metadata</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishFolders = Get-IshFolder -FolderPath "General\Myfolder" -FolderTypeFilter @("ISHModule", "ISHMasterDoc", "ISHLibrary") -Recurse
        </dev:code>
        <dev:remarks>
          <maml:para>Get folders recursively with filtering on folder type</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Move-IshFolder -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Move-IshFolder</command:name>
      <command:verb>Move</command:verb>
      <command:noun>IshFolder</command:noun>
      <maml:description>
        <maml:para>The Move-IshFolder cmdlet moves folders that are passed through the pipeline or determined via provided parameters to a different folder.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Move-IshFolder cmdlet moves folders that are passed through the pipeline or determined via provided parameters to a different folder.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Move-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where the folder is currently located</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ToFolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where to move the folder to</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFoldersGroup -->
      <command:syntaxItem>
        <maml:name>Move-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ToFolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>ToFolderId</maml:name>
          <maml:description>
            <maml:para>The folder identifier where to move the folder to</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolders -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolders</maml:name>
          <maml:description>
            <maml:para>Array with the folders to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>The folder identifier where the folder is currently located</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ToFolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>ToFolderId</maml:name>
        <maml:description>
          <maml:para>The folder identifier where to move the folder to</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshFolders -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolders</maml:name>
        <maml:description>
          <maml:para>Array with the folders to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the folders to move. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshFolder -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          Move-IshFolder -IshFolders (Get-IshFolder -FolderPath "General\__ISHRemote" -Recurse -Depth 2) -ToFolderId (Add-IshFolder...)
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Moves all folders listed under "General\__ISHRemote" to some other folder.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshFolder -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshFolder</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshFolder</command:noun>
      <maml:description>
        <maml:para>The Remove-IshFolder cmdlet removes the repository folders that are passed through the pipeline or determined via provided parameters Query and Reference folders are not supported.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshFolder cmdlet removes the repository folders that are passed through the pipeline or determined via provided parameters Query and Reference folders are not supported.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: FolderIdGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>Identifier of the folder to be removed</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FolderPathGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Full path to the folder that needs to be removed. Use the IshSession.FolderPathSeparator.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFoldersGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>Array with the folders to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Recurse -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Recurse</maml:name>
          <maml:description>
            <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Full path to the folder that needs to be removed. Use the IshSession.FolderPathSeparator.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>Identifier of the folder to be removed</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>Array with the folders to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Recurse -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Recurse</maml:name>
        <maml:description>
          <maml:para>Perform recursive retrieval of the provided incoming folder(s)</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the folders to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Remove-IshFolder -FolderId "674580"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Remove folder with specified Id</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshFolder -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshFolder</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshFolder</command:noun>
      <maml:description>
        <maml:para>The Set-IshFolder cmdlet updates the folders that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshFolder cmdlet updates the folders that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>Identifier of the folder to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: NewFolderName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NewFolderName</maml:name>
          <maml:description>
            <maml:para>New name of the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ReadAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadAccess</maml:name>
          <maml:description>
            <maml:para>String array with the user groups that have read access to this folder. When the string array is empty, all users have read access to the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FolderPathGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Separated string with the full folder path</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: NewFolderName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NewFolderName</maml:name>
          <maml:description>
            <maml:para>New name of the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ReadAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadAccess</maml:name>
          <maml:description>
            <maml:para>String array with the user groups that have read access to this folder. When the string array is empty, all users have read access to the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BaseFolderGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseFolder</maml:name>
          <maml:description>
            <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
            <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumerations of basefolders</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Data</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: NewFolderName -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NewFolderName</maml:name>
          <maml:description>
            <maml:para>New name of the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue></dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ReadAccess -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadAccess</maml:name>
          <maml:description>
            <maml:para>String array with the user groups that have read access to this folder. When the string array is empty, all users have read access to the folder</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshFolder</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>Folder for which to update the metadata. This folder can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Separated string with the full folder path</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: BaseFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseFolder</maml:name>
        <maml:description>
          <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
          <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumerations of basefolders</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Data</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>Identifier of the folder to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: NewFolderName -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NewFolderName</maml:name>
        <maml:description>
          <maml:para>New name of the folder</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ReadAccess -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ReadAccess</maml:name>
        <maml:description>
          <maml:para>String array with the user groups that have read access to this folder. When the string array is empty, all users have read access to the folder</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>Folder for which to update the metadata. This folder can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Identifier of the folder to update</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Folder for which to update the metadata. This folder can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshFolder -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $folderId = 655993 # provide real folder Id
          $newFolderName = "Updated Folder Name"
          $updatedFolder = Set-IshFolder -FolderId $folderId -NewFolderName $newFolderName
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Update name of a folder with provided FolderId</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshFolderContent -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshFolderContent</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshFolderContent</command:noun>
      <maml:description>
        <maml:para>The Get-IshFolderContent cmdlet returns all document objects or publication outputs stored inside a given folder. You can provide filters to reduce the amount of objects returned, but if you don't provide any: * The cmdlet will return an object for all the latest versions in all language and resolution for a document object folder * The cmdlet will return an object for all the latest versions for all output formats and all language combinations for a publication folder Note: The default value of the VersionFilter is "latest". In order to get all versions, you need to pass an empty string in the VersionFilter.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshFolderContent cmdlet returns all document objects or publication outputs stored inside a given folder. You can provide filters to reduce the amount of objects returned, but if you don't provide any: * The cmdlet will return an object for all the latest versions in all language and resolution for a document object folder * The cmdlet will return an object for all the latest versions for all output formats and all language combinations for a publication folder. Note: The default value of the VersionFilter is "latest". In order to get all versions, you need to pass an empty string in the VersionFilter.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: FolderIdGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderContent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>Identifier of the folder for which to retrieve the content</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: VersionFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VersionFilter</maml:name>
          <maml:description>
            <maml:para>The version filter to limit the amount of objects returned. When no filter is supplied, latest version objects will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>latest</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LanguagesFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguagesFilter</maml:name>
          <maml:description>
            <maml:para>The languages filter to limit the amount of objects returned. When no languages filter is supplied, all object languages will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FolderPathGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderContent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Separated string with the full folder path</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VersionFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VersionFilter</maml:name>
          <maml:description>
            <maml:para>The version filter to limit the amount of objects returned. When no filter is supplied, latest version objects will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>latest</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LanguagesFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguagesFilter</maml:name>
          <maml:description>
            <maml:para>The languages filter to limit the amount of objects returned. When no languages filter is supplied, all object languages will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BaseFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderContent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseFolder</maml:name>
          <maml:description>
            <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
            <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumerations of basefolders</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Data</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: VersionFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VersionFilter</maml:name>
          <maml:description>
            <maml:para>The version filter to limit the amount of objects returned. When no filter is supplied, latest version objects will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>latest</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LanguagesFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguagesFilter</maml:name>
          <maml:description>
            <maml:para>The languages filter to limit the amount of objects returned. When no languages filter is supplied, all object languages will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderContent</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>Folder for which to retrieve the content. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: VersionFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>VersionFilter</maml:name>
          <maml:description>
            <maml:para>The version filter to limit the amount of objects returned. When no filter is supplied, latest version objects will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>latest</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: LanguagesFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguagesFilter</maml:name>
          <maml:description>
            <maml:para>The languages filter to limit the amount of objects returned. When no languages filter is supplied, all object languages will be returned.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Separated string with the full folder path</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>Identifier of the folder for which to retrieve the content</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: BaseFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseFolder</maml:name>
        <maml:description>
          <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
          <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumerations of basefolders</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Data</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>Folder for which to retrieve the content. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: VersionFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>VersionFilter</maml:name>
        <maml:description>
          <maml:para>The version filter to limit the amount of objects returned. When no filter is supplied, latest version objects will be returned.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>latest</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: LanguagesFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguagesFilter</maml:name>
        <maml:description>
          <maml:para>The languages filter to limit the amount of objects returned. When no languages filter is supplied, all object languages will be returned.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>System.String[]</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Folder for which to retrieve the content. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshObject -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $folderId = 7775 #use correct folder id
          $ishObjects = Get-IshFolderContent -FolderId $folderId
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve contents of a given folder</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $metadataFilter = Set-IshMetadataFilterField -Level Lng -Name FSTATUS -ValueType Element -FilterOperator In -Value 'VSTATUSTOBETRANSLATED, VSTATUSINTRANSLATION' |
          Set-IshMetadataFilterField -Level Lng -Name FSOURCELANGUAGE -FilterOperator NotEmpty
          Get-IshFolder -FolderPath "\General\Mobile Phones Demo" -Recurse |
          Get-IshFolderContent -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. The metadata filter will filter out target languages/stubs in a certain status (in this example probably the ones holding deprecated pretranslation). The recursive folder allows you to control which area you do a check/conversion in, and give you progress as well.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $metadataFilter = Set-IshMetadataFilterField -Level Lng -Name FSOURCELANGUAGE -FilterOperator Empty
          Get-IshFolder -FolderPath "\General\Mobile Phones Demo" -Recurse |
          Get-IshFolderContent -VersionFilter LATEST -MetadataFilter $metadataFilter
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. The metadata filter will filter out source languages/stubs and the VersionFilter will only return latest versions of any object. The recursive folder allows you to control which area you do a check/conversion in, and give you progress as well.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $metadataFilter = Set-IshMetadataFilterField -Level Lng -Name FSOURCELANGUAGE -FilterOperator Empty
          $requestedMetadata = Set-IshRequestedMetadataField -Level Lng -Name FISHSTATUSTYPE
          Get-IshFolder -FolderPath "\General\Mobile Phones Demo" -Recurse |
          Get-IshFolderContent -VersionFilter "" -MetadataFilter $metadataFilter -RequestedMetadata $requestedMetadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. The metadata filter will filter out source languages and the empty VersionFilter will return all versions of any object. The recursive folder allows you to control which area you do a check/conversion in, and give you progress as well.</maml:para>
          <maml:para>Note that -RequestedMetadata will be used on every folder passed over the pipeline by Get-IshFolder. Requesting metadata for Topics (ISHModule) might be unexisting on Publication folders or vice versa. Know that Get-IshFolder has a -FolderTypeFilter parameter to workaround that.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $ishSession.MetadataBatchSize = 100
          $DebugPreference = "Continue"
          Get-IshFolderContent -IshSession $ishSession -FolderPath "General\MyPublication\FolderWithManyTopics"
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve the latest version of content objects in smaller batches to avoid "heavy" WebService calls to the server. The progress could be seen in the debug messages</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshFolderLocation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshFolderLocation</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshFolderLocation</command:noun>
      <maml:description>
        <maml:para>The Get-IshFolderLocation cmdlet returns the repository location of the folder objects in the form of a separated string e.g. "General\Folder1\Folder2"</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshFolderLocation cmdlet returns the repository location of the folder objects in the form of a separated string e.g. "General\Folder1\Folder2"</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: FolderIdGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>Identifier of the folder for which to retrieve the location</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FolderPathGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Separated string with the full folder path</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: BaseFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: BaseFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>BaseFolder</maml:name>
          <maml:description>
            <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
            <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
          </maml:description>
          <command:parameterValue required="true">BaseFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumerations of basefolders</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Data</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>Folder that is passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Separated string with the full folder path</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>Identifier of the folder for which to retrieve the location</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: BaseFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>BaseFolder</maml:name>
        <maml:description>
          <maml:para>The eBaseFolder enumeration to get subfolder(s) for the specified root folder</maml:para>
          <maml:para>Possible values: Data, System, Favorites, EditorTemplate</maml:para>
        </maml:description>
        <command:parameterValue required="true">BaseFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+BaseFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumerations of basefolders</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Data</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">System</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Favorites</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">EditorTemplate</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>Folder that is passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Identifier of the folder for which to retrieve the location</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Folder that is passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $folderId = 7775 #provide valid folder identifier
          $folderPath = Get-IshFolderLocation -FolderId $folderId
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve folder location using provided Id</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshLovValue -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshLovValue</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshLovValue</command:noun>
      <maml:description>
        <maml:para>The Add-IshLovValue cmdlet adds the new values that are passed through the pipeline or determined via provided parameters to the specified List of Values</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshLovValue cmdlet adds the new values that are passed through the pipeline or determined via provided parameters to the specified List of Values</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovId</maml:name>
          <maml:description>
            <maml:para>The identifier (element name) of the list of values where the new lov value will be created</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Label -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>The label of the new lov value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Description -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>The description of the new lov value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovValueId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovValueId</maml:name>
          <maml:description>
            <maml:para>The identifier (element name) of the new lov value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshLovValueGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshLovValue -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshLovValue</maml:name>
          <maml:description>
            <maml:para>The lov value to create. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshLovValue</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovId</maml:name>
        <maml:description>
          <maml:para>The identifier (element name) of the list of values where the new lov value will be created</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Label -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>The label of the new lov value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Description -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>The description of the new lov value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshLovValue -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshLovValue</maml:name>
        <maml:description>
          <maml:para>The lov value to create. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshLovValue</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovValueId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovValueId</maml:name>
        <maml:description>
          <maml:para>The identifier (element name) of the new lov value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The lov value to create. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshLovValue -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $lovValue = Add-IshLovValue -LovId "DILLUSTRATIONTYPE" -Label "New image type" -Description "New image type description"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Adding a Value into the List of Values</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshLovValue -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshLovValue</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshLovValue</command:noun>
      <maml:description>
        <maml:para>The Get-IshLovValue cmdlet retrieves all values of the specified list of values</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshLovValue cmdlet retrieves all values of the specified list of values</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovId</maml:name>
          <maml:description>
            <maml:para>The element name of the List of Values for which to retrieve values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovValueId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovValueId</maml:name>
          <maml:description>
            <maml:para>The element name of the value in the List of Values for which to retrieve complete initialized values.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovId</maml:name>
        <maml:description>
          <maml:para>The element name of the List of Values for which to retrieve values.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovValueId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovValueId</maml:name>
        <maml:description>
          <maml:para>The element name of the value in the List of Values for which to retrieve complete initialized values.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshLovValue -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $lovValues = Get-IshLovValue -IshSession $ishSession -LovId DILLUSTRATIONTYPE
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve all values from List of Values</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/"  -PSCredential username
          $lovValues = Get-IshLovValue -LovId DILLUSTRATIONTYPE -LovValueId ("VRESHIGH","VRESLOW")
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve the full LovValues including description and active flag</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshLovValue -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshLovValue</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshLovValue</command:noun>
      <maml:description>
        <maml:para>The Remove-IshLovValue cmd-let removes the values that are passed through the pipeline or determined via provided parameters from the specified List of Values</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshLovValue cmd-let removes the values that are passed through the pipeline or determined via provided parameters from the specified List of Values</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovId</maml:name>
          <maml:description>
            <maml:para>The element name of the List of Values to delete Value from</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovValueId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovValueId</maml:name>
          <maml:description>
            <maml:para>The element name of the value to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshLovValueGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshLovValue -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshLovValue</maml:name>
          <maml:description>
            <maml:para>LovValue object to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshLovValue</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovId</maml:name>
        <maml:description>
          <maml:para>The element name of the List of Values to delete Value from</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovValueId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovValueId</maml:name>
        <maml:description>
          <maml:para>The element name of the value to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshLovValue -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshLovValue</maml:name>
        <maml:description>
          <maml:para>LovValue object to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshLovValue</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>LovValue object to remove</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $lovValue = Add-IshLovValue -IshSession $ishSession -LovId "DILLUSTRATIONTYPE" -Label "New image type" -Description "New image type description"
          Remove-IshLovValue -IshSession $ishSession -LovId $lovId -LovValueId $lovValue.IshRef
        </dev:code>
        <dev:remarks>
          <maml:para>Add and remove a value</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshLovValue -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshLovValue</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshLovValue</command:noun>
      <maml:description>
        <maml:para>The Set-IshLovValue cmdlet updates the value that is passed through the pipeline or determined via provided parameters in the specified List of Values.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshLovValue cmdlet updates the value that is passed through the pipeline or determined via provided parameters in the specified List of Values.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovId</maml:name>
          <maml:description>
            <maml:para>The element name of the List of Values</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LovValueId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LovValueId</maml:name>
          <maml:description>
            <maml:para>The element name of the value to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Label -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>The Label of the Value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Description -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>The Description of the Value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Active -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Active</maml:name>
          <maml:description>
            <maml:para>The Active parameter indicates if the value is still active. Making it mandatory since uninitialized boolean is 'false' which will be used in update.</maml:para>
          </maml:description>
          <command:parameterValue required="true">bool</command:parameterValue>
          <dev:type>
            <maml:name>System.Boolean</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshLovValueGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshLovValue</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshLovValue -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshLovValue</maml:name>
          <maml:description>
            <maml:para>Lov value to update. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshLovValue</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovId</maml:name>
        <maml:description>
          <maml:para>The element name of the List of Values</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LovValueId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LovValueId</maml:name>
        <maml:description>
          <maml:para>The element name of the value to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Label -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>The Label of the Value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Description -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>The Description of the Value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Active -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Active</maml:name>
        <maml:description>
          <maml:para>The Active parameter indicates if the value is still active. Making it mandatory since uninitialized boolean is 'false' which will be used in update.</maml:para>
        </maml:description>
        <command:parameterValue required="true">bool</command:parameterValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshLovValue -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshLovValue</maml:name>
        <maml:description>
          <maml:para>Lov value to update. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshLovValue</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Lov value to update. This lov value can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshLovValue -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshLovValue</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Stores reference for "ishlovvalueref", "ishref", "label", "description", "active"</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $lovValue1 = Add-IshLovValue -IshSession $ishSession -LovId "DILLUSTRATIONTYPE" -Label "New image type" -Description "New image type description"
          $lovValue2 = Set-IshLovValue -IshSession $ishSession -LovId "DILLUSTRATIONTYPE" -LovValueId $lovValue1.IshRef -Label "Updated new image type" -Active $true -Description "Updated description"
        </dev:code>
        <dev:remarks>
          <maml:para>Add and update Value</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshMetadataField -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshMetadataField</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshMetadataField</command:noun>
      <maml:description>
        <maml:para>The Get-IshMetadataField -IshSession $ishSession cmdlet return the value of a field with a certain name, level and value type.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshMetadataField -IshSession $ishSession cmdlet return the value of a field with a certain name, level and value type. Best practice is to supply IshSession for future functionality.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: IshFieldGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshField -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshField</maml:name>
          <maml:description>
            <maml:para>The fields container object, accepts multiple ISHFields objects</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The objects container object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The objects container object, specialized for folder handling</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshEventGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshEvent -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshEvent</maml:name>
          <maml:description>
            <maml:para>The objects container object, specialized for event handling</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshEvent[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshBackgroundTaskGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshBackgroundTask -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshBackgroundTask</maml:name>
          <maml:description>
            <maml:para>The objects container object, specialized for event handling</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshBackgroundTask[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The field name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Level -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>The field level</maml:para>
          <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
        </maml:description>
        <command:parameterValue required="true">Level</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshField -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshField</maml:name>
        <maml:description>
          <maml:para>The fields container object, accepts multiple ISHFields objects</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The objects container object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>The objects container object, specialized for folder handling</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshEvent -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshEvent</maml:name>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshEvent[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshBackgroundTask -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshBackgroundTask</maml:name>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshBackgroundTask[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The fields container object, accepts multiple ISHFields objects</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object, specialized for folder handling</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshBackgroundTask[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUser -IshSession $ishSession | Get-IshMetadataField -IshSession $ishSession -Name "USERNAME"
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieves your username from the return IshUser object. The Get-IshMetadataField defaults to level None and type value.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshMetadataField -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshMetadataField</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshMetadataField</command:noun>
      <maml:description>
        <maml:para>The Set-IshMetadataField -IshSession $ishSession cmdlet creates value fields based on the parameters provided When IshFields object is passed through the pipeline then new value field is added according to the parameters provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshMetadataField -IshSession $ishSession cmdlet creates value fields based on the parameters provided When IshFields object is passed through the pipeline then new value field is added according to the parameters provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: IshFieldGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The field value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshField -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshField</maml:name>
          <maml:description>
            <maml:para>The fields container object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The field value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The objects container object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshFolderGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The field value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The objects container object, specialized for folder handling</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshEventGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The field value</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshEvent -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshEvent</maml:name>
          <maml:description>
            <maml:para>The objects container object, specialized for event handling</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshEvent[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The field name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Level -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>The field level</maml:para>
          <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
        </maml:description>
        <command:parameterValue required="true">Level</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The field value</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshField -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshField</maml:name>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The objects container object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>The objects container object, specialized for folder handling</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshEvent -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshEvent</maml:name>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshEvent[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object, specialized for folder handling</maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The objects container object, specialized for event handling</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshEvent -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshEvent</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshEvent is one entry on the EventMonitor detail are, also holding progress top-level information.</maml:para>
        </maml:description>
      </command:returnValue>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
      <!-- OutputType: IshFolder -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
        </maml:description>
      </command:returnValue>
      <!-- OutputType: IshObject -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Generic pipeline object for the API holding various references (logical id, card id,...), object type, ishfields (metadata ) and optionally ishdata (file/blob)</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Set-IshMetadataField -IshSession $ishSession -Name "USERNAME"
        </dev:code>
        <dev:remarks>
          <maml:para>Creates an IshFields structure holding one IshMetadataField with name USERNAME and defaults to level None.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshMetadataFilterField -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshMetadataFilterField</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshMetadataFilterField</command:noun>
      <maml:description>
        <maml:para>The Set-IshMetadataFilterField cmdlet creates filter fields based on the parameters provided When IshFields object is passed through the pipeline then new filter field is added according to the parameters provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshMetadataFilterField cmdlet creates filter fields based on the parameters provided When IshFields object is passed through the pipeline then new filter field is added according to the parameters provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-IshMetadataFilterField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FilterOperator -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FilterOperator</maml:name>
          <maml:description>
            <maml:para>The filter operator to use</maml:para>
            <maml:para>Possible values: Equal, NotEqual, In, NotIn, Like, GreaterThan, LessThan, GreaterThanOrEqual, LessThanOrEqual, Between, Empty, NotEmpty</maml:para>
          </maml:description>
          <command:parameterValue required="true">FilterOperator</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+FilterOperator</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>When filtering information having certain value(s), you need operators per field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Equal</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Equal</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEqual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">In</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotIn</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Like</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GreaterThan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LessThan</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">GreaterThanOrEqual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">LessThanOrEqual</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Between</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Empty</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotEmpty</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to use for filtering</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshField -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshField</maml:name>
          <maml:description>
            <maml:para>The fields container object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The field name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Level -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>The field level</maml:para>
          <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
        </maml:description>
        <command:parameterValue required="true">Level</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FilterOperator -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FilterOperator</maml:name>
        <maml:description>
          <maml:para>The filter operator to use</maml:para>
          <maml:para>Possible values: Equal, NotEqual, In, NotIn, Like, GreaterThan, LessThan, GreaterThanOrEqual, LessThanOrEqual, Between, Empty, NotEmpty</maml:para>
        </maml:description>
        <command:parameterValue required="true">FilterOperator</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+FilterOperator</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>When filtering information having certain value(s), you need operators per field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Equal</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Equal</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEqual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">In</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotIn</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Like</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GreaterThan</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LessThan</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">GreaterThanOrEqual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">LessThanOrEqual</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Between</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Empty</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">NotEmpty</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to use for filtering</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshField -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshField</maml:name>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Set-IshMetadataFilterField -IshSession $ishSession -Name "USERNAME"
        </dev:code>
        <dev:remarks>
          <maml:para>Creates an IshFields structure holding one IshMetadataFilterField with name USERNAME and defaults to level None, FilterOperator Equal and type Value.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: New-IshObfuscatedFile -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-IshObfuscatedFile</command:name>
      <command:verb>New</command:verb>
      <command:noun>IshObfuscatedFile</command:noun>
      <maml:description>
        <maml:para>The New-IshObfuscatedFile cmdlet can be used to obfuscate the text in xml files or replace images with a generated image of the same format, width and height.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-IshObfuscatedFile cmdlet can be used to: 1. For all files having a file extension that is present in XmlFileExtensions: All the words in the text of all xml files are replaced with hardcoded words of the same length. This includes the text in elements, the comments and the processing instructions. Optionally, you can specifiy the names of attributes in the XmlAttributesToObfuscate parameter for which the values need to be obfuscated as well. By default, attribute values are not obfuscated, as some attribute values are limited to a certain list of values defined in the DTD. Note that an obfuscated xml is not validated against it's DTD or schema. 2. For all files having a file extension that is present in ImageFileExtensions A new image is created with the same format, width and height as the original image. The new image will have a yellow background (and the filename in text in the image if it is wide enough to put it there). 3. For all files NOT having a file extension that is present in XmlImageExtensions or ImageFileExtensions A warning message is given on the console that the file could not be obfuscated It will do that for all files that are passed through the pipeline or via the -FilePath parameter. Only the successfully obfuscated files will be saved to the output folder with the same name, overwriting the file with the same name if that is already present When the obfuscation fails or if there is no obfuscator for the given file extension, a warning message is given on the console that the file could not be obfuscated You can specify which file extensions should be treated as xml, by specifying the XmlFileExtensions parameter. By default these are ".xml", ".dita", ".ditamap". You can specify which file extensions should be treated as image, by specifying the XmlFileExtensions parameter. By default these are ".png", ".gif", ".bmp", ".jpg", ".jpeg".</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>New-IshObfuscatedFile</maml:name>
        <!-- Parameter: FilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Folder on the Windows filesystem where to store the new data files</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: XmlFileExtensions -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XmlFileExtensions</maml:name>
          <maml:description>
            <maml:para>The file extensions that should be treated as an xml.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ImageFileExtensions -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ImageFileExtensions</maml:name>
          <maml:description>
            <maml:para>The file extensions that should be treated as an image.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: XmlAttributesToObfuscate -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>XmlAttributesToObfuscate</maml:name>
          <maml:description>
            <maml:para>Array of attribute names for which the values need to be obfuscated as well.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>System.String[]</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: FilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Folder on the Windows filesystem where to store the new data files</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: XmlFileExtensions -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>XmlFileExtensions</maml:name>
        <maml:description>
          <maml:para>The file extensions that should be treated as an xml.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>System.String[]</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ImageFileExtensions -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ImageFileExtensions</maml:name>
        <maml:description>
          <maml:para>The file extensions that should be treated as an image.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>System.String[]</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: XmlAttributesToObfuscate -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>XmlAttributesToObfuscate</maml:name>
        <maml:description>
          <maml:para>Array of attribute names for which the values need to be obfuscated as well.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>System.String[]</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          # This sample script will process all files in the input folder and save the obfuscated xml and image files in the output folder
          # Other type of files like .mpg, .mov, .swf etc. are not supported by the obfuscator, so will not be present in the output folder
          Note that the script deletes all the files in the output folder first

          # Input folder with the files to obfuscate
          $inputfolder = "Samples\Data-ObfuscateFiles\InputFiles"
          # Output folder with the obfuscated files.
          $outputfolder = "Samples\Data-ObfuscateFiles\OutputFiles"

          # Read all files to process from the inputfolder
          Get-ChildItem $inputfolder -File |
          New-IshObfuscatedFile -OutputFolder $outputfolder -XmlAttributesToObfuscate @("navtitle")
        </dev:code>
        <dev:remarks>
          <maml:para>Obfuscates all xml and image files in a certain directory</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $xhtmlFilePath = "C:\temp\test.html";
          # Since we know that the .html file contains xhtml which can be loaded as xml, add it to the file extensions that should be treated as xml
          New-IshObfuscatedFile -OutputFolder "c:\out\" -FilePath $xhtmlFilePath -XmlFileExtensions @(".html") -XmlAttributesToObfuscate @() # @() = empty array
        </dev:code>
        <dev:remarks>
          <maml:para>Obfuscates one xhtml file</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshOutputFormat -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshOutputFormat</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshOutputFormat</command:noun>
      <maml:description>
        <maml:para>The Add-IshOutputFormat cmdlet adds the new output formats that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshOutputFormat cmdlet adds the new output formats that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Name for the new OutputFormat</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Edt -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Edt</maml:name>
          <maml:description>
            <maml:para>EDT for the new OutputFormat</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>MetaData - xml structure that will be used for the new OutputFormat</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>IshObject - contains OutputFormat data that needs to be created. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Name for the new OutputFormat</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Edt -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Edt</maml:name>
        <maml:description>
          <maml:para>EDT for the new OutputFormat</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>MetaData - xml structure that will be used for the new OutputFormat</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>IshObject - contains OutputFormat data that needs to be created. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>IshObject - contains OutputFormat data that needs to be created. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshOutputFormat -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshOutputFormat</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "FISHRESOLUTIONS" -Level "none" -Value "Low"  |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHSINGLEFILE" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHCLEANUP" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHKEEPDTDSYSTEMID" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHPUBRESOLVEVARIABLES" -Level "none" -Value "TRUE" -ValueType Element
          $outputFormat = Add-IshOutputFormat `
          -Name "MyOutputFormat" `
          -EDT "EDTPDF" `
          -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Adding a new output format</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshOutputFormat -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshOutputFormat</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshOutputFormat</command:noun>
      <maml:description>
        <maml:para>The Find-IshOutputFormat cmdlet finds output format objects using ActivityFilter and MetadataFilter that are provided</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshOutputFormat cmdlet finds output format objects using ActivityFilter and MetadataFilter that are provided</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshOutputFormat -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshOutputFormat</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishMetadataFilterFields = Set-IshMetadataFilterField -IshSession $ishSession -Name "FISHOUTPUTFORMATNAME" -Level "None" -FilterOperator "Like" -Value "%PDF%"
          $outputFormats = Find-IshOutputFormat -MetadataFilter $ishMetadataFilterFields
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Find output formats with specific names</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential "username"
          Find-IshOutputFormat | Select-Object -Property * | Out-GridView
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieves all output formats and make sure that all read-only object properties (PSNoteProperty) become columns in the PowerShell ISE visual GridView.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshOutputFormat -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshOutputFormat</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshOutputFormat</command:noun>
      <maml:description>
        <maml:para>The Get-IshOutputFormat cmdlet retrieves the metadata of the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshOutputFormat cmdlet retrieves the metadata of the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>Array with the element names of the output formats</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Output formats for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>Array with the element names of the output formats</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Output formats for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Output formats for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshOutputFormat -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshOutputFormat</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHOUTPUTFORMATNAME" -Level "none"
          $name = Get-IshOutputFormat -Id "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" -RequestedMetadata $requestedMetadata |
          Get-IshMetadataField -Name "FISHOUTPUTFORMATNAME" -Level None -ValueType Value
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve name of the existing output format</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshOutputFormat -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshOutputFormat</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshOutputFormat</command:noun>
      <maml:description>
        <maml:para>The Remove-IshOutputFormat cmdlet removes the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshOutputFormat cmdlet removes the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The Id - element name of the OutputFormat to be removed</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IshObject array containing OutputFormats that needs to be deleted. Pipeline</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The Id - element name of the OutputFormat to be removed</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IshObject array containing OutputFormats that needs to be deleted. Pipeline</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshObject array containing OutputFormats that needs to be deleted. Pipeline</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "FISHRESOLUTIONS" -Level "none" -Value "Low"  |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHSINGLEFILE" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHCLEANUP" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHKEEPDTDSYSTEMID" -Level "none" -Value "TRUE" -ValueType Element |
          Set-IshMetadataField -IshSession $ishSession -Name "FISHPUBRESOLVEVARIABLES" -Level "none" -Value "TRUE" -ValueType Element
          $outputFormatAdd = Add-IshOutputFormat -IshSession $ishSession `
          -Name "MyOutputFormat" `
          -EDT "EDTPDF" `
          -Metadata $metadata
          Remove-IshOutputFormat -Id $outputFormatAdd[0].IshRef
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Remove added output format</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshOutputFormat -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshOutputFormat</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshOutputFormat</command:noun>
      <maml:description>
        <maml:para>The Set-IshOutputFormat cmdlet updates the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshOutputFormat cmdlet updates the output formats that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The element name of the output format</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Edt -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Edt</maml:name>
          <maml:description>
            <maml:para>The unique identifier of the Electronic Document Type of the output (e.g. EDTPDF, EDTXML, EDTHTML,...)</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the output format</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshOutputFormat</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Output formats for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The element name of the output format</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Edt -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Edt</maml:name>
        <maml:description>
          <maml:para>The unique identifier of the Electronic Document Type of the output (e.g. EDTPDF, EDTXML, EDTHTML,...)</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the output format</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Output formats for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Output formats for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshOutputFormat -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshOutputFormat</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadataUpdate = Set-IshMetadataField -IshSession $ishSession -Name "FISHOUTPUTFORMATNAME" -Level "none" -Value "PDF (A4 Manual) updated"
          $outputFormatUpdate = Set-IshOutputFormat `
          -Id "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" `
          -Edt "EDTPDF" `
          -Metadata $metadataUpdate
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Update name of the existing Output format</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshPublicationOutput</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Add-IshPublicationOutput cmdlet add the new publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshPublicationOutput cmdlet add the new publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The FolderId for the PublicationOutput object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The FolderId of the PublicationOutput by IshFolder object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the Publication.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>GUID-D5DE92B5-9F3F-4BB3-A848-EA45EDD652B1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The Version of the Publication.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>NEW</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: OutputFormat -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>The requested OutputFormat for the new PublicationOutput.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LanguageCombination -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguageCombination</maml:name>
          <maml:description>
            <maml:para>The requested language combination for the new PublicationOutput.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata for the new PublicationOutput.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>The IshObjects that need to be added.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderId -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderId</maml:name>
          <maml:description>
            <maml:para>The FolderId for the PublicationOutput object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">long</command:parameterValue>
          <dev:type>
            <maml:name>System.Int64</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IshFolder -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshFolder</maml:name>
          <maml:description>
            <maml:para>The FolderId of the PublicationOutput by IshFolder object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshFolder</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>The IshObjects that need to be added.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderId</maml:name>
        <maml:description>
          <maml:para>The FolderId for the PublicationOutput object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">long</command:parameterValue>
        <dev:type>
          <maml:name>System.Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>-1</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IshFolder -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshFolder</maml:name>
        <maml:description>
          <maml:para>The FolderId of the PublicationOutput by IshFolder object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshFolder</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshFolder</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Generic pipeline object for the Folder API holding folder reference like "ishfolderref", "ishfoldertype", "ishfields"</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the Publication.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>GUID-21272C11-A2BC-411D-B865-B8FA53232017</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The Version of the Publication.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>NEW</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: OutputFormat -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>The requested OutputFormat for the new PublicationOutput.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LanguageCombination -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguageCombination</maml:name>
        <maml:description>
          <maml:para>The requested language combination for the new PublicationOutput.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata for the new PublicationOutput.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The IshObjects that need to be added.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metaDataCreate = Set-IshMetadataField -IshSession $ishSession -Name 'FISHFALLBACKLNGDEFAULT' -Level 'lng' -Value 'en' |
          Set-IshMetadataField -IshSession $ishSession -Name 'FISHFALLBACKLNGIMAGES' -Level 'lng' -Value 'en' |
          Set-IshMetadataField -IshSession $ishSession -Name 'FISHFALLBACKLNGRESOURCES' -Level 'lng' -Value 'en'
          Add-IshPublicationOutput -IshSession $ishSession `
          -LogicalId "GUID-7EB6F836-A801-4DB3-A54A-22C207BAF671" `
          -Version "1" `
          -OutputFormat "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" `
          -LanguageCombination "en" `
          -Metadata $metaDataCreate
        </dev:code>
        <dev:remarks>
          <maml:para>Creating a new publication output. New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshPublicationOutput</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Find-IshPublicationOutput cmdlet finds all publication outputs using the StatusFilter and MetadataFilter that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshPublicationOutput cmdlet finds all publication outputs using the StatusFilter and MetadataFilter that are provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: StatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StatusFilter</maml:name>
          <maml:description>
            <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
          </maml:description>
          <command:parameterValue required="true">StatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: StatusFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StatusFilter</maml:name>
        <maml:description>
          <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
        </maml:description>
        <command:parameterValue required="true">StatusFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadataRetrieve = Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHOUTPUTFORMATREF' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLNGCOMBINATION' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLISHER' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTARTDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBENDDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'VERSION' -Level "Version"
          $metadataFilterRetrieve = Set-IshMetadataFilterField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level 'Lng' -ValueType "Value" -FilterOperator "Equal" -Value "To Be Published"
          $publicationOutputs = Find-IshPublicationOutput -StatusFilter "ishnostatusfilter" -MetadataFilter $metadataFilterRetrieve -RequestedMetadata $requestedMetadataRetrieve
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Finding publication outputs</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshPublicationOutput</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Get-IshPublicationOutput cmdlet retrieves the metadata of the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshPublicationOutput cmdlet retrieves the metadata of the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the publication output objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: StatusFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StatusFilter</maml:name>
          <maml:description>
            <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
          </maml:description>
          <command:parameterValue required="true">StatusFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the publication outputs for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the publication output objects.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the publication outputs for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: StatusFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StatusFilter</maml:name>
        <maml:description>
          <maml:para>The status filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: ISHReleasedStates, ISHReleasedOrDraftStates, ISHOutOfDateOrReleasedStates, ISHNoStatusFilter</maml:para>
        </maml:description>
        <command:parameterValue required="true">StatusFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+StatusFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Enumeration matching the API status filters for IshObjects</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>ISHNoStatusFilter</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">ISHReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHReleasedOrDraftStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHOutOfDateOrReleasedStates</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">ISHNoStatusFilter</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the publication outputs for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadataRetrieve = Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHOUTPUTFORMATREF' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLNGCOMBINATION' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLISHER' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTARTDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBENDDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'VERSION' -Level "Version"
          $metadataFilterRetrieve = Set-IshMetadataFilterField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level 'Lng' -ValueType "Value" -FilterOperator "Equal" -Value "Draft"
          $publicationOutput = Get-IshPublicationOutput `
          -LogicalId @("GUID-412E3A98-9AA8-484E-A1AA-3DE3B58947BD", "GUID-F66C1BB5-076D-455C-B055-DAC5D61AB3D9") `
          -StatusFilter "ishreleasedordraftstates" `
          -RequestedMetadata $requestedMetadataRetrieve `
          -MetadataFilter $metadataFilterRetrieve
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieving publication outputs</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Publish-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Publish-IshPublicationOutput</command:name>
      <command:verb>Publish</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Publish-IshPublicationOutput cmdlet publishes all publication outputs that are passed through the pipeline or determined via provided parameters.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Publish-IshPublicationOutput cmdlet publishes all publication outputs that are passed through the pipeline or determined via provided parameters.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Publish-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OutputFormat -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>The output format (GUID) of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LanguageCombination -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguageCombination</maml:name>
          <maml:description>
            <maml:para>The language combination of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository</maml:para>
            <maml:para>If the metadata is still the same, the publication output is published.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not published.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Publish-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the publications outputs to publish. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository</maml:para>
            <maml:para>If the metadata is still the same, the publication output is published.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not published.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the publications outputs to publish. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OutputFormat -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>The output format (GUID) of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LanguageCombination -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguageCombination</maml:name>
        <maml:description>
          <maml:para>The language combination of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository</maml:para>
          <maml:para>If the metadata is still the same, the publication output is published.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not published.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the publications outputs to publish. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishobjects = Publish-IshPublicationOutput `
          -LogicalId "GUID-F66C1BB5-076D-455C-B055-DAC5D61AB3D9" `
          -Version "1" `
          -OutputFormat "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" `
          -LanguageCombination "en"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Publishing a publication output</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshPublicationOutput</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Remove-IshPublicationOutput cmdlet removes the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshPublicationOutput cmdlet removes the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the publication output</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the publication output</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OutputFormat -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>The output format of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LanguageCombination -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguageCombination</maml:name>
          <maml:description>
            <maml:para>The language combination of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the publication output is removed.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not removed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>When the Force switch is set, after deleting the publication output object, the publication version object and publication logical object will be deleted if they don't have any publication outputs anymore. Be carefull using this option, as it will delete the publication (version) and baseline if there are no outputformats left!!</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the publication outputs to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the publication output is removed.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not removed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>When the Force switch is set, after deleting the publication output object, the publication version object and publication logical object will be deleted if they don't have any publication outputs anymore. Be carefull using this option, as it will delete the publication (version) and baseline if there are no outputformats left!!</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the publication outputs to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the publication output</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the publication output</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OutputFormat -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>The output format of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LanguageCombination -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguageCombination</maml:name>
        <maml:description>
          <maml:para>The language combination of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the publication output is removed.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the publication output is not removed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>When the Force switch is set, after deleting the publication output object, the publication version object and publication logical object will be deleted if they don't have any publication outputs anymore. Be carefull using this option, as it will delete the publication (version) and baseline if there are no outputformats left!!</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the publication outputs to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          # Remove publication output
          Remove-IshPublicationOutput `
          -LogicalId "GUID-F66C1BB5-076D-455C-B055-DAC5D61AB3D9" `
          -Version "1" `
          -OutputFormat "PDF (A4 Manual)" `
          -LanguageCombination "en"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Removing a publication output</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshPublicationOutput</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Set-IshPublicationOutput cmdlet updates the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshPublicationOutput cmdlet updates the publication outputs that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OutputFormat -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>The output format of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LanguageCombination -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguageCombination</maml:name>
          <maml:description>
            <maml:para>The language combination of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the publication output object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Publication outputs for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the publication output object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Publication outputs for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OutputFormat -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>The output format of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LanguageCombination -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguageCombination</maml:name>
        <maml:description>
          <maml:para>The language combination of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the publication output object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Publication outputs for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          # Update a publication output
          $metadataUpdate = Set-IshMetadataField -IshSession $ishSession -Name FISHFALLBACKLNGDEFAULT -Level lng -Value 'bg' |
          Set-IshMetadataField -IshSession $ishSession -Name FISHFALLBACKLNGIMAGES -Level lng -Value 'bg' |
          Set-IshMetadataField -IshSession $ishSession -Name FISHFALLBACKLNGRESOURCES -Level lng -Value 'bg'
          Set-IshPublicationOutput -IshSession $ishSession -LogicalId "GUID-F66C1BB5-076D-455C-B055-DAC5D61AB3D9" -Version "1" -OutputFormat "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" -LanguageCombination "en" -MetaData $metadataUpdate
        </dev:code>
        <dev:remarks>
          <maml:para>Updating publication outputs publish fallback parameters</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          # Find all publication pending objects and cancel their publish operation
          $ishObjects = Find-IshPublicationOutput -IshSession $ishSession -StatusFilter ISHNoStatusFilter -MetadataFilter(Set-IshMetadataFilterField -IshSession $ishSession -Name FISHPUBSTATUS -Level Lng -ValueType Element -FilterOperator in -Value VPUBSTATUSPUBLISHPENDING)
          $metadataUpdate = Set-IshMetadataField -IshSession $ishSession -Name FISHPUBSTATUS -Level lng -ValueType Element -Value VPUBSTATUSPUBLISHINGCANCELLED
          $ishObjects | Set-IshPublicationOutput -MetaData $metadataUpdate
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Cancelling all publication outputs publish operations without checking if the status transition is allowed</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Stop-IshPublicationOutput -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Stop-IshPublicationOutput</command:name>
      <command:verb>Stop</command:verb>
      <command:noun>IshPublicationOutput</command:noun>
      <maml:description>
        <maml:para>The Stop-IshPublicationOutputcmdlet cancels publishes of all publication outputs that are passed through the pipeline or determined via provided parameters.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Stop-IshPublicationOutputcmdlet cancels publishes of all publication outputs that are passed through the pipeline or determined via provided parameters.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Stop-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The logical identifier of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Version -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Version</maml:name>
          <maml:description>
            <maml:para>The version of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: OutputFormat -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>The output format (GUID) of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: LanguageCombination -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LanguageCombination</maml:name>
          <maml:description>
            <maml:para>The language combination of the publication output.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository. If the metadata is still the same, the publication output is cancelled. If the metadata is not the same anymore, an error is given and the publication output is not cancelled.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Stop-IshPublicationOutput</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the publication outputs to cancel. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository. If the metadata is still the same, the publication output is cancelled. If the metadata is not the same anymore, an error is given and the publication output is not cancelled.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the publication outputs to cancel. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The logical identifier of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Version -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Version</maml:name>
        <maml:description>
          <maml:para>The version of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: OutputFormat -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>The output format (GUID) of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: LanguageCombination -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LanguageCombination</maml:name>
        <maml:description>
          <maml:para>The language combination of the publication output.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the publication output. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository. If the metadata is still the same, the publication output is cancelled. If the metadata is not the same anymore, an error is given and the publication output is not cancelled.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the publication outputs to cancel. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshPublicationOutput -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshPublicationOutput</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $ishobjects = Stop-IshPublicationOutput-IshSession $ishSession `
          -LogicalId "GUID-F66C1BB5-076D-455C-B055-DAC5D61AB3D9" `
          -Version "1" `
          -OutputFormat "GUID-2A69335D-F025-4963-A142-5E49988C7C0C" `
          -LanguageCombination "en"
        </dev:code>
        <dev:remarks>
          <maml:para>Cancelling publish of a publication output</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          function Add-Properties {
          param ($ishObject)
          [xml]$metadataXml = $ishObject.IshFields.ToXml()
          foreach($field in $metadataXml.SelectNodes("/ishfields/ishfield")) {
          $ishObject = $ishObject | Add-Member -MemberType NoteProperty -Name $field.GetAttribute("name") -Value ($field.InnerText) -PassThru -Force
          }
          Write-Output $ishObject
          }
          $requestedMetadata = Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLNGCOMBINATION' -Level Lng |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level Lng |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLISHER' -Level Lng |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTARTDATE' -Level Lng |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBENDDATE' -Level Lng |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'VERSION' -Level Version |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FTITLE' -Level Logical
          $metadataFilter = Set-IshMetadataFilterField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level Lng -ValueType Element -FilterOperator In -Value "VPUBSTATUSPUBLISHINGCANCELLED, VPUBSTATUSPUBLISHPENDING, VPUBSTATUSPUBLISHING" # VPUBSTATUSTOBEPUBLISHED
          $ishObjects = Find-IshPublicationOutput -IshSession $ishSession -MetadataFilter $metadataFilter -RequestedMetadata $requestedMetadata
          $ishObjectsToCancel = $ishObjects | ForEach-Object { Add-Properties $_ } |
          Select-Object -Property FTITLE,IshRef,VERSION,FISHPUBLNGCOMBINATION,FISHOUTPUTFORMATREF,FISHPUBLISHER,FISHPUBSTATUS,FISHPUBSTARTDATE,FISHPUBENDDATE |
          Out-GridView -OutputMode Multiple -Title "Select one or more entries to Cancel publishing on"
        </dev:code>
        <dev:remarks>
          <maml:para>Finding all publications that are currently in progress. For now auxiliary function Add-Properties promotes ishfields in a simple way to become NoteProperties on the root ishobject.</maml:para>
          <maml:para>Passing them in PowerShell ISE to Out-GridView for pipeline handling downstream. New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshPublicationOutputData -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshPublicationOutputData</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshPublicationOutputData</command:noun>
      <maml:description>
        <maml:para>The Get-IshPublicationOutputData cmdlet retrieves the data/blob of the publication output that are passed through the pipeline or determined via provided parameters and saves them to the given Windows folder.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshPublicationOutputData cmdlet retrieves the data/blob of the publication output that are passed through the pipeline or determined via provided parameters and saves them to the given Windows folder.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshPublicationOutputData</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the publication outputs for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FolderPath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FolderPath</maml:name>
          <maml:description>
            <maml:para>Folder on the Windows filesystem where to store the retrieved data files</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the publication outputs for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FolderPath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FolderPath</maml:name>
        <maml:description>
          <maml:para>Folder on the Windows filesystem where to store the retrieved data files</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the publication outputs for which to retrieve the data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $requestedMetadataRetrieve = Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHOUTPUTFORMATREF' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLNGCOMBINATION' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBLISHER' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBSTARTDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'FISHPUBENDDATE' -Level "Lng" |
          Set-IshRequestedMetadataField -IshSession $ishSession -Name 'VERSION' -Level "Version"
          $metadataFilterRetrieve = Set-IshMetadataFilterField -IshSession $ishSession -Name 'FISHPUBSTATUS' -Level 'Lng' -ValueType "Value" -FilterOperator "Equal" -Value "Draft"
          $publicationOutputs = Find-IshPublicationOutput -IshSession $ishSession -StatusFilter "ishnostatusfilter" -MetadataFilter $metadataFilterRetrieve -RequestedMetadata $requestedMetadataRetrieve
          $fileInfoArray = $publicationOutputs | Get-IshPublicationOutputData -FolderPath "c:\temp\export"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Downloading publication outputs</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshPublicationOutputFolderLocation -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshPublicationOutputFolderLocation</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshPublicationOutputFolderLocation</command:noun>
      <maml:description>
        <maml:para>The Get-IshPublicationOutputFolderLocation cmdlet returns the repository location of the publication output in the form of a separated string e.g. "General\Folder1\Folder2"</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshPublicationOutputFolderLocation cmdlet returns the repository location of the publication output in the form of a separated string e.g. "General\Folder1\Folder2"</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshPublicationOutputFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LogicalId -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LogicalId</maml:name>
          <maml:description>
            <maml:para>The LogicalId of the PublicationOutput object</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshPublicationOutputFolderLocation</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Publication output for which to retrieve the content data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LogicalId -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LogicalId</maml:name>
        <maml:description>
          <maml:para>The LogicalId of the PublicationOutput object</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Publication output for which to retrieve the content data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Publication output for which to retrieve the content data. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $folderLocation = Get-IshPublicationOutputFolderLocation -LogicalId "GUID-412E3A98-9AA8-484E-A1AA-3DE3B58947BD"
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve location of the PublicationOutput</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshRequestedMetadataField -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshRequestedMetadataField</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshRequestedMetadataField</command:noun>
      <maml:description>
        <maml:para>The Set-IshRequestedMetadataField cmdlet creates a field with a certain name, level and value type When IshFields object is passed through the pipeline then the new field is added to that object.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshRequestedMetadataField cmdlet creates a field with a certain name, level and value type When IshFields object is passed through the pipeline then the new field is added to that object.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Set-IshRequestedMetadataField</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The field name</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Level -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>The field level</maml:para>
            <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
          </maml:description>
          <command:parameterValue required="true">Level</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: IshField -->
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshField</maml:name>
          <maml:description>
            <maml:para>The fields container object</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The field name</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Level -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>The field level</maml:para>
          <maml:para>Possible values: None, Logical, Version, Lng, Progress, Detail, Data, Task, History, Annotation, Reply</maml:para>
        </maml:description>
        <command:parameterValue required="true">Level</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+Level</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which card or table level should the field be present on. The int assignment allows sorting so Logical before Version before Language.</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Logical</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Version</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Lng</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Progress</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Detail</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Data</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Task</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">History</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Annotation</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Reply</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: IshField -->
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshField</maml:name>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>The fields container object</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Set-IshRequestedMetadataField -IshSession $ishSession -Name "USERNAME"
        </dev:code>
        <dev:remarks>
          <maml:para>Creates an IshFields structure holding one IshRequestedMetadataField with name USERNAME and defaults to level None.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: New-IshSession -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>New-IshSession</command:name>
      <command:verb>New</command:verb>
      <command:noun>IshSession</command:noun>
      <maml:description>
        <maml:para>The New-IshSession cmdlet creates a new IshSession object using the parameters that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The New-IshSession cmdlet creates a new IshSession object using the parameters that are provided.</maml:para>
      <maml:para>The object contains the service endpoint proxies, and api contract information like multi-value separator, date format, etc</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ActiveDirectory -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UserNamePassword -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshUserName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshUserName</maml:name>
          <maml:description>
            <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshPassword -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshPassword</maml:name>
          <maml:description>
            <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PSCredential -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PSCredential -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PSCredential</maml:name>
          <maml:description>
            <maml:para>Standard PowerShell Credential class</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ActiveDirectory-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UserNamePassword-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshUserName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshUserName</maml:name>
          <maml:description>
            <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshPassword -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshPassword</maml:name>
          <maml:description>
            <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PSCredential-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>New-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PSCredential -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PSCredential</maml:name>
          <maml:description>
            <maml:para>Standard PowerShell Credential class</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: WsBaseUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsBaseUrl</maml:name>
        <maml:description>
          <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WsTrustIssuerUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsTrustIssuerUrl</maml:name>
        <maml:description>
          <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WsTrustIssuerMexUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsTrustIssuerMexUrl</maml:name>
        <maml:description>
          <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PSCredential -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>PSCredential</maml:name>
        <maml:description>
          <maml:para>Standard PowerShell Credential class</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshUserName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshUserName</maml:name>
        <maml:description>
          <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshPassword -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshPassword</maml:name>
        <maml:description>
          <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:00:20</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: TimeoutIssue -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TimeoutIssue</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:30:00</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: TimeoutService -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TimeoutService</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:30:00</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IgnoreSslPolicyErrors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IgnoreSslPolicyErrors</maml:name>
        <maml:description>
          <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshSession -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
          <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
          <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The username/password will be used to build a NetworkCredential object to pass for authentication to the service.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on Active Directory authentication. An implicit NetworkCredential object will be passed for authentication to the service.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "" -IshPassword "admin"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on Active Directory authentication. By providing an empty username (and ignoring the password), an implicit NetworkCredential object will be passed for authentication to the service. This makes it possible to write generic scripts for UserNameMixed/ActiveDirectory authentication.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"</dev:code>
        <dev:remarks>
          <maml:para>Iteratively the New-IshSession line with PSCredential parameter holding a string representation will prompt you for a password.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin" -Timeout (New-TimeSpan -Seconds 30)</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The Timeout parameter, expressed as TimeSpan object, controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin" -TimeoutIssue (New-TimeSpan -Seconds 120) -TimeoutService (New-TimeSpan -Seconds 600)</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The Timeout parameters, expressed as TimeSpan objects, control Send/Receive timeouts of WCF when issuing a token or working with proxies.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>
          $securePassword = ConvertTo-SecureString "MYPASSWORD" -AsPlainText -Force
          $mycredentials = New-Object System.Management.Automation.PSCredential("MYISHUSERNAME", $securePassword)
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential $mycredentials
        </dev:code>
        <dev:remarks>
          <maml:para>Extensive automation example based on the PSCredential parameter. Responsibility of the plain text password is yours.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>
          $DebugPreference   = "Continue"
          $VerbosePreference = "Continue"
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/Internal/" -IshUserName "admin" -IshPassword "admin"
        </dev:code>
        <dev:remarks>
          <maml:para>When ISHDeploy Enable-ISHIntegrationSTSInternalAuthentication was executed on the server, the web services are directed to a secondary Secure Token Service (STS). This happens through the '/Internal/' postfix which in essence points to a different connectionconfiguration.xml for initialization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/Internal/" -IshUserName "admin" -IshPassword "admin" -IgnoreSslPolicyErrors</dev:code>
        <dev:remarks>
          <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -WsTrustIssuerUrl "https://example.com/ISHSTS/issue/wstrust/mixed/username" -WsTrustIssuerMexUrl "https://example.com/ISHSTS/issue/wstrust/mex" -PSCredential "Admin"</dev:code>
        <dev:remarks>
          <maml:para>Create a new session with explicit issuer. In this example, the issuer is the ISHSTS next to the ISHWS.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 11  ----------</maml:title>
        <dev:code>$ishSession = New-IshSession -WsBaseUrl "https://localhost/ISHWS/" -WsTrustIssuerUrl "https://localhost/ISHSTS/issue/wstrust/mixed/username" -WsTrustIssuerMexUrl "https://localhost/ISHSTS/issue/wstrust/mex" -PSCredential "Admin" -IgnoreSslPolicyErrors</dev:code>
        <dev:remarks>
          <maml:para>Create a new session with explicit issuer while using only local endpoints.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Test-IshSession -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Test-IshSession</command:name>
      <command:verb>Test</command:verb>
      <command:noun>IshSession</command:noun>
      <maml:description>
        <maml:para>The Test-IshSession cmdlet creates a new IshSession object using the parameters that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Test-IshSession cmdlet internal creates a minimal IshSession object using the parameters that are provided.</maml:para>
      <maml:para>Tests the WebServices (ISHWS-activation), SecureTokenServices (ISHSTS-activation) and validates the credentials in the 'InfoShare' database (ConnectionString-activation).</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ActiveDirectory -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UserNamePassword -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshUserName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshUserName</maml:name>
          <maml:description>
            <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshPassword -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshPassword</maml:name>
          <maml:description>
            <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PSCredential -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PSCredential -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PSCredential</maml:name>
          <maml:description>
            <maml:para>Standard PowerShell Credential class</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ActiveDirectory-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: UserNamePassword-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshUserName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshUserName</maml:name>
          <maml:description>
            <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshPassword -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshPassword</maml:name>
          <maml:description>
            <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: PSCredential-ExplicitIssuer -->
      <command:syntaxItem>
        <maml:name>Test-IshSession</maml:name>
        <!-- Parameter: WsBaseUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsBaseUrl</maml:name>
          <maml:description>
            <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: WsTrustIssuerMexUrl -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WsTrustIssuerMexUrl</maml:name>
          <maml:description>
            <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: PSCredential -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>PSCredential</maml:name>
          <maml:description>
            <maml:para>Standard PowerShell Credential class</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Timeout -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:00:20</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutIssue -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutIssue</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: TimeoutService -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TimeoutService</maml:name>
          <maml:description>
            <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
          <dev:type>
            <maml:name>System.TimeSpan</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>00:30:00</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: IgnoreSslPolicyErrors -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IgnoreSslPolicyErrors</maml:name>
          <maml:description>
            <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: WsBaseUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsBaseUrl</maml:name>
        <maml:description>
          <maml:para>Tridion Docs Content Manager web services main URL. Note that the URL is case-sensitive and should end with an ending slash! For example: "https://example.com/ISHWS/"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WsTrustIssuerUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsTrustIssuerUrl</maml:name>
        <maml:description>
          <maml:para>The Security Token Service WS-Trust issuer url! For example: "https://example.com/ISHSTS/issue/wstrust/mixed/username"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: WsTrustIssuerMexUrl -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WsTrustIssuerMexUrl</maml:name>
        <maml:description>
          <maml:para>The Security Token Service Metata Exchange Endpoint url! For example: "https://example.com/ISHSTS/issue/wstrust/mex"</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: PSCredential -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>PSCredential</maml:name>
        <maml:description>
          <maml:para>Standard PowerShell Credential class</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshUserName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshUserName</maml:name>
        <maml:description>
          <maml:para>Username to login into Tridion Docs Content Manager. When left empty, fall back to ActiveDirectory.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshPassword -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshPassword</maml:name>
        <maml:description>
          <maml:para>Password to login into Tridion Docs Content Manager</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Timeout -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml Defaults to 20 seconds.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:00:20</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: TimeoutIssue -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TimeoutIssue</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF when issuing a token. Defaults to 30 minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:30:00</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: TimeoutService -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TimeoutService</maml:name>
        <maml:description>
          <maml:para>Timeout value expressed as TimeSpan, that controls Send/Receive timeouts of WCF for ISHWS proxies. Defaults to 30 minutes.</maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>System.TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>00:30:00</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: IgnoreSslPolicyErrors -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IgnoreSslPolicyErrors</maml:name>
        <maml:description>
          <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: Boolean -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The username/password will be used to build a NetworkCredential object to pass for authentication to the service.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on Active Directory authentication. An implicit NetworkCredential object will be passed for authentication to the service.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "" -IshPassword "admin"</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on Active Directory authentication. By providing an empty username (and ignoring the password), an implicit NetworkCredential object will be passed for authentication to the service. This makes it possible to write generic scripts for UserNameMixed/ActiveDirectory authentication.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"</dev:code>
        <dev:remarks>
          <maml:para>Iteratively the Test-IshSession line with PSCredential parameter holding a string representation will prompt you for a password.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin" -Timeout (New-TimeSpan -Seconds 30)</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The Timeout parameter, expressed as TimeSpan object, controls Send/Receive timeouts of HttpClient when downloading content like connectionconfiguration.xml.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 6  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin" -TimeoutIssue (New-TimeSpan -Seconds 120) -TimeoutService (New-TimeSpan -Seconds 600)</dev:code>
        <dev:remarks>
          <maml:para>Building a session for the chosen service based on username/password authentication. The Timeout parameters, expressed as TimeSpan objects, control Send/Receive timeouts of WCF when issuing a token or working with proxies.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 7  ----------</maml:title>
        <dev:code>
          $securePassword = ConvertTo-SecureString "MYPASSWORD" -AsPlainText -Force
          $mycredentials = New-Object System.Management.Automation.PSCredential("MYISHUSERNAME", $securePassword)
          Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential $mycredentials
        </dev:code>
        <dev:remarks>
          <maml:para>Extensive automation example based on the PSCredential parameter. Responsibility of the plain text password is yours.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 8  ----------</maml:title>
        <dev:code>
          $DebugPreference   = "Continue"
          $VerbosePreference = "Continue"
          Test-IshSession -WsBaseUrl "https://example.com/ISHWS/Internal/" -IshUserName "admin" -IshPassword "admin"
        </dev:code>
        <dev:remarks>
          <maml:para>When ISHDeploy Enable-ISHIntegrationSTSInternalAuthentication was executed on the server, the web services are directed to a secondary Secure Token Service (STS). This happens through the '/Internal/' postfix which in essence points to a different connectionconfiguration.xml for initialization.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 9  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/Internal/" -IshUserName "admin" -IshPassword "admin" -IgnoreSslPolicyErrors</dev:code>
        <dev:remarks>
          <maml:para>IgnoreSslPolicyErrors presence indicates that a custom callback will be assigned to ServicePointManager.ServerCertificateValidationCallback. Defaults false of course, as this is creates security holes! But very handy for Fiddler usage though.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 10  ----------</maml:title>
        <dev:code>
          Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "admin" -IshPassword "admin" -IgnoreSslPolicyErrors -Verbose
          Invoke-WebRequest -Uri "https://example.com/ISHCM/InfoShareAuthor.asp" -UseBasicParsing
        </dev:code>
        <dev:remarks>
          <maml:para>These lines of code activate and hence test the WebServices (ISHWS-activation), SecureTokenServices (ISHSTS-activation) and validates the credentials in the 'InfoShare' database (ConnectionString-activation). The extra .ASP line triggers WebClient (ISHCM-activation) and the COM+ application (Trisoft-InfoShare-Author).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 11  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://example.com/ISHWS/" -WsTrustIssuerUrl "https://example.com/ISHSTS/issue/wstrust/mixed/username" -WsTrustIssuerMexUrl "https://example.com/ISHSTS/issue/wstrust/mex" -PSCredential "Admin"</dev:code>
        <dev:remarks>
          <maml:para>Test the creation of a session with explicit issuer. In this example, the issuer is the ISHSTS next to the ISHWS.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 12  ----------</maml:title>
        <dev:code>Test-IshSession -WsBaseUrl "https://localhost/ISHWS/" -WsTrustIssuerUrl "https://localhost/ISHSTS/issue/wstrust/mixed/username" -WsTrustIssuerMexUrl "https://localhost/ISHSTS/issue/wstrust/mex" -PSCredential "Admin" -IgnoreSslPolicyErrors</dev:code>
        <dev:remarks>
          <maml:para>Test the creation of a session with explicit issuer while using only local endpoints.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshSetting -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshSetting</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshSetting</command:noun>
      <maml:description>
        <maml:para>This cmdlet can be used to get a configuration setting from the repository. Depending on the parameters you use, the setting will be returned differently. If you provide: * A requested metadata parameter with the fields to get, the setting will be return as IshFields * A fieldname and no filepath, the setting will be returned as string * A fieldname and a filepath, the setting will be saved to the file. If the file is already present, providing -Force will allow you to overwrite the file</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet can be used to get a configuration setting from the repository. Depending on the parameters you use, the setting will be returned differently. If you provide: * A requested metadata parameter with the fields to get, the setting will be return as IshFields * A fieldname and no filepath, the setting will be returned as string * A fieldname and a filepath, the setting will be saved to the file. If the file is already present, providing -Force will allow you to overwrite the file</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshSetting</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FieldName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FieldName</maml:name>
          <maml:description>
            <maml:para>The settings field to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>File on the Windows filesystem where to save the retrieved setting</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Force -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>When set, will override the file when it already exists</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: RequestedMetadataGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshSetting</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FieldName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FieldName</maml:name>
        <maml:description>
          <maml:para>The settings field to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>File on the Windows filesystem where to save the retrieved setting</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Force -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>When set, will override the file when it already exists</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
      <!-- OutputType: String -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $settingsFolderPath = 'C:\temp'
          Write-Verbose "Saving in $settingsFolderPath"
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLInboxConfiguration.xml"
          Get-IshSetting -FieldName "FINBOXCONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLBackgroundTaskConfiguration.xml"
          Get-IshSetting -FieldName "FISHBACKGROUNDTASKCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLChangeTrackerConfig.xml"
          Get-IshSetting -FieldName "FISHCHANGETRACKERCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLExtensionConfiguration.xml"
          Get-IshSetting -FieldName "FISHEXTENSIONCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLPluginConfig.xml"
          Get-IshSetting -FieldName "FISHPLUGINCONFIGXML" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLStatusConfiguration.xml"
          Get-IshSetting -FieldName "FSTATECONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLTranslationConfiguration.xml"
          Get-IshSetting -FieldName "FTRANSLATIONCONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLWriteObjPluginConfig.xml"
          Get-IshSetting -FieldName "FISHWRITEOBJPLUGINCFG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLPublishPluginConfiguration.xml"
          Get-IshSetting -FieldName "FISHPUBLISHPLUGINCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLCollectiveSpacesConfiguration.xml"
          Get-IshSetting -FieldName "FISHCOLLECTIVESPACESCFG" -FilePath $filePath
          Write-Host "Done, see $settingsFolderPath"
        </dev:code>
        <dev:remarks>
          <maml:para>Retrieve all Settings xml configuration entries and save them in a folder to desk allowing file-to-file comparison with EnterViaUI folder.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshSetting -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshSetting</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshSetting</command:noun>
      <maml:description>
        <maml:para>This cmdlet can be used to set a configuration setting in the repository. Depending on the parameters you use, the value to set is read from different inputs. If you provide: * A metadata parameter with the fields to set, all fields and values will be read from the IshFields and set * A fieldname and a value, the value will be set for the given field * A fieldname and a filepath, the value will be read from the file and set for the given field</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet can be used to set a configuration setting in the repository. Depending on the parameters you use, the value to set is read from different inputs. If you provide: * A metadata parameter with the fields to set, all fields and values will be read from the IshFields and set * A fieldname and a value, the value will be set for the given field * A fieldname and a filepath, the value will be read from the file and set for the given field</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: IshFieldsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshSetting</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata with the fields and values to set</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the setting. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: ValueGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshSetting</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FieldName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FieldName</maml:name>
          <maml:description>
            <maml:para>The settings field to set</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Value -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>The value to set</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: ValueType -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ValueType</maml:name>
          <maml:description>
            <maml:para>The value type</maml:para>
            <maml:para>Possible values: Value, Element, Id, All</maml:para>
          </maml:description>
          <command:parameterValue required="true">ValueType</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>Value</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the setting. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: FileGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshSetting</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: FieldName -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FieldName</maml:name>
          <maml:description>
            <maml:para>The settings field to set</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>File on the Windows filesystem where to read the setting from</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequiredCurrentMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequiredCurrentMetadata</maml:name>
          <maml:description>
            <maml:para>The required current metadata of the setting. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
            <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
            <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata with the fields and values to set</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FieldName -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FieldName</maml:name>
        <maml:description>
          <maml:para>The settings field to set</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Value -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>The value to set</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: ValueType -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ValueType</maml:name>
        <maml:description>
          <maml:para>The value type</maml:para>
          <maml:para>Possible values: Value, Element, Id, All</maml:para>
        </maml:description>
        <command:parameterValue required="true">ValueType</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ValueType</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Which data type to retrieve from the database for the specified field</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>Value</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">Value</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Element</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Id</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">All</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>File on the Windows filesystem where to read the setting from</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequiredCurrentMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequiredCurrentMetadata</maml:name>
        <maml:description>
          <maml:para>The required current metadata of the setting. This parameter can be used to avoid that users override changes done by other users. The cmdlet will check whether the fields provided in this parameter still have the same values in the repository:</maml:para>
          <maml:para>If the metadata is still the same, the metadata will be set.</maml:para>
          <maml:para>If the metadata is not the same anymore, an error is given and the metadata will be set.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshField -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds one field metadata entry described by a name, optional level and value</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -PSCredential "Admin"
          $settingsFolderPath = 'C:\temp'
          Write-Verbose "Submitting Xml Settings from $settingsFolderPath"
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLInboxConfiguration.xml"
          Set-IshSetting -FieldName "FINBOXCONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLBackgroundTaskConfiguration.xml"
          Set-IshSetting -FieldName "FISHBACKGROUNDTASKCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLChangeTrackerConfig.xml"
          Set-IshSetting -FieldName "FISHCHANGETRACKERCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLExtensionConfiguration.xml"
          Set-IshSetting -FieldName "FISHEXTENSIONCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLPluginConfig.xml"
          Set-IshSetting -FieldName "FISHPLUGINCONFIGXML" -FilePath $filePath
          # Version 13.0.0 requires a status to be present before status transitions can be confirmed
          # Add-IshLovValue -LovId DSTATUS -Label "Translation In Review" -Description "Translation In Review"
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLStatusConfiguration.xml"
          Set-IshSetting -FieldName "FSTATECONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLTranslationConfiguration.xml"
          Set-IshSetting -FieldName "FTRANSLATIONCONFIGURATION" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLWriteObjPluginConfig.xml"
          Set-IshSetting -FieldName "FISHWRITEOBJPLUGINCFG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLPublishPluginConfiguration.xml"
          Set-IshSetting -FieldName "FISHPUBLISHPLUGINCONFIG" -FilePath $filePath
          $filePath = Join-Path -Path $settingsFolderPath -ChildPath "Admin.XMLCollectiveSpacesConfiguration.xml"
          Set-IshSetting -FieldName "FISHCOLLECTIVESPACESCFG" -FilePath $filePath
          Write-Host "Done"
        </dev:code>
        <dev:remarks>
          <maml:para>Submit all Xml Settings configuration entries from your prepared folder (or standard EnterViaUI folder).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Set-IshSetting -FieldName FISHLCURI -Value https://something/deleteThis
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Update CTCONFIGURATION field with the presented value.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Set-IshSetting -FieldName FISHLCURI
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Update CTCONFIGURATION field with the value empty string ("").</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $originalValue = Get-IshSetting -FieldName FISHENABLEOUTOFDATE -ValueType Element
          Set-IshSetting -FieldName FISHENABLEOUTOFDATE -ValueType Element -Value $true
          Set-IshSetting -FieldName FISHENABLEOUTOFDATE -ValueType Element -Value $originalValue
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Update CTCONFIGURATION field with the value empty string ("").</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshTimeZone -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshTimeZone</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshTimeZone</command:noun>
      <maml:description>
        <maml:para>This cmdlet returns the time zone information of the web/app server. This cmdlet can also be used to measure the latency between the client and the server.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet returns the time zone information of the web/app server. This cmdlet can also be used to measure the latency between the client and the server. ClientElapsed - either Min, Average or Max - indicates the time taken to execute the web service call measured from the client. AppServerElapsed - either Min, Average or Max - indicates the time taken to execute the database query measured on the web/app server. DbServerElapsed - either Min, Average or Max - indicates the time taken to execute the database query measured on the database server. By performing multiple calls using the Count parameter you will get a better idea on variation on the calls. Client and app server network latency is calculated through: ClientElapsed - AppServerElapsed. App server and db server network latency is calculated through: AppServerElapsed - DbServerElapsed.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshTimeZone</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Count -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>The amount off get timezone webservice call you wish to perform.</maml:para>
          </maml:description>
          <command:parameterValue required="true">int</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Count -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>The amount off get timezone webservice call you wish to perform.</maml:para>
        </maml:description>
        <command:parameterValue required="true">int</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshApplicationSetting -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshApplicationSetting</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Holds a single result of the GetTimeZone call containing network timestamps</maml:para>
        </maml:description>
      </command:returnValue>
      <!-- OutputType: IshApplicationSettings -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshApplicationSettings</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Container holding multiple results of GetTimeZone calls containing network timestamps allowing basic network statistics verification and calculation</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshTimeZone -IshSession $ishSession
        </dev:code>
        <dev:remarks>
          <maml:para>Creates an IshApplicationSetting structure some timings but especially holds the TimeZoneInfo of the targeted application server.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshTimeZone -IshSession $ishSession -Count 2
        </dev:code>
        <dev:remarks>
          <maml:para>Creates an IshApplicationSettings structure holds the TimeZoneInfo of the targeted application server. But especially holds time difference between client requests, application-server requests and database-server requests.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Compare-IshTypeFieldDefinition -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Compare-IshTypeFieldDefinition</command:name>
      <command:verb>Compare</command:verb>
      <command:noun>IshTypeFieldDefinition</command:noun>
      <maml:description>
        <maml:para>This cmdlet compares two IshTypeFieldDefinition sets.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet compares two IshTypeFieldDefinition sets allowing system compares (or even a compare with the deprecated TriDKXmlSetup format). The result is an IshTypeFieldDefinition with a Compare property indicating equal, different, left only or right only. Note that fields FDESCRIPTION and FCHANGES can have either type String or LongText, you can consider this false positives - this will only affect field filter operators.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Compare-IshTypeFieldDefinition</maml:name>
        <!-- Parameter: LeftIshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LeftIshSession</maml:name>
          <maml:description>
            <maml:para>The reference object of type IshSession</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: LeftIshTypeFieldDefinition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LeftIshTypeFieldDefinition</maml:name>
          <maml:description>
            <maml:para>The reference object of type IshTypeFieldDefinition array</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshTypeFieldDefinition[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinition[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RightIshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RightIshSession</maml:name>
          <maml:description>
            <maml:para>The difference object of type IshSession</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RightIshTypeFieldDefinition -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RightIshTypeFieldDefinition</maml:name>
          <maml:description>
            <maml:para>The difference object of type IshTypeFieldDefinition array</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshTypeFieldDefinition[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinition[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IncludeIdentical -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeIdentical</maml:name>
          <maml:description>
            <maml:para>Display characteristics of compared objects that are equal. By default, only characteristics that differ between the left and right objects are displayed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ExcludeDifferent -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExcludeDifferent</maml:name>
          <maml:description>
            <maml:para>Stop displaying characteristics of compared objects that are different.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ExcludeLeftUnique -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExcludeLeftUnique</maml:name>
          <maml:description>
            <maml:para>Stop displaying characteristics of compared objects that are unique in the left reference object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <!-- Parameter: ExcludeRightUnique -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ExcludeRightUnique</maml:name>
          <maml:description>
            <maml:para>Stop displaying characteristics of compared objects that are unique in the right difference object.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SwitchParameter</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: LeftIshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LeftIshSession</maml:name>
        <maml:description>
          <maml:para>The reference object of type IshSession</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: LeftIshTypeFieldDefinition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LeftIshTypeFieldDefinition</maml:name>
        <maml:description>
          <maml:para>The reference object of type IshTypeFieldDefinition array</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshTypeFieldDefinition[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinition[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RightIshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RightIshSession</maml:name>
        <maml:description>
          <maml:para>The difference object of type IshSession</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: RightIshTypeFieldDefinition -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RightIshTypeFieldDefinition</maml:name>
        <maml:description>
          <maml:para>The difference object of type IshTypeFieldDefinition array</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshTypeFieldDefinition[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinition[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IncludeIdentical -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IncludeIdentical</maml:name>
        <maml:description>
          <maml:para>Display characteristics of compared objects that are equal. By default, only characteristics that differ between the left and right objects are displayed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ExcludeDifferent -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExcludeDifferent</maml:name>
        <maml:description>
          <maml:para>Stop displaying characteristics of compared objects that are different.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ExcludeLeftUnique -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExcludeLeftUnique</maml:name>
        <maml:description>
          <maml:para>Stop displaying characteristics of compared objects that are unique in the left reference object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <!-- Parameter: ExcludeRightUnique -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ExcludeRightUnique</maml:name>
        <maml:description>
          <maml:para>Stop displaying characteristics of compared objects that are unique in the right difference object.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshTypeFieldDefinitionCompare -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinitionCompare</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Object holding the denormalized ISHType (like ISHMasterDoc, ISHEvent,...) with field information (like FTITLE, PROGRESS,..) including a compare result.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSessionA = New-IshSession -WsBaseUrl "https://example.com/ISHWSPROD/" -PSCredential "Admin"
          $ishSessionB = New-IshSession -WsBaseUrl "https://example.com/ISHWSTEST/" -PSCredential "Admin"
          Compare-IshTypeFieldDefinition -LeftIshSession $ishSessionA -RightIshSession $ishSessionB
        </dev:code>
        <dev:remarks>
          <maml:para>Compares incoming IshSession entries that are not equal, so indicating differences, left only and right only.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSessionA = New-IshSession -WsBaseUrl "https://example.com/ISHWSPROD/" -PSCredential "Admin"
          $ishSessionB = New-IshSession -WsBaseUrl "https://example.com/ISHWSTEST/" -PSCredential "Admin"
          Compare-IshTypeFieldDefinition -LeftIshSession $ishSessionA -RightIshSession $ishSessionB -ExcludeLeftUnique
        </dev:code>
        <dev:remarks>
          <maml:para>Compares incoming IshSession entries that are not equal, so indicating differences and right only changes compared to the $ishSessionA reference.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWSPROD/" -PSCredential "Admin"
          $ishTypeFieldDefinitions = Get-IshTypeFieldDefinition -TriDKXmlSetupFilePath $tempFilePath
          Compare-IshTypeFieldDefinition -LeftIshTypeFieldDefinition $ishTypeFieldDefinitions -RightIshSession $ishSession -ExcludeLeftUnique
        </dev:code>
        <dev:remarks>
          <maml:para>Compares provided reference TriDKXmlSetup export file with incoming IshSession and that lists differences and right only changes.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWSPROD/" -PSCredential "Admin"
          $ishTypeFieldDefinitions = Get-IshTypeFieldDefinition
          Compare-IshTypeFieldDefinition -LeftIshSession $ishSession -RightIshTypeFieldDefinition $ishTypeFieldDefinitions -IncludeIdentical -ExcludeDifferent
        </dev:code>
        <dev:remarks>
          <maml:para>Compares incoming IshSession and IshTypeFieldDefinitions (TriDKXmlSetup export file made available through Resource entry). The IncludeIdentical flag will also return matching rows, while the ExcludeDifferent flag will not return rows with differences.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 5  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWSPROD/" -PSCredential "Admin"
          $ishTypeFieldDefinitions = Get-IshTypeFieldDefinition
          Compare-IshTypeFieldDefinition -LeftIshTypeFieldDefinition $ishTypeFieldDefinitions -RightIshSession $ishSession -IncludeIdentical |
          Where-Object -Property Name -NotLike "FTEST*" |
          Out-GridView
        </dev:code>
        <dev:remarks>
          <maml:para>Compares reference IshTypeFieldDefinitions (TriDKXmlSetup export file made available through Resource entry) with incoming IshSession. The IncludeIdentical flag will also return matching rows, while the Where-Object clause filters out fields with a certain name. The PowerShell Out-GridView does a nice visual rendering in PowerShell ISE.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshTypeFieldDefinition -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshTypeFieldDefinition</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshTypeFieldDefinition</command:noun>
      <maml:description>
        <maml:para>This cmdlet retuns the system Type and Field definitions as IshTypeFieldDefinition objects.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>This cmdlet will use Settings25.RetrieveFieldSetupByIshType when available. It can be used to load the deprecated TriDKXmlSetup format into IshTypeFieldDefinition objects.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshTypeFieldDefinition</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: TriDKXmlSetupFilePath -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TriDKXmlSetupFilePath</maml:name>
          <maml:description>
            <maml:para>File on the Windows filesystem where to load the TriDKXmlSetup full export from</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: TriDKXmlSetupFilePath -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TriDKXmlSetupFilePath</maml:name>
        <maml:description>
          <maml:para>File on the Windows filesystem where to load the TriDKXmlSetup full export from</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshTypeFieldDefinition -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshTypeFieldDefinition</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Object holding the denormalized ISHType (like ISHMasterDoc, ISHEvent,...) with field information (like FTITLE, PROGRESS,..).</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>Get-IshTypeFieldDefinition | Where-Object -Property ISHType -eq "ISHUser"</dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet.</maml:para>
          <maml:para>If no IshSession set, the latest internal resource string will be loaded (based on Full-Export). The Where-Object allows filtering on chosen properties.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Get-IshTypeFieldDefinition -IshSession $ishSession
        </dev:code>
        <dev:remarks>
          <maml:para>When ServerVersion -ge 13.0.0 the definition of your targeted IshSession is retrieved, otherwise the best matching internal resource string will be loaded (based on Full-Export).</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 3  ----------</maml:title>
        <dev:code>
          Get-IshTypeFieldDefinition -IshSession $ishSession |
          Where-Object -Property ISHType -eq ISHUser |
          Where-Object -Property AllowOnCreate -eq $true |
          Where-Object -Property IsMandatory -eq $true
        </dev:code>
        <dev:remarks>
          <maml:para>What are the fields I should pass when creating a new user through Add-IshUser.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 4  ----------</maml:title>
        <dev:code>Get-IshTypeFieldDefinition -IshSession $ishSession | Out-GridView</dev:code>
        <dev:remarks>
          <maml:para>When using PowerShell ISE, you can list the result in a User Interface that even allows selection (through -OutputMode Multiple). The standard PowerShell grid view as extra filters and column sorting functionality.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshUser -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshUser</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshUser</command:noun>
      <maml:description>
        <maml:para>The Add-IshUser cmdlet adds the new users that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshUser cmdlet adds the new users that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the new user.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the new user.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the users to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the users to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the new user.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the new user.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the users to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUser -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUser</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name FISHUSERLANGUAGE -Level None -ValueType Element -Value "VLANGUAGEEN" |
          Set-IshMetadataField -IshSession $ishSession -Name FUSERGROUP -Level None -ValueType Element -Value "VUSERGROUPDEFAULTDEPARTMENT" |
          Set-IshMetadataField -IshSession $ishSession -Name PASSWORD -Level None -Value "SomethingSecret"
          $ishObject = Add-IshUser -Name "NewUserName" -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Adding a user</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshUser -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshUser</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshUser</command:noun>
      <maml:description>
        <maml:para>The Find-IshUser cmdlet finds users using ActivityFilter and MetadataFilter that are provided</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshUser cmdlet finds users using ActivityFilter and MetadataFilter that are provided</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshUser -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUser</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          (Find-IshUser).count
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Counting all users.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshUser -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshUser</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshUser</command:noun>
      <maml:description>
        <maml:para>The Get-IshUser cmdlet retrieves the metadata of users that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshUser cmdlet retrieves the metadata of users that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The user identifiers for which to retrieve the metadata</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Users for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: MyMetadataGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The user identifiers for which to retrieve the metadata</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Users for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Users for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUser -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUser</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUser
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the current user (Admin) Basic metadata.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshUser -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshUser</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshUser</command:noun>
      <maml:description>
        <maml:para>The Remove-IshUser cmdlet removes the users that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshUser cmdlet removes the users that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the users to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the users to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the users to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUser | Remove-IshUser
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the current user (Admin) and tries to remove it, which will fail if the user is linked to objects.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshUser -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshUser</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshUser</command:noun>
      <maml:description>
        <maml:para>The Set-IshUser cmdlet updates the users that are passed through the pipeline or determined via provided parameters.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshUser cmdlet updates the users that are passed through the pipeline or determined via provided parameters.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the user</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUser</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Users for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the user</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Users for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Users for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUser -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUser</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUser |
          Set-IshMetadataField -Name FISHEMAIL -Value "ishremote@rws.com" |
          Set-IshUser
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the current user (Admin) adapts the client-side memory structure to hold a new email address and sets in the repository.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshUserGroup -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshUserGroup</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshUserGroup</command:noun>
      <maml:description>
        <maml:para>The Add-IshUserGroup cmdlet adds the new user groups that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshUserGroup cmdlet adds the new user groups that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the new user group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set on the new user group.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user groups to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user groups to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the new user group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set on the new user group.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user groups to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserGroup -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserGroup</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $metadata = Set-IshMetadataField -IshSession $ishSession -Name "FDESCRIPTION" -Level None -Value "Description of $userGroupName"
          $ishObject = Add-IshUserGroup -Name $userGroupName -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Adding a user group.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshUserGroup -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshUserGroup</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshUserGroup</command:noun>
      <maml:description>
        <maml:para>The Find-IshUserGroup cmdlet finds user groups using ActivityFilter and MetadataFilter that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshUserGroup cmdlet finds user groups using ActivityFilter and MetadataFilter that are provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshUserGroup -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserGroup</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Find-IshUserGroup
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve all user groups with their Basic metadata.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Find-IshUserGroup -RequestedMetadata (Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHUSERGROUPNAME")
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve one specific field for all user groups.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshUserGroup -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshUserGroup</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshUserGroup</command:noun>
      <maml:description>
        <maml:para>The Get-IshUserGroup cmdlet retrieves the metadat of user groups that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshUserGroup cmdlet retrieves the metadat of user groups that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The user group identifiers for which to retrieve the metadata</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user groups for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The user group identifiers for which to retrieve the metadata</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user groups for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user groups for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserGroup -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserGroup</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Get-IshUserGroup -Id VUSERGROUPDEFAULTDEPARTMENT
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Get the Basic metadata of 'Default Department'.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshUserGroup -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshUserGroup</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshUserGroup</command:noun>
      <maml:description>
        <maml:para>The Remove-IshUserGroup cmdlet removes the user groups that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshUserGroup cmdlet removes the user groups that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user group to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user groups to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user group to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user groups to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user groups to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUserGroup -Id VUSERGROUPDEFAULTDEPARTMENT | Remove-IshUserGroup
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the user group and tries to remove it, which will fail if the user group is linked to objects.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshUserGroup -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshUserGroup</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshUserGroup</command:noun>
      <maml:description>
        <maml:para>The Set-IshUserGroup cmdlet updates the user groups that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshUserGroup cmdlet updates the user groups that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user group to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the user group</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUserGroup</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user group to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the user group</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>User groups for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserGroup -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserGroup</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUserGroup -Id VUSERGROUPDEFAULTDEPARTMENT |
          Set-IshMetadataField -Name DESCRIPTION -Value "Something new over ISHRemote" |
          Set-IshUserGroup
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the user group and adapts the client-side memory structure to hold a new description and sets in the repository.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Add-IshUserRole -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Add-IshUserRole</command:name>
      <command:verb>Add</command:verb>
      <command:noun>IshUserRole</command:noun>
      <maml:description>
        <maml:para>The Add-IshUserRole cmdlet adds the new user roles that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Add-IshUserRole cmdlet adds the new user roles that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Name -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>The name of the new user role.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the new user role.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Add-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user roles to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user roles to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Name -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>The name of the new user role.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the new user role.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user roles to create. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserRole -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserRole</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          $metadata = Set-IshMetadataField -Name "FDESCRIPTION" -Level None -Value "Description of $userRoleName"
          $ishObject = Add-IshUserRole -Name $userRoleName -Metadata $metadata
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Adding a user role.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Find-IshUserRole -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Find-IshUserRole</command:name>
      <command:verb>Find</command:verb>
      <command:noun>IshUserRole</command:noun>
      <maml:description>
        <maml:para>The Find-IshUserRole cmdlet finds user roles using ActivityFilter and MetadataFilter that are provided.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Find-IshUserRole cmdlet finds user roles using ActivityFilter and MetadataFilter that are provided.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Find-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshUserRole -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserRole</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Find-IshUserRole
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve all user roles with their Basic metadata.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Find-IshUserRole -IshSession $ishSession -RequestedMetadata (Set-IshRequestedMetadataField -IshSession $ishSession -Name "FISHUSERROLENAME")
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Retrieve one specific field for all user roles.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshUserRole -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshUserRole</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshUserRole</command:noun>
      <maml:description>
        <maml:para>The Get-IshUserRole cmdlet retrieves the metadata of user roles that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-IshUserRole cmdlet retrieves the metadata of user roles that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The user role identifiers for which to retrieve the metadata</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Get-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: ActivityFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ActivityFilter</maml:name>
          <maml:description>
            <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
            <maml:para>Possible values: None, Active, Inactive</maml:para>
          </maml:description>
          <command:parameterValue required="true">ActivityFilter</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
            </maml:description>
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <!-- Parameter: MetadataFilter -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MetadataFilter</maml:name>
          <maml:description>
            <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: RequestedMetadata -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RequestedMetadata</maml:name>
          <maml:description>
            <maml:para>The metadata fields to retrieve</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user roles for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: ActivityFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ActivityFilter</maml:name>
        <maml:description>
          <maml:para>The activity filter to limit the amount of objects returned. Default is no filtering.</maml:para>
          <maml:para>Possible values: None, Active, Inactive</maml:para>
        </maml:description>
        <command:parameterValue required="true">ActivityFilter</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Enumerations+ActivityFilter</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>List of value like Events can be hidden upon Find/Retrieval with these filters</maml:para>
          </maml:description>
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
        <command:parameterValueGroup>
          <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Active</command:parameterValue>
          <command:parameterValue required="false" variableLength="false">Inactive</command:parameterValue>
        </command:parameterValueGroup>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The user role identifiers for which to retrieve the metadata</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: MetadataFilter -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MetadataFilter</maml:name>
        <maml:description>
          <maml:para>The metadata filter with the filter fields to limit the amount of objects returned. Default is no filtering.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: RequestedMetadata -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RequestedMetadata</maml:name>
        <maml:description>
          <maml:para>The metadata fields to retrieve</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user roles for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user roles for which to retrieve the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserRole -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserRole</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Get-IshUserRole -Id VUSERROLEADMINISTRATOR
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Get the Basic metadata of 'Administrator' role.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Remove-IshUserRole -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Remove-IshUserRole</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>IshUserRole</command:noun>
      <maml:description>
        <maml:para>The Remove-IshUserRole cmdlet removes the user roles that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Remove-IshUserRole cmdlet removes the user roles that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user role to remove</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Remove-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>Array with the user roles to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user role to remove</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>Array with the user roles to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Array with the user roles to remove. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUserRole -Id VUSERROLEADMINISTRATOR | Remove-IshUserRole
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the user role and tries to remove it, which will fail if the user role is linked to objects.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Set-IshUserRole -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Set-IshUserRole</command:name>
      <command:verb>Set</command:verb>
      <command:noun>IshUserRole</command:noun>
      <maml:description>
        <maml:para>The Set-IshUserRole cmdlet updates the user roles that are passed through the pipeline or determined via provided parameters</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Set-IshUserRole cmdlet updates the user roles that are passed through the pipeline or determined via provided parameters</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: ParameterGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: Id -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>The identifier of the user role to update</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: Metadata -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Metadata</maml:name>
          <maml:description>
            <maml:para>The metadata to set for the user role</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshField[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
      <!-- Parameter set: IshObjectsGroup -->
      <command:syntaxItem>
        <maml:name>Set-IshUserRole</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
        <!-- Parameter: IshObject -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>IshObject</maml:name>
          <maml:description>
            <maml:para>User roles for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshObject[]</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
      <!-- Parameter: Id -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>The identifier of the user role to update</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: Metadata -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Metadata</maml:name>
        <maml:description>
          <maml:para>The metadata to set for the user role</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshField[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshField[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: IshObject -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>IshObject</maml:name>
        <maml:description>
          <maml:para>User roles for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshObject[]</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>User roles for which to update the metadata. This array can be passed through the pipeline or explicitly passed via the parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: IshUserRole -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshUserRole</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/InfoShareWS/" -PSCredential Admin
          Get-IshUserRole -Id VUSERROLEADMINISTRATOR  |
          Set-IshMetadataField -Name DESCRIPTION -Value "Something new over ISHRemote" |
          Set-IshUserRole
        </dev:code>
        <dev:remarks>
          <maml:para>New-IshSession will submit into SessionState, so it can be reused by this cmdlet. Gets the user role and adapts the client-side memory structure to hold a new description and sets in the repository.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Test-IshValidXml -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Test-IshValidXml</command:name>
      <command:verb>Test</command:verb>
      <command:noun>IshValidXml</command:noun>
      <maml:description>
        <maml:para>The Test-IshValidFile checks wellformedness and validness using the given xml catalog.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Quick test to validate the given xml using the DocTypes/DTDs specified through catalog.xml.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Test-IshValidXml</maml:name>
        <!-- Parameter: XmlCatalogFilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>XmlCatalogFilePath</maml:name>
          <maml:description>
            <maml:para>XmlCatalogFilePath should point to the leading catalog.xml file. For example C:\InfoShare\Web\Author\ASP\DocTypes\catalog.xml</maml:para>
          </maml:description>
          <command:parameterValue required="true">string</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
        <!-- Parameter: FilePath -->
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
          </maml:description>
          <command:parameterValue required="true">string[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: XmlCatalogFilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>XmlCatalogFilePath</maml:name>
        <maml:description>
          <maml:para>XmlCatalogFilePath should point to the leading catalog.xml file. For example C:\InfoShare\Web\Author\ASP\DocTypes\catalog.xml</maml:para>
        </maml:description>
        <command:parameterValue required="true">string</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
      <!-- Parameter: FilePath -->
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
        </maml:description>
        <command:parameterValue required="true">string[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>FilePath can be used to specify one or more input xml file location.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <!-- OutputType: FileInfo -->
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
        </dev:type>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>Get-ChildItem -Path C:\temp\*.xml | Test-IshValidXml -XmlCatalogFilePath C:\InfoShare\WebDITA\Author\ASP\DocTypes\catalog.xml</dev:code>
        <dev:remarks>
          <maml:para>All xml files will get a Boolean True/False back from the Test-cmdlet using a local file system catalog and DTDs.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>Test-IshValidXml -XmlCatalogFilePath https://example.com/ISHCM/DocTypes/catalog.xml -FilePath C:\temp\somefile.xml</dev:code>
        <dev:remarks>
          <maml:para>Single xml file will get a single Boolean True/False back from the Test-cmdlet using a remote https accessible catalog and DTDs. Note that this option is SLOW as every catalog, dtd, ent, mod file required will be downloaded over-and-over again - but it does work.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
  <!-- Cmdlet: Get-IshVersion -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>Get-IshVersion</command:name>
      <command:verb>Get</command:verb>
      <command:noun>IshVersion</command:noun>
      <maml:description>
        <maml:para>The Get-Version cmdlet gets the version information of the InfoShare application.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The Get-Version cmdlet gets the version information of the InfoShare application.</maml:para>
    </maml:description>
    <command:syntax>
      <!-- Parameter set: __AllParameterSets -->
      <command:syntaxItem>
        <maml:name>Get-IshVersion</maml:name>
        <!-- Parameter: IshSession -->
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IshSession</maml:name>
          <maml:description>
            <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true">IshSession</command:parameterValue>
          <dev:type>
            <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
            <maml:uri />
            <maml:description>
              <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
              <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
              <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
            </maml:description>
          </dev:type>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <!-- Parameter: IshSession -->
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IshSession</maml:name>
        <maml:description>
          <maml:para>The IshSession variable holds the authentication and contract information. This object can be initialized using the New-IshSession cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true">IshSession</command:parameterValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshSession</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Client session object to the InfoShare server instance required for every remote operation as it holds the web service url and authentication.</maml:para>
            <maml:para>Furthermore it tracks your security token, provides direct client access to the web services API.</maml:para>
            <maml:para>Gives access to contract parameters like separators, date formats, batch and chunk sizes.</maml:para>
          </maml:description>
        </dev:type>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <!-- OutputType: IshVersion -->
      <command:returnValue>
        <dev:type>
          <maml:name>Trisoft.ISHRemote.Objects.Public.IshVersion</maml:name>
          <maml:uri />
        </dev:type>
        <maml:description>
          <maml:para>Stores a version number. It knows how to parse InfoShare version numbers regarding compatibility and build information</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:examples>
      <command:example>
        <maml:title>----------  EXAMPLE 1  ----------</maml:title>
        <dev:code>
          $ishSession = New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Get-IshVersion -IshSession $ishSession
        </dev:code>
        <dev:remarks>
          <maml:para>Get version example with explicit IshSession</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----------  EXAMPLE 2  ----------</maml:title>
        <dev:code>
          New-IshSession -WsBaseUrl "https://example.com/ISHWS/" -IshUserName "username" -IshUserPassword  "userpassword"
          Get-IshVersion
        </dev:code>
        <dev:remarks>
          <maml:para>Get version example with implicit IshSession</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
  </command:command>
</helpItems>