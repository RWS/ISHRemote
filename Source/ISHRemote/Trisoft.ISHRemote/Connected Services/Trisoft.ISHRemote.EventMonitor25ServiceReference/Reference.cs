//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.EventMonitor25ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", ConfigurationName="Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap")]
    internal interface EventMonitor25Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetProgressId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdResponse GetProgressId(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetProgressId", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdResponse> GetProgressIdAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetEventDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailResponse GetEventDetail(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetEventDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailResponse> GetEventDetailAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetNextEventDetailDataChunk" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkResponse GetNextEventDetailDataChunk(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/GetNextEventDetailDataChunk" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkResponse> GetNextEventDetailDataChunkAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventsByProgressIds" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsResponse RetrieveEventsByProgressIds(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventsByProgressIds" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsResponse> RetrieveEventsByProgressIdsAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventsByParentProgr" +
            "essIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsResponse RetrieveEventsByParentProgressIds(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventsByParentProgr" +
            "essIds", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsResponse> RetrieveEventsByParentProgressIdsAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventOverview", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewResponse RetrieveEventOverview(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/RetrieveEventOverview", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewResponse> RetrieveEventOverviewAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/StartEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventResponse StartEvent(Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/StartEvent", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventResponse> StartEventAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/EndEvent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventResponse EndEvent(Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/EndEvent", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventResponse> EndEventAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/AddEventDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailResponse AddEventDetail(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/AddEventDetail", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailResponse> AddEventDetailAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/AddEventDetailWithProgress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressResponse AddEventDetailWithProgress(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/AddEventDetailWithProgress", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressResponse> AddEventDetailWithProgressAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/DeleteByProgressId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdResponse DeleteByProgressId(Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5/DeleteByProgressId", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdResponse> DeleteByProgressIdAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProgressId", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetProgressIdRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psEventId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOutProgressId;
        
        public GetProgressIdRequest()
        {
        }
        
        public GetProgressIdRequest(string psAuthContext, string psEventId, long plOutProgressId)
        {
            this.psAuthContext = psAuthContext;
            this.psEventId = psEventId;
            this.plOutProgressId = plOutProgressId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProgressIdResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetProgressIdResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string GetProgressIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOutProgressId;
        
        public GetProgressIdResponse()
        {
        }
        
        public GetProgressIdResponse(string GetProgressIdResult, string psAuthContext, long plOutProgressId)
        {
            this.GetProgressIdResult = GetProgressIdResult;
            this.psAuthContext = psAuthContext;
            this.plOutProgressId = plOutProgressId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEventDetail", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetEventDetailRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psXMLRequestedEventData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public bool pbIncludeData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public string psOutXMLEventList;
        
        public GetEventDetailRequest()
        {
        }
        
        public GetEventDetailRequest(string psAuthContext, long plDetailId, string psXMLRequestedEventData, bool pbIncludeData, string psOutXMLEventList)
        {
            this.psAuthContext = psAuthContext;
            this.plDetailId = plDetailId;
            this.psXMLRequestedEventData = psXMLRequestedEventData;
            this.pbIncludeData = pbIncludeData;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEventDetailResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetEventDetailResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string GetEventDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psOutXMLEventList;
        
        public GetEventDetailResponse()
        {
        }
        
        public GetEventDetailResponse(string GetEventDetailResult, string psAuthContext, string psOutXMLEventList)
        {
            this.GetEventDetailResult = GetEventDetailResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextEventDetailDataChunk", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetNextEventDetailDataChunkRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOffSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public int piSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbOutBytes;
        
        public GetNextEventDetailDataChunkRequest()
        {
        }
        
        public GetNextEventDetailDataChunkRequest(string psAuthContext, long plDetailId, long plOffSet, int piSize, byte[] pbOutBytes)
        {
            this.psAuthContext = psAuthContext;
            this.plDetailId = plDetailId;
            this.plOffSet = plOffSet;
            this.piSize = piSize;
            this.pbOutBytes = pbOutBytes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetNextEventDetailDataChunkResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class GetNextEventDetailDataChunkResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string GetNextEventDetailDataChunkResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOffSet;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public int piSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbOutBytes;
        
        public GetNextEventDetailDataChunkResponse()
        {
        }
        
        public GetNextEventDetailDataChunkResponse(string GetNextEventDetailDataChunkResult, string psAuthContext, long plOffSet, int piSize, byte[] pbOutBytes)
        {
            this.GetNextEventDetailDataChunkResult = GetNextEventDetailDataChunkResult;
            this.psAuthContext = psAuthContext;
            this.plOffSet = plOffSet;
            this.piSize = piSize;
            this.pbOutBytes = pbOutBytes;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eEventLevel
    {
        
        /// <remarks/>
        Exception,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Configuration,
        
        /// <remarks/>
        Information,
        
        /// <remarks/>
        Verbose,
        
        /// <remarks/>
        Debug,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventsByProgressIds", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventsByProgressIdsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long[] palProgressIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public long plLastDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public string psXMLEventDataFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public string psXMLRequestedEventData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public string psOutXMLEventList;
        
        public RetrieveEventsByProgressIdsRequest()
        {
        }
        
        public RetrieveEventsByProgressIdsRequest(string psAuthContext, long[] palProgressIds, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter, long plLastDetailId, string psXMLEventDataFilter, string psXMLRequestedEventData, string psOutXMLEventList)
        {
            this.psAuthContext = psAuthContext;
            this.palProgressIds = palProgressIds;
            this.peLevelFilter = peLevelFilter;
            this.plLastDetailId = plLastDetailId;
            this.psXMLEventDataFilter = psXMLEventDataFilter;
            this.psXMLRequestedEventData = psXMLRequestedEventData;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventsByProgressIdsResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventsByProgressIdsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string RetrieveEventsByProgressIdsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psOutXMLEventList;
        
        public RetrieveEventsByProgressIdsResponse()
        {
        }
        
        public RetrieveEventsByProgressIdsResponse(string RetrieveEventsByProgressIdsResult, string psAuthContext, string psOutXMLEventList)
        {
            this.RetrieveEventsByProgressIdsResult = RetrieveEventsByProgressIdsResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventsByParentProgressIds", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventsByParentProgressIdsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long[] palParentProgressIds;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public long plLastDetailId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public string psXMLEventDataFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public string psXMLRequestedEventData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public string psOutXMLEventList;
        
        public RetrieveEventsByParentProgressIdsRequest()
        {
        }
        
        public RetrieveEventsByParentProgressIdsRequest(string psAuthContext, long[] palParentProgressIds, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter, long plLastDetailId, string psXMLEventDataFilter, string psXMLRequestedEventData, string psOutXMLEventList)
        {
            this.psAuthContext = psAuthContext;
            this.palParentProgressIds = palParentProgressIds;
            this.peLevelFilter = peLevelFilter;
            this.plLastDetailId = plLastDetailId;
            this.psXMLEventDataFilter = psXMLEventDataFilter;
            this.psXMLRequestedEventData = psXMLRequestedEventData;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventsByParentProgressIdsResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventsByParentProgressIdsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string RetrieveEventsByParentProgressIdsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psOutXMLEventList;
        
        public RetrieveEventsByParentProgressIdsResponse()
        {
        }
        
        public RetrieveEventsByParentProgressIdsResponse(string RetrieveEventsByParentProgressIdsResult, string psAuthContext, string psOutXMLEventList)
        {
            this.RetrieveEventsByParentProgressIdsResult = RetrieveEventsByParentProgressIdsResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eProgressStatusFilter
    {
        
        /// <remarks/>
        Busy = 1,
        
        /// <remarks/>
        Success = 2,
        
        /// <remarks/>
        Warning = 4,
        
        /// <remarks/>
        Failed = 8,
        
        /// <remarks/>
        All = 16,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eUserFilter
    {
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        All,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventOverview", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventOverviewRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string[] pasEventTypes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatusFilter peStatusFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public System.DateTime pdModifiedSince;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eUserFilter peUserFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public string psXMLRequestedEventData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public string psOutXMLEventList;
        
        public RetrieveEventOverviewRequest()
        {
        }
        
        public RetrieveEventOverviewRequest(string psAuthContext, string[] pasEventTypes, Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatusFilter peStatusFilter, System.DateTime pdModifiedSince, Trisoft.ISHRemote.EventMonitor25ServiceReference.eUserFilter peUserFilter, string psXMLRequestedEventData, string psOutXMLEventList)
        {
            this.psAuthContext = psAuthContext;
            this.pasEventTypes = pasEventTypes;
            this.peStatusFilter = peStatusFilter;
            this.pdModifiedSince = pdModifiedSince;
            this.peUserFilter = peUserFilter;
            this.psXMLRequestedEventData = psXMLRequestedEventData;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveEventOverviewResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class RetrieveEventOverviewResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string RetrieveEventOverviewResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psOutXMLEventList;
        
        public RetrieveEventOverviewResponse()
        {
        }
        
        public RetrieveEventOverviewResponse(string RetrieveEventOverviewResult, string psAuthContext, string psOutXMLEventList)
        {
            this.RetrieveEventOverviewResult = RetrieveEventOverviewResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLEventList = psOutXMLEventList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartEvent", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class StartEventRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psEventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public long plParentProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public int piMaximumProgress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public string psOutEventId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public long plOutProgressId;
        
        public StartEventRequest()
        {
        }
        
        public StartEventRequest(string psAuthContext, string psEventType, string psDescription, long plParentProgressId, int piMaximumProgress, string psOutEventId, long plOutProgressId)
        {
            this.psAuthContext = psAuthContext;
            this.psEventType = psEventType;
            this.psDescription = psDescription;
            this.plParentProgressId = plParentProgressId;
            this.piMaximumProgress = piMaximumProgress;
            this.psOutEventId = psOutEventId;
            this.plOutProgressId = plOutProgressId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartEventResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class StartEventResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string StartEventResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public string psOutEventId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public long plOutProgressId;
        
        public StartEventResponse()
        {
        }
        
        public StartEventResponse(string StartEventResult, string psAuthContext, string psOutEventId, long plOutProgressId)
        {
            this.StartEventResult = StartEventResult;
            this.psAuthContext = psAuthContext;
            this.psOutEventId = psOutEventId;
            this.plOutProgressId = plOutProgressId;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eProgressStatus
    {
        
        /// <remarks/>
        Busy,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        Calculate,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EndEvent", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class EndEventRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatus peStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public int piCurrentProgress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public int piMaximumProgress;
        
        public EndEventRequest()
        {
        }
        
        public EndEventRequest(string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatus peStatus, int piCurrentProgress, int piMaximumProgress)
        {
            this.psAuthContext = psAuthContext;
            this.plProgressId = plProgressId;
            this.peStatus = peStatus;
            this.piCurrentProgress = piCurrentProgress;
            this.piMaximumProgress = piMaximumProgress;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="EndEventResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class EndEventResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string EndEventResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        public EndEventResponse()
        {
        }
        
        public EndEventResponse(string EndEventResult, string psAuthContext)
        {
            this.EndEventResult = EndEventResult;
            this.psAuthContext = psAuthContext;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eDetailStatus
    {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Failed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5")]
    public enum eEventDataType
    {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        String,
        
        /// <remarks/>
        List,
        
        /// <remarks/>
        Xml,
        
        /// <remarks/>
        SendEventData,
        
        /// <remarks/>
        LogObject,
        
        /// <remarks/>
        StatusReport,
        
        /// <remarks/>
        CommandOutput,
        
        /// <remarks/>
        Other,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddEventDetail", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class AddEventDetailRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public string psAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public string psDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=8)]
        public long plOutDetailId;
        
        public AddEventDetailRequest()
        {
        }
        
        public AddEventDetailRequest(string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel, string psAction, string psDescription, Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType, byte[] pbData, long plOutDetailId)
        {
            this.psAuthContext = psAuthContext;
            this.plProgressId = plProgressId;
            this.peLevel = peLevel;
            this.psAction = psAction;
            this.psDescription = psDescription;
            this.peStatus = peStatus;
            this.peDataType = peDataType;
            this.pbData = pbData;
            this.plOutDetailId = plOutDetailId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddEventDetailResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class AddEventDetailResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string AddEventDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOutDetailId;
        
        public AddEventDetailResponse()
        {
        }
        
        public AddEventDetailResponse(string AddEventDetailResult, string psAuthContext, long plOutDetailId)
        {
            this.AddEventDetailResult = AddEventDetailResult;
            this.psAuthContext = psAuthContext;
            this.plOutDetailId = plOutDetailId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddEventDetailWithProgress", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class AddEventDetailWithProgressRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public string psAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=4)]
        public string psDescription;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=5)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=6)]
        public Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=7)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=8)]
        public int piCurrentProgress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=9)]
        public int piMaximumProgress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=10)]
        public long plOutDetailId;
        
        public AddEventDetailWithProgressRequest()
        {
        }
        
        public AddEventDetailWithProgressRequest(string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel, string psAction, string psDescription, Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType, byte[] pbData, int piCurrentProgress, int piMaximumProgress, long plOutDetailId)
        {
            this.psAuthContext = psAuthContext;
            this.plProgressId = plProgressId;
            this.peLevel = peLevel;
            this.psAction = psAction;
            this.psDescription = psDescription;
            this.peStatus = peStatus;
            this.peDataType = peDataType;
            this.pbData = pbData;
            this.piCurrentProgress = piCurrentProgress;
            this.piMaximumProgress = piMaximumProgress;
            this.plOutDetailId = plOutDetailId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddEventDetailWithProgressResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class AddEventDetailWithProgressResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string AddEventDetailWithProgressResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public long plOutDetailId;
        
        public AddEventDetailWithProgressResponse()
        {
        }
        
        public AddEventDetailWithProgressResponse(string AddEventDetailWithProgressResult, string psAuthContext, long plOutDetailId)
        {
            this.AddEventDetailWithProgressResult = AddEventDetailWithProgressResult;
            this.psAuthContext = psAuthContext;
            this.plOutDetailId = plOutDetailId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteByProgressId", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class DeleteByProgressIdRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public long plProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=2)]
        public bool pbDeleteFailedEvents;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=3)]
        public bool pbDeleteBusyEvents;
        
        public DeleteByProgressIdRequest()
        {
        }
        
        public DeleteByProgressIdRequest(string psAuthContext, long plProgressId, bool pbDeleteFailedEvents, bool pbDeleteBusyEvents)
        {
            this.psAuthContext = psAuthContext;
            this.plProgressId = plProgressId;
            this.pbDeleteFailedEvents = pbDeleteFailedEvents;
            this.pbDeleteBusyEvents = pbDeleteBusyEvents;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteByProgressIdResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", IsWrapped=true)]
    internal partial class DeleteByProgressIdResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=0)]
        public string DeleteByProgressIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:EventMonitor:2.5", Order=1)]
        public string psAuthContext;
        
        public DeleteByProgressIdResponse()
        {
        }
        
        public DeleteByProgressIdResponse(string DeleteByProgressIdResult, string psAuthContext)
        {
            this.DeleteByProgressIdResult = DeleteByProgressIdResult;
            this.psAuthContext = psAuthContext;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface EventMonitor25SoapChannel : Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class EventMonitor25SoapClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap>, Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EventMonitor25SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(EventMonitor25SoapClient.GetBindingForEndpoint(endpointConfiguration), EventMonitor25SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EventMonitor25SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EventMonitor25SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EventMonitor25SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EventMonitor25SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EventMonitor25SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.GetProgressId(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest request)
        {
            return base.Channel.GetProgressId(request);
        }
        
        public string GetProgressId(ref string psAuthContext, string psEventId, ref long plOutProgressId)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psEventId = psEventId;
            inValue.plOutProgressId = plOutProgressId;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).GetProgressId(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutProgressId = retVal.plOutProgressId;
            return retVal.GetProgressIdResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdResponse> GetProgressIdAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetProgressIdRequest request)
        {
            return base.Channel.GetProgressIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.GetEventDetail(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest request)
        {
            return base.Channel.GetEventDetail(request);
        }
        
        public string GetEventDetail(ref string psAuthContext, long plDetailId, string psXMLRequestedEventData, bool pbIncludeData, ref string psOutXMLEventList)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plDetailId = plDetailId;
            inValue.psXMLRequestedEventData = psXMLRequestedEventData;
            inValue.pbIncludeData = pbIncludeData;
            inValue.psOutXMLEventList = psOutXMLEventList;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).GetEventDetail(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLEventList = retVal.psOutXMLEventList;
            return retVal.GetEventDetailResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailResponse> GetEventDetailAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetEventDetailRequest request)
        {
            return base.Channel.GetEventDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.GetNextEventDetailDataChunk(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest request)
        {
            return base.Channel.GetNextEventDetailDataChunk(request);
        }
        
        public string GetNextEventDetailDataChunk(ref string psAuthContext, long plDetailId, ref long plOffSet, ref int piSize, ref byte[] pbOutBytes)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plDetailId = plDetailId;
            inValue.plOffSet = plOffSet;
            inValue.piSize = piSize;
            inValue.pbOutBytes = pbOutBytes;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).GetNextEventDetailDataChunk(inValue);
            psAuthContext = retVal.psAuthContext;
            plOffSet = retVal.plOffSet;
            piSize = retVal.piSize;
            pbOutBytes = retVal.pbOutBytes;
            return retVal.GetNextEventDetailDataChunkResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkResponse> GetNextEventDetailDataChunkAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.GetNextEventDetailDataChunkRequest request)
        {
            return base.Channel.GetNextEventDetailDataChunkAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.RetrieveEventsByProgressIds(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest request)
        {
            return base.Channel.RetrieveEventsByProgressIds(request);
        }
        
        public string RetrieveEventsByProgressIds(ref string psAuthContext, long[] palProgressIds, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter, long plLastDetailId, string psXMLEventDataFilter, string psXMLRequestedEventData, ref string psOutXMLEventList)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.palProgressIds = palProgressIds;
            inValue.peLevelFilter = peLevelFilter;
            inValue.plLastDetailId = plLastDetailId;
            inValue.psXMLEventDataFilter = psXMLEventDataFilter;
            inValue.psXMLRequestedEventData = psXMLRequestedEventData;
            inValue.psOutXMLEventList = psOutXMLEventList;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).RetrieveEventsByProgressIds(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLEventList = retVal.psOutXMLEventList;
            return retVal.RetrieveEventsByProgressIdsResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsResponse> RetrieveEventsByProgressIdsAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByProgressIdsRequest request)
        {
            return base.Channel.RetrieveEventsByProgressIdsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.RetrieveEventsByParentProgressIds(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest request)
        {
            return base.Channel.RetrieveEventsByParentProgressIds(request);
        }
        
        public string RetrieveEventsByParentProgressIds(ref string psAuthContext, long[] palParentProgressIds, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevelFilter, long plLastDetailId, string psXMLEventDataFilter, string psXMLRequestedEventData, ref string psOutXMLEventList)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.palParentProgressIds = palParentProgressIds;
            inValue.peLevelFilter = peLevelFilter;
            inValue.plLastDetailId = plLastDetailId;
            inValue.psXMLEventDataFilter = psXMLEventDataFilter;
            inValue.psXMLRequestedEventData = psXMLRequestedEventData;
            inValue.psOutXMLEventList = psOutXMLEventList;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).RetrieveEventsByParentProgressIds(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLEventList = retVal.psOutXMLEventList;
            return retVal.RetrieveEventsByParentProgressIdsResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsResponse> RetrieveEventsByParentProgressIdsAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventsByParentProgressIdsRequest request)
        {
            return base.Channel.RetrieveEventsByParentProgressIdsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.RetrieveEventOverview(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest request)
        {
            return base.Channel.RetrieveEventOverview(request);
        }
        
        public string RetrieveEventOverview(ref string psAuthContext, string[] pasEventTypes, Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatusFilter peStatusFilter, System.DateTime pdModifiedSince, Trisoft.ISHRemote.EventMonitor25ServiceReference.eUserFilter peUserFilter, string psXMLRequestedEventData, ref string psOutXMLEventList)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.pasEventTypes = pasEventTypes;
            inValue.peStatusFilter = peStatusFilter;
            inValue.pdModifiedSince = pdModifiedSince;
            inValue.peUserFilter = peUserFilter;
            inValue.psXMLRequestedEventData = psXMLRequestedEventData;
            inValue.psOutXMLEventList = psOutXMLEventList;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).RetrieveEventOverview(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLEventList = retVal.psOutXMLEventList;
            return retVal.RetrieveEventOverviewResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewResponse> RetrieveEventOverviewAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.RetrieveEventOverviewRequest request)
        {
            return base.Channel.RetrieveEventOverviewAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.StartEvent(Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest request)
        {
            return base.Channel.StartEvent(request);
        }
        
        public string StartEvent(ref string psAuthContext, string psEventType, string psDescription, long plParentProgressId, int piMaximumProgress, ref string psOutEventId, ref long plOutProgressId)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psEventType = psEventType;
            inValue.psDescription = psDescription;
            inValue.plParentProgressId = plParentProgressId;
            inValue.piMaximumProgress = piMaximumProgress;
            inValue.psOutEventId = psOutEventId;
            inValue.plOutProgressId = plOutProgressId;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).StartEvent(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutEventId = retVal.psOutEventId;
            plOutProgressId = retVal.plOutProgressId;
            return retVal.StartEventResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventResponse> StartEventAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.StartEventRequest request)
        {
            return base.Channel.StartEventAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.EndEvent(Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest request)
        {
            return base.Channel.EndEvent(request);
        }
        
        public string EndEvent(ref string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eProgressStatus peStatus, int piCurrentProgress, int piMaximumProgress)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plProgressId = plProgressId;
            inValue.peStatus = peStatus;
            inValue.piCurrentProgress = piCurrentProgress;
            inValue.piMaximumProgress = piMaximumProgress;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).EndEvent(inValue);
            psAuthContext = retVal.psAuthContext;
            return retVal.EndEventResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventResponse> EndEventAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.EndEventRequest request)
        {
            return base.Channel.EndEventAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.AddEventDetail(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest request)
        {
            return base.Channel.AddEventDetail(request);
        }
        
        public string AddEventDetail(ref string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel, string psAction, string psDescription, Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType, byte[] pbData, ref long plOutDetailId)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plProgressId = plProgressId;
            inValue.peLevel = peLevel;
            inValue.psAction = psAction;
            inValue.psDescription = psDescription;
            inValue.peStatus = peStatus;
            inValue.peDataType = peDataType;
            inValue.pbData = pbData;
            inValue.plOutDetailId = plOutDetailId;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).AddEventDetail(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutDetailId = retVal.plOutDetailId;
            return retVal.AddEventDetailResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailResponse> AddEventDetailAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailRequest request)
        {
            return base.Channel.AddEventDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.AddEventDetailWithProgress(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest request)
        {
            return base.Channel.AddEventDetailWithProgress(request);
        }
        
        public string AddEventDetailWithProgress(ref string psAuthContext, long plProgressId, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventLevel peLevel, string psAction, string psDescription, Trisoft.ISHRemote.EventMonitor25ServiceReference.eDetailStatus peStatus, Trisoft.ISHRemote.EventMonitor25ServiceReference.eEventDataType peDataType, byte[] pbData, int piCurrentProgress, int piMaximumProgress, ref long plOutDetailId)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plProgressId = plProgressId;
            inValue.peLevel = peLevel;
            inValue.psAction = psAction;
            inValue.psDescription = psDescription;
            inValue.peStatus = peStatus;
            inValue.peDataType = peDataType;
            inValue.pbData = pbData;
            inValue.piCurrentProgress = piCurrentProgress;
            inValue.piMaximumProgress = piMaximumProgress;
            inValue.plOutDetailId = plOutDetailId;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).AddEventDetailWithProgress(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutDetailId = retVal.plOutDetailId;
            return retVal.AddEventDetailWithProgressResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressResponse> AddEventDetailWithProgressAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.AddEventDetailWithProgressRequest request)
        {
            return base.Channel.AddEventDetailWithProgressAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdResponse Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap.DeleteByProgressId(Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest request)
        {
            return base.Channel.DeleteByProgressId(request);
        }
        
        public string DeleteByProgressId(ref string psAuthContext, long plProgressId, bool pbDeleteFailedEvents, bool pbDeleteBusyEvents)
        {
            Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest inValue = new Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plProgressId = plProgressId;
            inValue.pbDeleteFailedEvents = pbDeleteFailedEvents;
            inValue.pbDeleteBusyEvents = pbDeleteBusyEvents;
            Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdResponse retVal = ((Trisoft.ISHRemote.EventMonitor25ServiceReference.EventMonitor25Soap)(this)).DeleteByProgressId(inValue);
            psAuthContext = retVal.psAuthContext;
            return retVal.DeleteByProgressIdResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdResponse> DeleteByProgressIdAsync(Trisoft.ISHRemote.EventMonitor25ServiceReference.DeleteByProgressIdRequest request)
        {
            return base.Channel.DeleteByProgressIdAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EventMonitor25Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.EventMonitor25Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EventMonitor25Soap))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/eventmonitor25.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.EventMonitor25Soap12))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/eventmonitor25.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            EventMonitor25Soap,
            
            EventMonitor25Soap12,
        }
    }
}

