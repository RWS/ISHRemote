//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.BackgroundTask25ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", ConfigurationName="Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap")]
    internal interface BackgroundTask25Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/Find", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindResponse Find(Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/Find", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindResponse> FindAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/RetrieveDataObjectByIshDa" +
            "taRefs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsResponse RetrieveDataObjectByIshDataRefs(Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/RetrieveDataObjectByIshDa" +
            "taRefs", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsResponse> RetrieveDataObjectByIshDataRefsAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/CreateBackgroundTaskWithS" +
            "tartAfter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterResponse CreateBackgroundTaskWithStartAfter(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/CreateBackgroundTaskWithS" +
            "tartAfter", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterResponse> CreateBackgroundTaskWithStartAfterAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/CreateBackgroundTask", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskResponse CreateBackgroundTask(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5/CreateBackgroundTask", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskResponse> CreateBackgroundTaskAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5")]
    public enum eUserFilter
    {
        
        /// <remarks/>
        Current,
        
        /// <remarks/>
        All,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Find", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class FindRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public System.DateTime pdModifiedSince;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public Trisoft.ISHRemote.BackgroundTask25ServiceReference.eUserFilter peUserFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=3)]
        public string psXMLMetadataFilter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=4)]
        public string psXMLRequestedMetadata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=5)]
        public string psOutXMLTaskList;
        
        public FindRequest()
        {
        }
        
        public FindRequest(string psAuthContext, System.DateTime pdModifiedSince, Trisoft.ISHRemote.BackgroundTask25ServiceReference.eUserFilter peUserFilter, string psXMLMetadataFilter, string psXMLRequestedMetadata, string psOutXMLTaskList)
        {
            this.psAuthContext = psAuthContext;
            this.pdModifiedSince = pdModifiedSince;
            this.peUserFilter = peUserFilter;
            this.psXMLMetadataFilter = psXMLMetadataFilter;
            this.psXMLRequestedMetadata = psXMLRequestedMetadata;
            this.psOutXMLTaskList = psOutXMLTaskList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class FindResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string FindResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public string psOutXMLTaskList;
        
        public FindResponse()
        {
        }
        
        public FindResponse(string FindResult, string psAuthContext, string psOutXMLTaskList)
        {
            this.FindResult = FindResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLTaskList = psOutXMLTaskList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveDataObjectByIshDataRefs", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class RetrieveDataObjectByIshDataRefsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public long[] palIshDataRefs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public string psOutXMLTaskDataObjectList;
        
        public RetrieveDataObjectByIshDataRefsRequest()
        {
        }
        
        public RetrieveDataObjectByIshDataRefsRequest(string psAuthContext, long[] palIshDataRefs, string psOutXMLTaskDataObjectList)
        {
            this.psAuthContext = psAuthContext;
            this.palIshDataRefs = palIshDataRefs;
            this.psOutXMLTaskDataObjectList = psOutXMLTaskDataObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RetrieveDataObjectByIshDataRefsResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class RetrieveDataObjectByIshDataRefsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string RetrieveDataObjectByIshDataRefsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public string psOutXMLTaskDataObjectList;
        
        public RetrieveDataObjectByIshDataRefsResponse()
        {
        }
        
        public RetrieveDataObjectByIshDataRefsResponse(string RetrieveDataObjectByIshDataRefsResult, string psAuthContext, string psOutXMLTaskDataObjectList)
        {
            this.RetrieveDataObjectByIshDataRefsResult = RetrieveDataObjectByIshDataRefsResult;
            this.psAuthContext = psAuthContext;
            this.psOutXMLTaskDataObjectList = psOutXMLTaskDataObjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBackgroundTaskWithStartAfter", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class CreateBackgroundTaskWithStartAfterRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psEventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbInputData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=3)]
        public long plOutProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=4)]
        public string psHashId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=5)]
        public System.DateTime pdStartAfter;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=6)]
        public long plOutTaskId;
        
        public CreateBackgroundTaskWithStartAfterRequest()
        {
        }
        
        public CreateBackgroundTaskWithStartAfterRequest(string psAuthContext, string psEventType, byte[] pbInputData, long plOutProgressId, string psHashId, System.DateTime pdStartAfter, long plOutTaskId)
        {
            this.psAuthContext = psAuthContext;
            this.psEventType = psEventType;
            this.pbInputData = pbInputData;
            this.plOutProgressId = plOutProgressId;
            this.psHashId = psHashId;
            this.pdStartAfter = pdStartAfter;
            this.plOutTaskId = plOutTaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBackgroundTaskWithStartAfterResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class CreateBackgroundTaskWithStartAfterResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string CreateBackgroundTaskWithStartAfterResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public long plOutProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=3)]
        public long plOutTaskId;
        
        public CreateBackgroundTaskWithStartAfterResponse()
        {
        }
        
        public CreateBackgroundTaskWithStartAfterResponse(string CreateBackgroundTaskWithStartAfterResult, string psAuthContext, long plOutProgressId, long plOutTaskId)
        {
            this.CreateBackgroundTaskWithStartAfterResult = CreateBackgroundTaskWithStartAfterResult;
            this.psAuthContext = psAuthContext;
            this.plOutProgressId = plOutProgressId;
            this.plOutTaskId = plOutTaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBackgroundTask", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class CreateBackgroundTaskRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psEventType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] pbInputData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=3)]
        public long plOutProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=4)]
        public string psHashId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=5)]
        public long plOutTaskId;
        
        public CreateBackgroundTaskRequest()
        {
        }
        
        public CreateBackgroundTaskRequest(string psAuthContext, string psEventType, byte[] pbInputData, long plOutProgressId, string psHashId, long plOutTaskId)
        {
            this.psAuthContext = psAuthContext;
            this.psEventType = psEventType;
            this.pbInputData = pbInputData;
            this.plOutProgressId = plOutProgressId;
            this.psHashId = psHashId;
            this.plOutTaskId = plOutTaskId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateBackgroundTaskResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", IsWrapped=true)]
    internal partial class CreateBackgroundTaskResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=0)]
        public string CreateBackgroundTaskResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=2)]
        public long plOutProgressId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:BackgroundTask:2.5", Order=3)]
        public long plOutTaskId;
        
        public CreateBackgroundTaskResponse()
        {
        }
        
        public CreateBackgroundTaskResponse(string CreateBackgroundTaskResult, string psAuthContext, long plOutProgressId, long plOutTaskId)
        {
            this.CreateBackgroundTaskResult = CreateBackgroundTaskResult;
            this.psAuthContext = psAuthContext;
            this.plOutProgressId = plOutProgressId;
            this.plOutTaskId = plOutTaskId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface BackgroundTask25SoapChannel : Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class BackgroundTask25SoapClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap>, Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public BackgroundTask25SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(BackgroundTask25SoapClient.GetBindingForEndpoint(endpointConfiguration), BackgroundTask25SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BackgroundTask25SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(BackgroundTask25SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BackgroundTask25SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(BackgroundTask25SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public BackgroundTask25SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindResponse Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap.Find(Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest request)
        {
            return base.Channel.Find(request);
        }
        
        public string Find(ref string psAuthContext, System.DateTime pdModifiedSince, Trisoft.ISHRemote.BackgroundTask25ServiceReference.eUserFilter peUserFilter, string psXMLMetadataFilter, string psXMLRequestedMetadata, ref string psOutXMLTaskList)
        {
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest inValue = new Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.pdModifiedSince = pdModifiedSince;
            inValue.peUserFilter = peUserFilter;
            inValue.psXMLMetadataFilter = psXMLMetadataFilter;
            inValue.psXMLRequestedMetadata = psXMLRequestedMetadata;
            inValue.psOutXMLTaskList = psOutXMLTaskList;
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindResponse retVal = ((Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap)(this)).Find(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLTaskList = retVal.psOutXMLTaskList;
            return retVal.FindResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindResponse> FindAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.FindRequest request)
        {
            return base.Channel.FindAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsResponse Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap.RetrieveDataObjectByIshDataRefs(Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest request)
        {
            return base.Channel.RetrieveDataObjectByIshDataRefs(request);
        }
        
        public string RetrieveDataObjectByIshDataRefs(ref string psAuthContext, long[] palIshDataRefs, ref string psOutXMLTaskDataObjectList)
        {
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest inValue = new Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.palIshDataRefs = palIshDataRefs;
            inValue.psOutXMLTaskDataObjectList = psOutXMLTaskDataObjectList;
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsResponse retVal = ((Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap)(this)).RetrieveDataObjectByIshDataRefs(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutXMLTaskDataObjectList = retVal.psOutXMLTaskDataObjectList;
            return retVal.RetrieveDataObjectByIshDataRefsResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsResponse> RetrieveDataObjectByIshDataRefsAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.RetrieveDataObjectByIshDataRefsRequest request)
        {
            return base.Channel.RetrieveDataObjectByIshDataRefsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterResponse Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap.CreateBackgroundTaskWithStartAfter(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest request)
        {
            return base.Channel.CreateBackgroundTaskWithStartAfter(request);
        }
        
        public string CreateBackgroundTaskWithStartAfter(ref string psAuthContext, string psEventType, byte[] pbInputData, ref long plOutProgressId, string psHashId, System.DateTime pdStartAfter, ref long plOutTaskId)
        {
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest inValue = new Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psEventType = psEventType;
            inValue.pbInputData = pbInputData;
            inValue.plOutProgressId = plOutProgressId;
            inValue.psHashId = psHashId;
            inValue.pdStartAfter = pdStartAfter;
            inValue.plOutTaskId = plOutTaskId;
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterResponse retVal = ((Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap)(this)).CreateBackgroundTaskWithStartAfter(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutProgressId = retVal.plOutProgressId;
            plOutTaskId = retVal.plOutTaskId;
            return retVal.CreateBackgroundTaskWithStartAfterResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterResponse> CreateBackgroundTaskWithStartAfterAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskWithStartAfterRequest request)
        {
            return base.Channel.CreateBackgroundTaskWithStartAfterAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskResponse Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap.CreateBackgroundTask(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest request)
        {
            return base.Channel.CreateBackgroundTask(request);
        }
        
        public string CreateBackgroundTask(ref string psAuthContext, string psEventType, byte[] pbInputData, ref long plOutProgressId, string psHashId, ref long plOutTaskId)
        {
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest inValue = new Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psEventType = psEventType;
            inValue.pbInputData = pbInputData;
            inValue.plOutProgressId = plOutProgressId;
            inValue.psHashId = psHashId;
            inValue.plOutTaskId = plOutTaskId;
            Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskResponse retVal = ((Trisoft.ISHRemote.BackgroundTask25ServiceReference.BackgroundTask25Soap)(this)).CreateBackgroundTask(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutProgressId = retVal.plOutProgressId;
            plOutTaskId = retVal.plOutTaskId;
            return retVal.CreateBackgroundTaskResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskResponse> CreateBackgroundTaskAsync(Trisoft.ISHRemote.BackgroundTask25ServiceReference.CreateBackgroundTaskRequest request)
        {
            return base.Channel.CreateBackgroundTaskAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BackgroundTask25Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BackgroundTask25Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BackgroundTask25Soap))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/backgroundtask25.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.BackgroundTask25Soap12))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/backgroundtask25.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BackgroundTask25Soap,
            
            BackgroundTask25Soap12,
        }
    }
}

