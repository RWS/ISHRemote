//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.Application25ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", ConfigurationName="Trisoft.ISHRemote.Application25ServiceReference.Application25Soap")]
    internal interface Application25Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Application25ServiceReference.LoginResponse Login(Trisoft.ISHRemote.Application25ServiceReference.LoginRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.LoginResponse> LoginAsync(Trisoft.ISHRemote.Application25ServiceReference.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Application25ServiceReference.AuthenticateResponse Authenticate(Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/Authenticate", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.AuthenticateResponse> AuthenticateAsync(Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetVersion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetVersion", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetApplicationName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameResponse GetApplicationName(Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetApplicationName", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameResponse> GetApplicationNameAsync(Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetUserRef", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Application25ServiceReference.GetUserRefResponse GetUserRef(Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Application:2.5/GetUserRef", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.GetUserRefResponse> GetUserRefAsync(Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Login", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class LoginRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string psApplication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psUserName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=2)]
        public string psPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=3)]
        public string psOutAuthContext;
        
        public LoginRequest()
        {
        }
        
        public LoginRequest(string psApplication, string psUserName, string psPassword, string psOutAuthContext)
        {
            this.psApplication = psApplication;
            this.psUserName = psUserName;
            this.psPassword = psPassword;
            this.psOutAuthContext = psOutAuthContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoginResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class LoginResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string LoginResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psOutAuthContext;
        
        public LoginResponse()
        {
        }
        
        public LoginResponse(string LoginResult, string psOutAuthContext)
        {
            this.LoginResult = LoginResult;
            this.psOutAuthContext = psOutAuthContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Authenticate", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class AuthenticateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string psApplication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psOutAuthContext;
        
        public AuthenticateRequest()
        {
        }
        
        public AuthenticateRequest(string psApplication, string psOutAuthContext)
        {
            this.psApplication = psApplication;
            this.psOutAuthContext = psOutAuthContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AuthenticateResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class AuthenticateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string AuthenticateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psOutAuthContext;
        
        public AuthenticateResponse()
        {
        }
        
        public AuthenticateResponse(string AuthenticateResult, string psOutAuthContext)
        {
            this.AuthenticateResult = AuthenticateResult;
            this.psOutAuthContext = psOutAuthContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationName", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class GetApplicationNameRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psOutApplicationName;
        
        public GetApplicationNameRequest()
        {
        }
        
        public GetApplicationNameRequest(string psAuthContext, string psOutApplicationName)
        {
            this.psAuthContext = psAuthContext;
            this.psOutApplicationName = psOutApplicationName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetApplicationNameResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class GetApplicationNameResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string GetApplicationNameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=2)]
        public string psOutApplicationName;
        
        public GetApplicationNameResponse()
        {
        }
        
        public GetApplicationNameResponse(string GetApplicationNameResult, string psAuthContext, string psOutApplicationName)
        {
            this.GetApplicationNameResult = GetApplicationNameResult;
            this.psAuthContext = psAuthContext;
            this.psOutApplicationName = psOutApplicationName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRef", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class GetUserRefRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public long plOutUserRef;
        
        public GetUserRefRequest()
        {
        }
        
        public GetUserRefRequest(string psAuthContext, long plOutUserRef)
        {
            this.psAuthContext = psAuthContext;
            this.plOutUserRef = plOutUserRef;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserRefResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", IsWrapped=true)]
    internal partial class GetUserRefResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=0)]
        public string GetUserRefResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Application:2.5", Order=2)]
        public long plOutUserRef;
        
        public GetUserRefResponse()
        {
        }
        
        public GetUserRefResponse(string GetUserRefResult, string psAuthContext, long plOutUserRef)
        {
            this.GetUserRefResult = GetUserRefResult;
            this.psAuthContext = psAuthContext;
            this.plOutUserRef = plOutUserRef;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface Application25SoapChannel : Trisoft.ISHRemote.Application25ServiceReference.Application25Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class Application25SoapClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.Application25ServiceReference.Application25Soap>, Trisoft.ISHRemote.Application25ServiceReference.Application25Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Application25SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(Application25SoapClient.GetBindingForEndpoint(endpointConfiguration), Application25SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Application25SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Application25SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Application25SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Application25SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Application25SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Application25ServiceReference.LoginResponse Trisoft.ISHRemote.Application25ServiceReference.Application25Soap.Login(Trisoft.ISHRemote.Application25ServiceReference.LoginRequest request)
        {
            return base.Channel.Login(request);
        }
        
        public string Login(string psApplication, string psUserName, string psPassword, ref string psOutAuthContext)
        {
            Trisoft.ISHRemote.Application25ServiceReference.LoginRequest inValue = new Trisoft.ISHRemote.Application25ServiceReference.LoginRequest();
            inValue.psApplication = psApplication;
            inValue.psUserName = psUserName;
            inValue.psPassword = psPassword;
            inValue.psOutAuthContext = psOutAuthContext;
            Trisoft.ISHRemote.Application25ServiceReference.LoginResponse retVal = ((Trisoft.ISHRemote.Application25ServiceReference.Application25Soap)(this)).Login(inValue);
            psOutAuthContext = retVal.psOutAuthContext;
            return retVal.LoginResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.LoginResponse> LoginAsync(Trisoft.ISHRemote.Application25ServiceReference.LoginRequest request)
        {
            return base.Channel.LoginAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Application25ServiceReference.AuthenticateResponse Trisoft.ISHRemote.Application25ServiceReference.Application25Soap.Authenticate(Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest request)
        {
            return base.Channel.Authenticate(request);
        }
        
        public string Authenticate(string psApplication, ref string psOutAuthContext)
        {
            Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest inValue = new Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest();
            inValue.psApplication = psApplication;
            inValue.psOutAuthContext = psOutAuthContext;
            Trisoft.ISHRemote.Application25ServiceReference.AuthenticateResponse retVal = ((Trisoft.ISHRemote.Application25ServiceReference.Application25Soap)(this)).Authenticate(inValue);
            psOutAuthContext = retVal.psOutAuthContext;
            return retVal.AuthenticateResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.AuthenticateResponse> AuthenticateAsync(Trisoft.ISHRemote.Application25ServiceReference.AuthenticateRequest request)
        {
            return base.Channel.AuthenticateAsync(request);
        }
        
        public string GetVersion()
        {
            return base.Channel.GetVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync()
        {
            return base.Channel.GetVersionAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameResponse Trisoft.ISHRemote.Application25ServiceReference.Application25Soap.GetApplicationName(Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest request)
        {
            return base.Channel.GetApplicationName(request);
        }
        
        public string GetApplicationName(ref string psAuthContext, ref string psOutApplicationName)
        {
            Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest inValue = new Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psOutApplicationName = psOutApplicationName;
            Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameResponse retVal = ((Trisoft.ISHRemote.Application25ServiceReference.Application25Soap)(this)).GetApplicationName(inValue);
            psAuthContext = retVal.psAuthContext;
            psOutApplicationName = retVal.psOutApplicationName;
            return retVal.GetApplicationNameResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameResponse> GetApplicationNameAsync(Trisoft.ISHRemote.Application25ServiceReference.GetApplicationNameRequest request)
        {
            return base.Channel.GetApplicationNameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Application25ServiceReference.GetUserRefResponse Trisoft.ISHRemote.Application25ServiceReference.Application25Soap.GetUserRef(Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest request)
        {
            return base.Channel.GetUserRef(request);
        }
        
        public string GetUserRef(ref string psAuthContext, ref long plOutUserRef)
        {
            Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest inValue = new Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.plOutUserRef = plOutUserRef;
            Trisoft.ISHRemote.Application25ServiceReference.GetUserRefResponse retVal = ((Trisoft.ISHRemote.Application25ServiceReference.Application25Soap)(this)).GetUserRef(inValue);
            psAuthContext = retVal.psAuthContext;
            plOutUserRef = retVal.plOutUserRef;
            return retVal.GetUserRefResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Application25ServiceReference.GetUserRefResponse> GetUserRefAsync(Trisoft.ISHRemote.Application25ServiceReference.GetUserRefRequest request)
        {
            return base.Channel.GetUserRefAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Application25Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.Application25Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Application25Soap))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/application25.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.Application25Soap12))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/application25.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            Application25Soap,
            
            Application25Soap12,
        }
    }
}

