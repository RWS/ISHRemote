//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trisoft.ISHRemote.Search25ServiceReference
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", ConfigurationName="Trisoft.ISHRemote.Search25ServiceReference.Search25Soap")]
    internal interface Search25Soap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Search:2.5/PerformSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Search25ServiceReference.PerformSearchResponse PerformSearch(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Search:2.5/PerformSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Search25ServiceReference.PerformSearchResponse> PerformSearchAsync(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Search:2.5/PerformSearchInPublication", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationResponse PerformSearchInPublication(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="urn:trisoft.be:WebServices:InfoShare:Search:2.5/PerformSearchInPublication", ReplyAction="*")]
        System.Threading.Tasks.Task<Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationResponse> PerformSearchInPublicationAsync(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformSearch", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", IsWrapped=true)]
    internal partial class PerformSearchRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=1)]
        public string psXMLQuery;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=2)]
        public long plMaxHitsToReturn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=3)]
        public long plHitsTotalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=4)]
        public string psOutXMLSearchResults;
        
        public PerformSearchRequest()
        {
        }
        
        public PerformSearchRequest(string psAuthContext, string psXMLQuery, long plMaxHitsToReturn, long plHitsTotalNumber, string psOutXMLSearchResults)
        {
            this.psAuthContext = psAuthContext;
            this.psXMLQuery = psXMLQuery;
            this.plMaxHitsToReturn = plMaxHitsToReturn;
            this.plHitsTotalNumber = plHitsTotalNumber;
            this.psOutXMLSearchResults = psOutXMLSearchResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformSearchResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", IsWrapped=true)]
    internal partial class PerformSearchResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=0)]
        public string PerformSearchResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=2)]
        public long plHitsTotalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=3)]
        public string psOutXMLSearchResults;
        
        public PerformSearchResponse()
        {
        }
        
        public PerformSearchResponse(string PerformSearchResult, string psAuthContext, long plHitsTotalNumber, string psOutXMLSearchResults)
        {
            this.PerformSearchResult = PerformSearchResult;
            this.psAuthContext = psAuthContext;
            this.plHitsTotalNumber = plHitsTotalNumber;
            this.psOutXMLSearchResults = psOutXMLSearchResults;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5")]
    public enum eBaselineAutoCompleteMode
    {
        
        /// <remarks/>
        ISHFirstVersion,
        
        /// <remarks/>
        ISHLatestReleased,
        
        /// <remarks/>
        ISHLatestAvailable,
        
        /// <remarks/>
        ISHNone,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformSearchInPublication", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", IsWrapped=true)]
    internal partial class PerformSearchInPublicationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=0)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=1)]
        public string psLogicalId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=2)]
        public string psVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=3)]
        public Trisoft.ISHRemote.Search25ServiceReference.eBaselineAutoCompleteMode peAutoCompleteMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=4)]
        public string psXMLQuery;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=5)]
        public long plMaxHitsToReturn;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=6)]
        public long plHitsTotalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=7)]
        public string psOutXMLSearchResults;
        
        public PerformSearchInPublicationRequest()
        {
        }
        
        public PerformSearchInPublicationRequest(string psAuthContext, string psLogicalId, string psVersion, Trisoft.ISHRemote.Search25ServiceReference.eBaselineAutoCompleteMode peAutoCompleteMode, string psXMLQuery, long plMaxHitsToReturn, long plHitsTotalNumber, string psOutXMLSearchResults)
        {
            this.psAuthContext = psAuthContext;
            this.psLogicalId = psLogicalId;
            this.psVersion = psVersion;
            this.peAutoCompleteMode = peAutoCompleteMode;
            this.psXMLQuery = psXMLQuery;
            this.plMaxHitsToReturn = plMaxHitsToReturn;
            this.plHitsTotalNumber = plHitsTotalNumber;
            this.psOutXMLSearchResults = psOutXMLSearchResults;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PerformSearchInPublicationResponse", WrapperNamespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", IsWrapped=true)]
    internal partial class PerformSearchInPublicationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=0)]
        public string PerformSearchInPublicationResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=1)]
        public string psAuthContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=2)]
        public string psVersion;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=3)]
        public long plHitsTotalNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:trisoft.be:WebServices:InfoShare:Search:2.5", Order=4)]
        public string psOutXMLSearchResults;
        
        public PerformSearchInPublicationResponse()
        {
        }
        
        public PerformSearchInPublicationResponse(string PerformSearchInPublicationResult, string psAuthContext, string psVersion, long plHitsTotalNumber, string psOutXMLSearchResults)
        {
            this.PerformSearchInPublicationResult = PerformSearchInPublicationResult;
            this.psAuthContext = psAuthContext;
            this.psVersion = psVersion;
            this.plHitsTotalNumber = plHitsTotalNumber;
            this.psOutXMLSearchResults = psOutXMLSearchResults;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal interface Search25SoapChannel : Trisoft.ISHRemote.Search25ServiceReference.Search25Soap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    internal partial class Search25SoapClient : System.ServiceModel.ClientBase<Trisoft.ISHRemote.Search25ServiceReference.Search25Soap>, Trisoft.ISHRemote.Search25ServiceReference.Search25Soap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Search25SoapClient(EndpointConfiguration endpointConfiguration) : 
                base(Search25SoapClient.GetBindingForEndpoint(endpointConfiguration), Search25SoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Search25SoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Search25SoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Search25SoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Search25SoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Search25SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Search25ServiceReference.PerformSearchResponse Trisoft.ISHRemote.Search25ServiceReference.Search25Soap.PerformSearch(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest request)
        {
            return base.Channel.PerformSearch(request);
        }
        
        public string PerformSearch(ref string psAuthContext, string psXMLQuery, long plMaxHitsToReturn, ref long plHitsTotalNumber, ref string psOutXMLSearchResults)
        {
            Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest inValue = new Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psXMLQuery = psXMLQuery;
            inValue.plMaxHitsToReturn = plMaxHitsToReturn;
            inValue.plHitsTotalNumber = plHitsTotalNumber;
            inValue.psOutXMLSearchResults = psOutXMLSearchResults;
            Trisoft.ISHRemote.Search25ServiceReference.PerformSearchResponse retVal = ((Trisoft.ISHRemote.Search25ServiceReference.Search25Soap)(this)).PerformSearch(inValue);
            psAuthContext = retVal.psAuthContext;
            plHitsTotalNumber = retVal.plHitsTotalNumber;
            psOutXMLSearchResults = retVal.psOutXMLSearchResults;
            return retVal.PerformSearchResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Search25ServiceReference.PerformSearchResponse> PerformSearchAsync(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchRequest request)
        {
            return base.Channel.PerformSearchAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationResponse Trisoft.ISHRemote.Search25ServiceReference.Search25Soap.PerformSearchInPublication(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest request)
        {
            return base.Channel.PerformSearchInPublication(request);
        }
        
        public string PerformSearchInPublication(ref string psAuthContext, string psLogicalId, ref string psVersion, Trisoft.ISHRemote.Search25ServiceReference.eBaselineAutoCompleteMode peAutoCompleteMode, string psXMLQuery, long plMaxHitsToReturn, ref long plHitsTotalNumber, ref string psOutXMLSearchResults)
        {
            Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest inValue = new Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest();
            inValue.psAuthContext = psAuthContext;
            inValue.psLogicalId = psLogicalId;
            inValue.psVersion = psVersion;
            inValue.peAutoCompleteMode = peAutoCompleteMode;
            inValue.psXMLQuery = psXMLQuery;
            inValue.plMaxHitsToReturn = plMaxHitsToReturn;
            inValue.plHitsTotalNumber = plHitsTotalNumber;
            inValue.psOutXMLSearchResults = psOutXMLSearchResults;
            Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationResponse retVal = ((Trisoft.ISHRemote.Search25ServiceReference.Search25Soap)(this)).PerformSearchInPublication(inValue);
            psAuthContext = retVal.psAuthContext;
            psVersion = retVal.psVersion;
            plHitsTotalNumber = retVal.plHitsTotalNumber;
            psOutXMLSearchResults = retVal.psOutXMLSearchResults;
            return retVal.PerformSearchInPublicationResult;
        }
        
        public System.Threading.Tasks.Task<Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationResponse> PerformSearchInPublicationAsync(Trisoft.ISHRemote.Search25ServiceReference.PerformSearchInPublicationRequest request)
        {
            return base.Channel.PerformSearchInPublicationAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Search25Soap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.Search25Soap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.Search25Soap))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/search25.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.Search25Soap12))
            {
                return new System.ServiceModel.EndpointAddress("https://ish.example.com/ISHWS/search25.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            Search25Soap,
            
            Search25Soap12,
        }
    }
}

